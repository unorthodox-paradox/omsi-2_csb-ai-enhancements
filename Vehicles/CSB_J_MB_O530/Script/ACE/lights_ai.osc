'==============================================================================
'
' Lighting subsystem supplement for AI-controlled CSB vehicles
'
'==============================================================================
'
' Compatibility
' -------------
'
' OMSI version                                    : 2.2.032 ~ 2.3.004
' CSB modification version                        : 1.40
' Supported CSB vehicles                          : ETP 3, ETP 11
' ACE modification version                        : 1.5.3
'
'==============================================================================
'
' Overview
' --------
'
' This script controls AI-specific lighting preferences and application thereof
' onto AI-controlled vehicles. It also provides a testing facility for
' conveniently exposing certain metrics (averages and min/max outliers)
' collectively describing AI operation.
'
'==============================================================================
'
' Dependencies
' ------------
'
' This script requires access to variables declared and maintained by the
' following scripts:
' - lights         : For configuration (repaint) variables (whether head fog
'                    lights or other optional light sources are available).
' - ai_pre_cockpit : Target AI state of engine and transmission, as well state
'                    of passenger window adjustment by driver, for
'                    synchronization / timing purposes.
'
' The following scripts depend on the state or functionality of this script:
' - lights         : No dependency per se -- the lighting script simply
'                    delegates its AI-specific processing to this script.
' - ai_pre_cockpit : Synchronization / ordering of lighting-related actions
'                    with actions pertaining to other subsystems (wiper, etc.).
' - cockpit        : Adjustment of lighting-related dashboard controls on the
'                    AI's behalf.
'
'==============================================================================
'
' Contributors
' ------------
'
' - Unorthodox Paradox (2018 ~ 2019):
'   Initial version.
'
'==============================================================================
'==============================================================================


'------------------------------------------------------------------------------
' Starts or stops the testing mode, when the vehicle is user-controlled.
'------------------------------------------------------------------------------
{trigger:lights_ai_test_toggle}
    (L.L.AI) !
    {if}
        (L.L.lights_ai_test_status) 0 =
        {if}
'           // Reset testing variables
            (M.L.lights_ai_test_init)
        {else}
'           // Post-process testing variables
            (M.L.lights_ai_test_finalize)
        {endif}
    {endif}
{end}

'------------------------------------------------------------------------------
' Initialization entry point, delegated from the primary lighting script.
'
' This macro is executed once at initial vehicle spawn time, as well as upon
' each subsequent reload of a saved situation "containing" the vehicle. It
' therefore focuses entirely on the collection of static information, i.e.,
' information that is not expected to (considerably) change throughout the
' duration of a game session.
'------------------------------------------------------------------------------
{macro:lights_ai_init}
{end}

'------------------------------------------------------------------------------
' Main execution unit / entry point, delegated from the primary lighting
' script.
'
' This macro runs once per frame. Portions of it, however, particularly testing
' aspects, may be executed multiple times within the same frame.
'------------------------------------------------------------------------------
{macro:lights_ai_frame}
    (L.L.AI)
    {if}
'       // ----- AI workflow entry point -----

        (L.L.lights_ai_test_status) 2 =
        {if}
'           // Testing mode was previously triggered, so terminate
            (M.L.lights_ai_test_finalize)
        {endif}

'       // Note: Initialization sequence is managed by lights_ai_profile_apply.
        (L.L.lights_ai_initialized) 1 >=
        {if}
            (L.L.lights_ai_initialized) 1 =
            {if}
'               // Generate a new vehicle profile
                (M.L.lights_ai_profile_init)
            {endif}

'           // Collect primitive environmental conditions
            (M.L.lights_ai_env)
        {endif}

'       // Derive current conditions from primitive environmental conditions; compare against profile's conditions; and
'       // adjust lighting target state for cockpit script to act upon, if certain profile condition(s) satisfied.
        (M.L.lights_ai_profile_apply)
    {else}
'       // ----- Testing mode entry point -----

        (L.L.lights_ai_test_status) 2 =
        {if}
'           // Testing already in progress; generate 100 profiles per frame, observing how each one acts under the
'           // established conditions.

'           // Notes:
'           // - It is considerably more efficient to execute the testing logic multiple times during each frame, than
'           //   once per frame.
'           // - Performance does of course suffer under this arrangement (we observed a rough 50% decline). However,
'           //   less than a minute of lag is preferable to having to wait for several minutes for a full test run to
'           //   complete.
'           // - As things currently stand, a full test run is 10000 samples. At 100 samples/frame, and a conservative
'           //   frame rate of 10 fps while testing is in progress, testing would take 10 seconds, which we consider
'           //   bearable.

'           // XXX: The number of iterations per frame is effectively hardcoded. It could be made dynamically
'           //      configurable, but the refactoring cost was deemed too high.

            (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run)
            (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run)
            (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run)
            (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run)
            (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run)
            (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run)
            (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run)
            (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run)
            (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run)
            (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run)
            (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run)
            (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run)
            (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run)
            (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run)
            (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run)
            (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run)
            (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run)
            (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run)
            (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run)
            (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run) (M.L.lights_ai_test_run)
        {else}
'           // Cause reinitialization of primitive environmental conditions for either next testing round, or next AI
'           // takeover.
            0 (S.L.lights_ai_initialized)
        {endif}
    {endif}
{end}

'------------------------------------------------------------------------------
' Resets the state of the testing variables during the start-up phase of a new
' testing round. It also establishes the static aspects of the testing context
' (temporal and primitive environmental conditions).
'------------------------------------------------------------------------------
{macro:lights_ai_test_init}
'   // Note: Variables prefixed "lights_ai_ai_xxx" generally correspond to OMSI's predefined "AI_xxx" variables. During
'   //       testing we assign our own values to them to emulate the AI; during normal AI workflow we assign their
'   //       "normative" counterparts' values to them. Doing so enables us to reuse the script's profile generation and
'   //       application logic as-is in either context (AI vs testing / AI emulation).
'   //       Important exception: AI_Light and AI_Interiorlight, whose values are retained as-is from the last time the
'   //       AI controlled the vehicle (there is no way of reliably "guessing" them). It is therefore of great
'   //       importance that the user conducting tests ensure that the vehicle was previously AI-controlled, and that
'   //       primitive conditions did not change in the meantime (between the time the user took over the vehicle, and
'   //       the time testing was initiated), for test output may otherwise be erroneous.

'   // ----- Test context variables -----

    1 (S.L.lights_ai_test_status) (S.L.lights_ai_ai_engine)

    0 (S.L.lights_ai_test_ctx_total_configs)
        (S.L.lights_ai_test_ctx_ai_light)
        (S.L.lights_ai_test_ctx_sun_alt) (S.L.lights_ai_test_ctx_env_brightness_omsi) (S.L.lights_ai_test_ctx_env_brightness_optimistic_min) (S.L.lights_ai_test_ctx_env_brightness_pessimistic_min)
        (S.L.lights_ai_test_ctx_precip_type) (S.L.lights_ai_test_ctx_env_wetness) (S.L.lights_ai_test_ctx_env_temp)

        (S.L.lights_ai_test_ext_seeing_sun_alt_configs_without_drl) (S.L.lights_ai_test_ext_seeing_sun_alt_avg_without_drl)
        (S.L.lights_ai_test_ext_seeing_sun_alt_configs_drl) (S.L.lights_ai_test_ext_seeing_sun_alt_avg_drl)
        (S.L.lights_ai_test_ext_seeing_sun_alt_configs) (S.L.lights_ai_test_ext_seeing_sun_alt_avg)

'   // ----- Context-insensitive test metrics -----

    91 (S.L.lights_ai_test_ext_seeing_sun_alt_min_without_drl) (S.L.lights_ai_test_ext_seeing_sun_alt_min_drl) (S.L.lights_ai_test_ext_seeing_sun_alt_min)
    -91 (S.L.lights_ai_test_ext_seeing_sun_alt_max_without_drl) (S.L.lights_ai_test_ext_seeing_sun_alt_max_drl) (S.L.lights_ai_test_ext_seeing_sun_alt_max)

    0 (S.L.lights_ai_test_ext_seeing_brightness_configs_without_drl) (S.L.lights_ai_test_ext_seeing_brightness_avg_without_drl)
        (S.L.lights_ai_test_ext_seeing_brightness_configs_drl) (S.L.lights_ai_test_ext_seeing_brightness_avg_drl)
        (S.L.lights_ai_test_ext_seeing_brightness_configs) (S.L.lights_ai_test_ext_seeing_brightness_avg)

    2 (S.L.lights_ai_test_ext_seeing_brightness_min_without_drl) (S.L.lights_ai_test_ext_seeing_brightness_min_drl) (S.L.lights_ai_test_ext_seeing_brightness_min)
    -2 (S.L.lights_ai_test_ext_seeing_brightness_max_without_drl) (S.L.lights_ai_test_ext_seeing_brightness_max_drl) (S.L.lights_ai_test_ext_seeing_brightness_max)

    0 (S.L.lights_ai_test_ext_seeing_rain_rate_configs_without_drl) (S.L.lights_ai_test_ext_seeing_rain_rate_avg_without_drl)
        (S.L.lights_ai_test_ext_seeing_rain_rate_configs_drl) (S.L.lights_ai_test_ext_seeing_rain_rate_avg_drl)
        (S.L.lights_ai_test_ext_seeing_rain_rate_configs) (S.L.lights_ai_test_ext_seeing_rain_rate_avg)

    2 (S.L.lights_ai_test_ext_seeing_rain_rate_min_without_drl) (S.L.lights_ai_test_ext_seeing_rain_rate_min_drl) (S.L.lights_ai_test_ext_seeing_rain_rate_min)
    -2 (S.L.lights_ai_test_ext_seeing_rain_rate_max_without_drl) (S.L.lights_ai_test_ext_seeing_rain_rate_max_drl) (S.L.lights_ai_test_ext_seeing_rain_rate_max)

    0 (S.L.lights_ai_test_ext_seeing_snow_rate_configs_without_drl) (S.L.lights_ai_test_ext_seeing_snow_rate_avg_without_drl)
        (S.L.lights_ai_test_ext_seeing_snow_rate_configs_drl) (S.L.lights_ai_test_ext_seeing_snow_rate_avg_drl)
        (S.L.lights_ai_test_ext_seeing_snow_rate_configs) (S.L.lights_ai_test_ext_seeing_snow_rate_avg)

    2 (S.L.lights_ai_test_ext_seeing_snow_rate_min_without_drl) (S.L.lights_ai_test_ext_seeing_snow_rate_min_drl) (S.L.lights_ai_test_ext_seeing_snow_rate_min)
    -2 (S.L.lights_ai_test_ext_seeing_snow_rate_max_without_drl) (S.L.lights_ai_test_ext_seeing_snow_rate_max_drl) (S.L.lights_ai_test_ext_seeing_snow_rate_max)

    0 (S.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_configs_without_drl) (S.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_avg_without_drl)
        (S.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_configs_drl) (S.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_avg_drl)
        (S.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_configs) (S.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_avg)

    91 (S.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_min_without_drl) (S.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_min_drl) (S.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_min)
    -91 (S.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_max_without_drl) (S.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_max_drl) (S.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_max)

    0 (S.L.lights_ai_test_ext_seeing_prolonging_rain_rate_configs_without_drl) (S.L.lights_ai_test_ext_seeing_prolonging_rain_rate_avg_without_drl)
        (S.L.lights_ai_test_ext_seeing_prolonging_rain_rate_configs_drl) (S.L.lights_ai_test_ext_seeing_prolonging_rain_rate_avg_drl)
        (S.L.lights_ai_test_ext_seeing_prolonging_rain_rate_configs) (S.L.lights_ai_test_ext_seeing_prolonging_rain_rate_avg)

    2 (S.L.lights_ai_test_ext_seeing_prolonging_rain_rate_min_without_drl) (S.L.lights_ai_test_ext_seeing_prolonging_rain_rate_min_drl) (S.L.lights_ai_test_ext_seeing_prolonging_rain_rate_min)
    -2 (S.L.lights_ai_test_ext_seeing_prolonging_rain_rate_max_without_drl) (S.L.lights_ai_test_ext_seeing_prolonging_rain_rate_max_drl) (S.L.lights_ai_test_ext_seeing_prolonging_rain_rate_max)

    0 (S.L.lights_ai_test_ext_seeing_prolonging_snow_rate_configs_without_drl) (S.L.lights_ai_test_ext_seeing_prolonging_snow_rate_avg_without_drl)
        (S.L.lights_ai_test_ext_seeing_prolonging_snow_rate_configs_drl) (S.L.lights_ai_test_ext_seeing_prolonging_snow_rate_avg_drl)
        (S.L.lights_ai_test_ext_seeing_prolonging_snow_rate_configs) (S.L.lights_ai_test_ext_seeing_prolonging_snow_rate_avg)

    2 (S.L.lights_ai_test_ext_seeing_prolonging_snow_rate_min_without_drl) (S.L.lights_ai_test_ext_seeing_prolonging_snow_rate_min_drl) (S.L.lights_ai_test_ext_seeing_prolonging_snow_rate_min)
    -2 (S.L.lights_ai_test_ext_seeing_prolonging_snow_rate_max_without_drl) (S.L.lights_ai_test_ext_seeing_prolonging_snow_rate_max_drl) (S.L.lights_ai_test_ext_seeing_prolonging_snow_rate_max)

    0 (S.L.lights_ai_test_ext_seeing_reduced_sun_alt_configs_without_drl) (S.L.lights_ai_test_ext_seeing_reduced_sun_alt_avg_without_drl)
        (S.L.lights_ai_test_ext_seeing_reduced_sun_alt_configs_drl) (S.L.lights_ai_test_ext_seeing_reduced_sun_alt_avg_drl)
        (S.L.lights_ai_test_ext_seeing_reduced_sun_alt_configs) (S.L.lights_ai_test_ext_seeing_reduced_sun_alt_avg)

    91 (S.L.lights_ai_test_ext_seeing_reduced_sun_alt_min_without_drl) (S.L.lights_ai_test_ext_seeing_reduced_sun_alt_min_drl) (S.L.lights_ai_test_ext_seeing_reduced_sun_alt_min)
    -91 (S.L.lights_ai_test_ext_seeing_reduced_sun_alt_max_without_drl) (S.L.lights_ai_test_ext_seeing_reduced_sun_alt_max_drl) (S.L.lights_ai_test_ext_seeing_reduced_sun_alt_max)

    0 (S.L.lights_ai_test_ext_seeing_reduced_brightness_configs_without_drl) (S.L.lights_ai_test_ext_seeing_reduced_brightness_avg_without_drl)
        (S.L.lights_ai_test_ext_seeing_reduced_brightness_configs_drl) (S.L.lights_ai_test_ext_seeing_reduced_brightness_avg_drl)
        (S.L.lights_ai_test_ext_seeing_reduced_brightness_configs) (S.L.lights_ai_test_ext_seeing_reduced_brightness_avg)

    2 (S.L.lights_ai_test_ext_seeing_reduced_brightness_min_without_drl) (S.L.lights_ai_test_ext_seeing_reduced_brightness_min_drl) (S.L.lights_ai_test_ext_seeing_reduced_brightness_min)
    -2 (S.L.lights_ai_test_ext_seeing_reduced_brightness_max_without_drl) (S.L.lights_ai_test_ext_seeing_reduced_brightness_max_drl) (S.L.lights_ai_test_ext_seeing_reduced_brightness_max)

    0 (S.L.lights_ai_test_ext_seeing_reduced_rain_rate_configs_without_drl) (S.L.lights_ai_test_ext_seeing_reduced_rain_rate_avg_without_drl)
        (S.L.lights_ai_test_ext_seeing_reduced_rain_rate_configs_drl) (S.L.lights_ai_test_ext_seeing_reduced_rain_rate_avg_drl)
        (S.L.lights_ai_test_ext_seeing_reduced_rain_rate_configs) (S.L.lights_ai_test_ext_seeing_reduced_rain_rate_avg)

    2 (S.L.lights_ai_test_ext_seeing_reduced_rain_rate_min_without_drl) (S.L.lights_ai_test_ext_seeing_reduced_rain_rate_min_drl) (S.L.lights_ai_test_ext_seeing_reduced_rain_rate_min)
    -2 (S.L.lights_ai_test_ext_seeing_reduced_rain_rate_max_without_drl) (S.L.lights_ai_test_ext_seeing_reduced_rain_rate_max_drl) (S.L.lights_ai_test_ext_seeing_reduced_rain_rate_max)

    0 (S.L.lights_ai_test_ext_seeing_reduced_snow_rate_configs_without_drl) (S.L.lights_ai_test_ext_seeing_reduced_snow_rate_avg_without_drl)
        (S.L.lights_ai_test_ext_seeing_reduced_snow_rate_configs_drl) (S.L.lights_ai_test_ext_seeing_reduced_snow_rate_avg_drl)
        (S.L.lights_ai_test_ext_seeing_reduced_snow_rate_configs) (S.L.lights_ai_test_ext_seeing_reduced_snow_rate_avg)

    2 (S.L.lights_ai_test_ext_seeing_reduced_snow_rate_min_without_drl) (S.L.lights_ai_test_ext_seeing_reduced_snow_rate_min_drl) (S.L.lights_ai_test_ext_seeing_reduced_snow_rate_min)
    -2 (S.L.lights_ai_test_ext_seeing_reduced_snow_rate_max_without_drl) (S.L.lights_ai_test_ext_seeing_reduced_snow_rate_max_drl) (S.L.lights_ai_test_ext_seeing_reduced_snow_rate_max)

    0 (S.L.lights_ai_test_ext_on_for_seeing_reduced_percent_without_drl) (S.L.lights_ai_test_ext_on_for_seeing_reduced_percent_drl) (S.L.lights_ai_test_ext_on_for_seeing_reduced_percent)

        (S.L.lights_ai_test_ext_seeing_adverse_brightness_configs_without_drl) (S.L.lights_ai_test_ext_seeing_adverse_brightness_avg_without_drl)
        (S.L.lights_ai_test_ext_seeing_adverse_brightness_configs_drl) (S.L.lights_ai_test_ext_seeing_adverse_brightness_avg_drl)
        (S.L.lights_ai_test_ext_seeing_adverse_brightness_configs) (S.L.lights_ai_test_ext_seeing_adverse_brightness_avg)

    2 (S.L.lights_ai_test_ext_seeing_adverse_brightness_min_without_drl) (S.L.lights_ai_test_ext_seeing_adverse_brightness_min_drl) (S.L.lights_ai_test_ext_seeing_adverse_brightness_min)
    -2 (S.L.lights_ai_test_ext_seeing_adverse_brightness_max_without_drl) (S.L.lights_ai_test_ext_seeing_adverse_brightness_max_drl) (S.L.lights_ai_test_ext_seeing_adverse_brightness_max)

    0 (S.L.lights_ai_test_ext_seeing_adverse_rain_rate_configs_without_drl) (S.L.lights_ai_test_ext_seeing_adverse_rain_rate_avg_without_drl)
        (S.L.lights_ai_test_ext_seeing_adverse_rain_rate_configs_drl) (S.L.lights_ai_test_ext_seeing_adverse_rain_rate_avg_drl)
        (S.L.lights_ai_test_ext_seeing_adverse_rain_rate_configs) (S.L.lights_ai_test_ext_seeing_adverse_rain_rate_avg)

    2 (S.L.lights_ai_test_ext_seeing_adverse_rain_rate_min_without_drl) (S.L.lights_ai_test_ext_seeing_adverse_rain_rate_min_drl) (S.L.lights_ai_test_ext_seeing_adverse_rain_rate_min)
    -2 (S.L.lights_ai_test_ext_seeing_adverse_rain_rate_max_without_drl) (S.L.lights_ai_test_ext_seeing_adverse_rain_rate_max_drl) (S.L.lights_ai_test_ext_seeing_adverse_rain_rate_max)

    0 (S.L.lights_ai_test_ext_seeing_adverse_snow_rate_configs_without_drl) (S.L.lights_ai_test_ext_seeing_adverse_snow_rate_avg_without_drl)
        (S.L.lights_ai_test_ext_seeing_adverse_snow_rate_configs_drl) (S.L.lights_ai_test_ext_seeing_adverse_snow_rate_avg_drl)
        (S.L.lights_ai_test_ext_seeing_adverse_snow_rate_configs) (S.L.lights_ai_test_ext_seeing_adverse_snow_rate_avg)

    2 (S.L.lights_ai_test_ext_seeing_adverse_snow_rate_min_without_drl) (S.L.lights_ai_test_ext_seeing_adverse_snow_rate_min_drl) (S.L.lights_ai_test_ext_seeing_adverse_snow_rate_min)
    -2 (S.L.lights_ai_test_ext_seeing_adverse_snow_rate_max_without_drl) (S.L.lights_ai_test_ext_seeing_adverse_snow_rate_max_drl) (S.L.lights_ai_test_ext_seeing_adverse_snow_rate_max)

    0 (S.L.lights_ai_test_ext_on_for_seeing_adverse_percent)

        (S.L.lights_ai_test_ext_seen_sun_alt_configs_without_drl) (S.L.lights_ai_test_ext_seen_sun_alt_avg_without_drl)
        (S.L.lights_ai_test_ext_seen_sun_alt_configs_drl) (S.L.lights_ai_test_ext_seen_sun_alt_avg_drl)
        (S.L.lights_ai_test_ext_seen_sun_alt_configs) (S.L.lights_ai_test_ext_seen_sun_alt_avg)

    91 (S.L.lights_ai_test_ext_seen_sun_alt_min_without_drl) (S.L.lights_ai_test_ext_seen_sun_alt_min_drl) (S.L.lights_ai_test_ext_seen_sun_alt_min)
    -91 (S.L.lights_ai_test_ext_seen_sun_alt_max_without_drl) (S.L.lights_ai_test_ext_seen_sun_alt_max_drl) (S.L.lights_ai_test_ext_seen_sun_alt_max)

    0 (S.L.lights_ai_test_ext_on_for_being_seen_percent_without_drl) (S.L.lights_ai_test_ext_on_for_being_seen_percent_drl) (S.L.lights_ai_test_ext_on_for_being_seen_percent)

        (S.L.lights_ai_test_ext_always_on_for_being_seen_percent_without_drl)
        (S.L.lights_ai_test_ext_always_on_for_being_seen_percent_drl)
        (S.L.lights_ai_test_ext_always_on_for_being_seen_percent)

        (S.L.lights_ai_test_ext_off_when_engine_off_sun_alt_configs_without_drl) (S.L.lights_ai_test_ext_off_when_engine_off_sun_alt_avg_without_drl)
        (S.L.lights_ai_test_ext_off_when_engine_off_sun_alt_configs_drl) (S.L.lights_ai_test_ext_off_when_engine_off_sun_alt_avg_drl)
        (S.L.lights_ai_test_ext_off_when_engine_off_sun_alt_configs) (S.L.lights_ai_test_ext_off_when_engine_off_sun_alt_avg)

    91 (S.L.lights_ai_test_ext_off_when_engine_off_sun_alt_min_without_drl) (S.L.lights_ai_test_ext_off_when_engine_off_sun_alt_min_drl) (S.L.lights_ai_test_ext_off_when_engine_off_sun_alt_min)
    -91 (S.L.lights_ai_test_ext_off_when_engine_off_sun_alt_max_without_drl) (S.L.lights_ai_test_ext_off_when_engine_off_sun_alt_max_drl) (S.L.lights_ai_test_ext_off_when_engine_off_sun_alt_max)

    0 (S.L.lights_ai_test_ext_off_when_engine_off_brightness_configs_without_drl) (S.L.lights_ai_test_ext_off_when_engine_off_brightness_avg_without_drl)
        (S.L.lights_ai_test_ext_off_when_engine_off_brightness_configs_drl) (S.L.lights_ai_test_ext_off_when_engine_off_brightness_avg_drl)
        (S.L.lights_ai_test_ext_off_when_engine_off_brightness_configs) (S.L.lights_ai_test_ext_off_when_engine_off_brightness_avg)

    2 (S.L.lights_ai_test_ext_off_when_engine_off_brightness_min_without_drl) (S.L.lights_ai_test_ext_off_when_engine_off_brightness_min_drl) (S.L.lights_ai_test_ext_off_when_engine_off_brightness_min)
    -2 (S.L.lights_ai_test_ext_off_when_engine_off_brightness_max_without_drl) (S.L.lights_ai_test_ext_off_when_engine_off_brightness_max_drl) (S.L.lights_ai_test_ext_off_when_engine_off_brightness_max)

    0 (S.L.lights_ai_test_ext_off_when_engine_off_rain_rate_configs_without_drl) (S.L.lights_ai_test_ext_off_when_engine_off_rain_rate_avg_without_drl)
        (S.L.lights_ai_test_ext_off_when_engine_off_rain_rate_configs_drl) (S.L.lights_ai_test_ext_off_when_engine_off_rain_rate_avg_drl)
        (S.L.lights_ai_test_ext_off_when_engine_off_rain_rate_configs) (S.L.lights_ai_test_ext_off_when_engine_off_rain_rate_avg)

    2 (S.L.lights_ai_test_ext_off_when_engine_off_rain_rate_min_without_drl) (S.L.lights_ai_test_ext_off_when_engine_off_rain_rate_min_drl) (S.L.lights_ai_test_ext_off_when_engine_off_rain_rate_min)
    -2 (S.L.lights_ai_test_ext_off_when_engine_off_rain_rate_max_without_drl) (S.L.lights_ai_test_ext_off_when_engine_off_rain_rate_max_drl) (S.L.lights_ai_test_ext_off_when_engine_off_rain_rate_max)

    0 (S.L.lights_ai_test_ext_off_when_engine_off_snow_rate_configs_without_drl) (S.L.lights_ai_test_ext_off_when_engine_off_snow_rate_avg_without_drl)
        (S.L.lights_ai_test_ext_off_when_engine_off_snow_rate_configs_drl) (S.L.lights_ai_test_ext_off_when_engine_off_snow_rate_avg_drl)
        (S.L.lights_ai_test_ext_off_when_engine_off_snow_rate_configs) (S.L.lights_ai_test_ext_off_when_engine_off_snow_rate_avg)

    2 (S.L.lights_ai_test_ext_off_when_engine_off_snow_rate_min_without_drl) (S.L.lights_ai_test_ext_off_when_engine_off_snow_rate_min_drl) (S.L.lights_ai_test_ext_off_when_engine_off_snow_rate_min)
    -2 (S.L.lights_ai_test_ext_off_when_engine_off_snow_rate_max_without_drl) (S.L.lights_ai_test_ext_off_when_engine_off_snow_rate_max_drl) (S.L.lights_ai_test_ext_off_when_engine_off_snow_rate_max)

    0 (S.L.lights_ai_test_ext_off_when_engine_off_percent_without_drl)
        (S.L.lights_ai_test_ext_off_when_engine_off_percent_drl)
        (S.L.lights_ai_test_ext_off_when_engine_off_percent)

        (S.L.lights_ai_test_ext_off_when_engine_off_nighttime_percent_without_drl)
        (S.L.lights_ai_test_ext_off_when_engine_off_nighttime_percent_drl)
        (S.L.lights_ai_test_ext_off_when_engine_off_nighttime_percent)

        (S.L.lights_ai_test_ext_darkness_tolerance_configs) (S.L.lights_ai_test_ext_darkness_tolerance_avg)
        (S.L.lights_ai_test_ext_brightness_tolerance_configs) (S.L.lights_ai_test_ext_brightness_tolerance_avg)

    10000 (S.L.lights_ai_test_ext_darkness_tolerance_min) (S.L.lights_ai_test_ext_brightness_tolerance_min)
    -10000 (S.L.lights_ai_test_ext_darkness_tolerance_max) (S.L.lights_ai_test_ext_brightness_tolerance_max)

    0 (S.L.lights_ai_test_int_sun_alt_configs) (S.L.lights_ai_test_int_sun_alt_avg)

    91 (S.L.lights_ai_test_int_sun_alt_min)
    -91 (S.L.lights_ai_test_int_sun_alt_max)

    0 (S.L.lights_ai_test_int_always_on_percent)

        (S.L.lights_ai_test_int_brightness_configs) (S.L.lights_ai_test_int_brightness_avg)

    2 (S.L.lights_ai_test_int_brightness_min)
    -2 (S.L.lights_ai_test_int_brightness_max)

    0 (S.L.lights_ai_test_int_dimmed_sun_alt_configs) (S.L.lights_ai_test_int_dimmed_sun_alt_avg)

    91 (S.L.lights_ai_test_int_dimmed_sun_alt_min)
    -91 (S.L.lights_ai_test_int_dimmed_sun_alt_max)

    0 (S.L.lights_ai_test_int_dimmed_brightness_configs) (S.L.lights_ai_test_int_dimmed_brightness_avg)

    2 (S.L.lights_ai_test_int_dimmed_brightness_min)
    -2 (S.L.lights_ai_test_int_dimmed_brightness_max)

    0 (S.L.lights_ai_test_int_off_when_on_service_trip_percent)

        (S.L.lights_ai_test_int_off_when_on_service_trip_daytime_percent)

        (S.L.lights_ai_test_int_off_when_on_service_trip_time_low_configs) (S.L.lights_ai_test_int_off_when_on_service_trip_time_low_avg)

    100000 (S.L.lights_ai_test_int_off_when_on_service_trip_time_low_min)
    -100000 (S.L.lights_ai_test_int_off_when_on_service_trip_time_low_max)

    0 (S.L.lights_ai_test_int_off_when_on_service_trip_time_high_configs) (S.L.lights_ai_test_int_off_when_on_service_trip_time_high_avg)

    100000 (S.L.lights_ai_test_int_off_when_on_service_trip_time_high_min)
    -100000 (S.L.lights_ai_test_int_off_when_on_service_trip_time_high_max)

    0 (S.L.lights_ai_test_int_off_when_on_service_trip_sun_alt_configs) (S.L.lights_ai_test_int_off_when_on_service_trip_sun_alt_avg)

    91 (S.L.lights_ai_test_int_off_when_on_service_trip_sun_alt_min)
    -91 (S.L.lights_ai_test_int_off_when_on_service_trip_sun_alt_max)

    0 (S.L.lights_ai_test_int_off_when_on_service_trip_brightness_configs) (S.L.lights_ai_test_int_off_when_on_service_trip_brightness_avg)

    2 (S.L.lights_ai_test_int_off_when_on_service_trip_brightness_min)
    -2 (S.L.lights_ai_test_int_off_when_on_service_trip_brightness_max)

    0 (S.L.lights_ai_test_int_off_when_engine_off_percent)

        (S.L.lights_ai_test_int_off_when_engine_off_sun_alt_configs) (S.L.lights_ai_test_int_off_when_engine_off_sun_alt_avg)

    91 (S.L.lights_ai_test_int_off_when_engine_off_sun_alt_min)
    -91 (S.L.lights_ai_test_int_off_when_engine_off_sun_alt_max)

    0 (S.L.lights_ai_test_int_off_when_engine_off_brightness_configs) (S.L.lights_ai_test_int_off_when_engine_off_brightness_avg)

    2 (S.L.lights_ai_test_int_off_when_engine_off_brightness_min)
    -2 (S.L.lights_ai_test_int_off_when_engine_off_brightness_max)

    0 (S.L.lights_ai_test_int_darkness_tolerance_configs) (S.L.lights_ai_test_int_darkness_tolerance_avg)
        (S.L.lights_ai_test_int_brightness_tolerance_configs) (S.L.lights_ai_test_int_brightness_tolerance_avg)

    10000 (S.L.lights_ai_test_int_darkness_tolerance_min) (S.L.lights_ai_test_int_brightness_tolerance_min)
    -10000 (S.L.lights_ai_test_int_darkness_tolerance_max) (S.L.lights_ai_test_int_brightness_tolerance_max)

'   // ----- Context-sensitive test metrics -----

    0 (S.L.lights_ai_test_ctx_ext_off_percent_without_drl) (S.L.lights_ai_test_ctx_standstill_percent_without_drl) (S.L.lights_ai_test_ctx_standstill_and_head_fog_lights_percent_without_drl) (S.L.lights_ai_test_ctx_standstill_and_full_fog_lights_percent_without_drl) (S.L.lights_ai_test_ctx_headlights_percent_without_drl) (S.L.lights_ai_test_ctx_headlights_and_head_fog_lights_percent_without_drl) (S.L.lights_ai_test_ctx_headlights_and_full_fog_lights_percent_without_drl)
        (S.L.lights_ai_test_ctx_ext_off_percent_drl) (S.L.lights_ai_test_ctx_standstill_percent_drl) (S.L.lights_ai_test_ctx_standstill_and_head_fog_lights_percent_drl) (S.L.lights_ai_test_ctx_standstill_and_full_fog_lights_percent_drl) (S.L.lights_ai_test_ctx_headlights_percent_drl) (S.L.lights_ai_test_ctx_headlights_and_head_fog_lights_percent_drl) (S.L.lights_ai_test_ctx_headlights_and_full_fog_lights_percent_drl)
        (S.L.lights_ai_test_ctx_ext_off_percent) (S.L.lights_ai_test_ctx_standstill_percent) (S.L.lights_ai_test_ctx_standstill_and_head_fog_lights_percent) (S.L.lights_ai_test_ctx_standstill_and_full_fog_lights_percent) (S.L.lights_ai_test_ctx_headlights_percent) (S.L.lights_ai_test_ctx_headlights_and_head_fog_lights_percent) (S.L.lights_ai_test_ctx_headlights_and_full_fog_lights_percent)

        (S.L.lights_ai_test_ctx_ext_on_for_seeing_percent_without_drl) (S.L.lights_ai_test_ctx_ext_on_for_seeing_reduced_percent_without_drl) (S.L.lights_ai_test_ctx_ext_on_for_seeing_adverse_percent_without_drl) (S.L.lights_ai_test_ctx_ext_on_for_being_seen_percent_without_drl)
        (S.L.lights_ai_test_ctx_ext_on_for_seeing_percent_drl) (S.L.lights_ai_test_ctx_ext_on_for_seeing_reduced_percent_drl) (S.L.lights_ai_test_ctx_ext_on_for_seeing_adverse_percent_drl) (S.L.lights_ai_test_ctx_ext_on_for_being_seen_percent_drl)
        (S.L.lights_ai_test_ctx_ext_on_for_seeing_percent) (S.L.lights_ai_test_ctx_ext_on_for_seeing_reduced_percent) (S.L.lights_ai_test_ctx_ext_on_for_seeing_adverse_percent) (S.L.lights_ai_test_ctx_ext_on_for_being_seen_percent)

        (S.L.lights_ai_test_ctx_ext_off_when_engine_off_percent_without_drl)
        (S.L.lights_ai_test_ctx_ext_off_when_engine_off_percent_drl)
        (S.L.lights_ai_test_ctx_ext_off_when_engine_off_percent)

        (S.L.lights_ai_test_ctx_int_off_percent) (S.L.lights_ai_test_ctx_int_dimmed_percent) (S.L.lights_ai_test_ctx_int_full_percent)

        (S.L.lights_ai_test_ctx_int_off_when_engine_off_percent)

        (S.L.lights_ai_test_ctx_int_off_when_on_service_trip_percent)

        (S.L.lights_ai_test_ctx_ext_on_and_int_off_percent_without_drl)
        (S.L.lights_ai_test_ctx_ext_on_and_int_off_percent_drl)
        (S.L.lights_ai_test_ctx_ext_on_and_int_off_percent)

        (S.L.lights_ai_test_ctx_ext_off_and_int_on_percent_without_drl)
        (S.L.lights_ai_test_ctx_ext_off_and_int_on_percent_drl)
        (S.L.lights_ai_test_ctx_ext_off_and_int_on_percent)

'   // Establish the static portion of the new testing context
    (L.S.Time) (S.L.lights_ai_test_ctx_time_of_day)
    (L.S.Month) (S.L.lights_ai_test_ctx_month)
    (M.L.lights_ai_env)

    2 (S.L.lights_ai_test_status)
    (T.L.ev_IBIS_pieperror)
{end}

'------------------------------------------------------------------------------
' A complete test. This macro generates a new vehicle profile and updates the
' test metrics based on that profile's configuration and/or behavior under the
' current testing context. Note that "physical" vehicle state is unaffected.
'------------------------------------------------------------------------------
{macro:lights_ai_test_run}
    (L.L.lights_ai_test_status) 2 = (L.L.lights_ai_test_ctx_total_configs) 10000 < &&
    {if}
'       // Profile generation
        (M.L.lights_ai_profile_init)

        0 (S.L.lights_ai_initialized)
        1 (S.L.lights_ai_head_fog_lights_installed)
        0 (S.L.lights_ai_drl_installed)

'       // Note: This invocation does not alter the testing context's already established primitive environmental
'       //       conditions. It merely "grabs" the current conditions so as to enable the output-reviewing user
'       //       to compare the two (testing context vs current context) later on, e.g. for debugging purposes.
        (M.L.lights_ai_env)

'       // Force the profile to be applied immediately, that is, during this frame. See inline notes in
'       // lights_ai_profile_apply to understand why that would otherwise not be the case.
        (M.L.lights_ai_profile_apply)
        (M.L.lights_ai_profile_apply)
        (M.L.lights_ai_profile_apply)

'       // xxx_total_configs variables are needed for computing averages in lights_ai_test_finalize.
        (L.L.lights_ai_test_ctx_total_configs) 1 + (S.L.lights_ai_test_ctx_total_configs)

'       // ----- Context-insensitive test metrics -----
'       // (context-insensitive in the sense that these metrics describe vehicle traits independently of the current
'       // context; e.g., "what percentage of vehicles _would_ use fog lights _if_ it _were_ foggy?")

'       // min, max, and avg for-seeing solar elevation angles

'       // ...non-DRL-equipped
        (L.L.lights_ai_test_ext_seeing_sun_alt_configs_without_drl) 1 + (S.L.lights_ai_test_ext_seeing_sun_alt_configs_without_drl)
        (L.L.lights_ai_ext_lighting_for_seeing_min_sun_alt) s1 (L.L.lights_ai_test_ext_seeing_sun_alt_avg_without_drl) + (S.L.lights_ai_test_ext_seeing_sun_alt_avg_without_drl)
        l1 (L.L.lights_ai_test_ext_seeing_sun_alt_min_without_drl) min (S.L.lights_ai_test_ext_seeing_sun_alt_min_without_drl)
        l1 (L.L.lights_ai_test_ext_seeing_sun_alt_max_without_drl) max (S.L.lights_ai_test_ext_seeing_sun_alt_max_without_drl)

        (L.L.lights_ai_test_ext_seeing_sun_alt_configs) 1 + (S.L.lights_ai_test_ext_seeing_sun_alt_configs)
        l1 (L.L.lights_ai_test_ext_seeing_sun_alt_avg) + (S.L.lights_ai_test_ext_seeing_sun_alt_avg)
        l1 (L.L.lights_ai_test_ext_seeing_sun_alt_min) min (S.L.lights_ai_test_ext_seeing_sun_alt_min)
        l1 (L.L.lights_ai_test_ext_seeing_sun_alt_max) max (S.L.lights_ai_test_ext_seeing_sun_alt_max)

'       // ...DRL-equipped
        (L.L.lights_ai_test_ext_seeing_sun_alt_configs_drl) 1 + (S.L.lights_ai_test_ext_seeing_sun_alt_configs_drl)
        (L.L.lights_ai_ext_lighting_for_seeing_min_sun_alt_drl) s1 (L.L.lights_ai_test_ext_seeing_sun_alt_avg_drl) + (S.L.lights_ai_test_ext_seeing_sun_alt_avg_drl)
        l1 (L.L.lights_ai_test_ext_seeing_sun_alt_min_drl) min (S.L.lights_ai_test_ext_seeing_sun_alt_min_drl)
        l1 (L.L.lights_ai_test_ext_seeing_sun_alt_max_drl) max (S.L.lights_ai_test_ext_seeing_sun_alt_max_drl)

        (L.L.lights_ai_test_ext_seeing_sun_alt_configs) 1 + (S.L.lights_ai_test_ext_seeing_sun_alt_configs)
        l1 (L.L.lights_ai_test_ext_seeing_sun_alt_avg) + (S.L.lights_ai_test_ext_seeing_sun_alt_avg)
        l1 (L.L.lights_ai_test_ext_seeing_sun_alt_min) min (S.L.lights_ai_test_ext_seeing_sun_alt_min)
        l1 (L.L.lights_ai_test_ext_seeing_sun_alt_max) max (S.L.lights_ai_test_ext_seeing_sun_alt_max)

'       // min, max, and avg for-seeing brightness (if applicable to profile)

'       // ...non-DRL-equipped
        (L.L.lights_ai_ext_lighting_for_seeing_min_brightness) s1 -1 = !
        {if}
            (L.L.lights_ai_test_ext_seeing_brightness_configs_without_drl) 1 + (S.L.lights_ai_test_ext_seeing_brightness_configs_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_brightness_avg_without_drl) + (S.L.lights_ai_test_ext_seeing_brightness_avg_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_brightness_min_without_drl) min (S.L.lights_ai_test_ext_seeing_brightness_min_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_brightness_max_without_drl) max (S.L.lights_ai_test_ext_seeing_brightness_max_without_drl)

            (L.L.lights_ai_test_ext_seeing_brightness_configs) 1 + (S.L.lights_ai_test_ext_seeing_brightness_configs)
            l1 (L.L.lights_ai_test_ext_seeing_brightness_avg) + (S.L.lights_ai_test_ext_seeing_brightness_avg)
            l1 (L.L.lights_ai_test_ext_seeing_brightness_min) min (S.L.lights_ai_test_ext_seeing_brightness_min)
            l1 (L.L.lights_ai_test_ext_seeing_brightness_max) max (S.L.lights_ai_test_ext_seeing_brightness_max)
        {endif}

'       // ...DRL-equipped
        (L.L.lights_ai_ext_lighting_for_seeing_min_brightness_drl) s1 -1 = ! (L.L.lights_ai_ext_lighting_for_seeing_min_brightness) -1 = ! &&
        {if}
            (L.L.lights_ai_test_ext_seeing_brightness_configs_drl) 1 + (S.L.lights_ai_test_ext_seeing_brightness_configs_drl)
            l1 (L.L.lights_ai_test_ext_seeing_brightness_avg_drl) + (S.L.lights_ai_test_ext_seeing_brightness_avg_drl)
            l1 (L.L.lights_ai_test_ext_seeing_brightness_min_drl) min (S.L.lights_ai_test_ext_seeing_brightness_min_drl)
            l1 (L.L.lights_ai_test_ext_seeing_brightness_max_drl) max (S.L.lights_ai_test_ext_seeing_brightness_max_drl)

            (L.L.lights_ai_test_ext_seeing_brightness_configs) 1 + (S.L.lights_ai_test_ext_seeing_brightness_configs)
            l1 (L.L.lights_ai_test_ext_seeing_brightness_avg) + (S.L.lights_ai_test_ext_seeing_brightness_avg)
            l1 (L.L.lights_ai_test_ext_seeing_brightness_min) min (S.L.lights_ai_test_ext_seeing_brightness_min)
            l1 (L.L.lights_ai_test_ext_seeing_brightness_max) max (S.L.lights_ai_test_ext_seeing_brightness_max)
        {endif}

'       // min, max, and avg for-seeing rain rate (if applicable to profile)

'       // ...non-DRL-equipped
        (L.L.lights_ai_ext_lighting_for_seeing_max_rain_rate) s1 -1 = !
        {if}
            (L.L.lights_ai_test_ext_seeing_rain_rate_configs_without_drl) 1 + (S.L.lights_ai_test_ext_seeing_rain_rate_configs_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_rain_rate_avg_without_drl) + (S.L.lights_ai_test_ext_seeing_rain_rate_avg_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_rain_rate_min_without_drl) min (S.L.lights_ai_test_ext_seeing_rain_rate_min_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_rain_rate_max_without_drl) max (S.L.lights_ai_test_ext_seeing_rain_rate_max_without_drl)

            (L.L.lights_ai_test_ext_seeing_rain_rate_configs) 1 + (S.L.lights_ai_test_ext_seeing_rain_rate_configs)
            l1 (L.L.lights_ai_test_ext_seeing_rain_rate_avg) + (S.L.lights_ai_test_ext_seeing_rain_rate_avg)
            l1 (L.L.lights_ai_test_ext_seeing_rain_rate_min) min (S.L.lights_ai_test_ext_seeing_rain_rate_min)
            l1 (L.L.lights_ai_test_ext_seeing_rain_rate_max) max (S.L.lights_ai_test_ext_seeing_rain_rate_max)
        {endif}

        (L.L.lights_ai_ext_lighting_for_seeing_max_rain_rate_drl) s1 -1 = ! (L.L.lights_ai_ext_lighting_for_seeing_max_rain_rate) -1 = ! &&
        {if}
'       // ...DRL-equipped
            (L.L.lights_ai_test_ext_seeing_rain_rate_configs_drl) 1 + (S.L.lights_ai_test_ext_seeing_rain_rate_configs_drl)
            l1 (L.L.lights_ai_test_ext_seeing_rain_rate_avg_drl) + (S.L.lights_ai_test_ext_seeing_rain_rate_avg_drl)
            l1 (L.L.lights_ai_test_ext_seeing_rain_rate_min_drl) min (S.L.lights_ai_test_ext_seeing_rain_rate_min_drl)
            l1 (L.L.lights_ai_test_ext_seeing_rain_rate_max_drl) max (S.L.lights_ai_test_ext_seeing_rain_rate_max_drl)

            (L.L.lights_ai_test_ext_seeing_rain_rate_configs) 1 + (S.L.lights_ai_test_ext_seeing_rain_rate_configs)
            l1 (L.L.lights_ai_test_ext_seeing_rain_rate_avg) + (S.L.lights_ai_test_ext_seeing_rain_rate_avg)
            l1 (L.L.lights_ai_test_ext_seeing_rain_rate_min) min (S.L.lights_ai_test_ext_seeing_rain_rate_min)
            l1 (L.L.lights_ai_test_ext_seeing_rain_rate_max) max (S.L.lights_ai_test_ext_seeing_rain_rate_max)
        {endif}

'       // min, max, and avg for-seeing snow rate (if applicable to profile)

'       // ...non-DRL-equipped
        (L.L.lights_ai_ext_lighting_for_seeing_max_snow_rate) s1 -1 = ! (L.L.lights_ai_ext_lighting_for_seeing_max_rain_rate) -1 = ! &&
        {if}
            (L.L.lights_ai_test_ext_seeing_snow_rate_configs_without_drl) 1 + (S.L.lights_ai_test_ext_seeing_snow_rate_configs_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_snow_rate_avg_without_drl) + (S.L.lights_ai_test_ext_seeing_snow_rate_avg_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_snow_rate_min_without_drl) min (S.L.lights_ai_test_ext_seeing_snow_rate_min_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_snow_rate_max_without_drl) max (S.L.lights_ai_test_ext_seeing_snow_rate_max_without_drl)

            (L.L.lights_ai_test_ext_seeing_snow_rate_configs) 1 + (S.L.lights_ai_test_ext_seeing_snow_rate_configs)
            l1 (L.L.lights_ai_test_ext_seeing_snow_rate_avg) + (S.L.lights_ai_test_ext_seeing_snow_rate_avg)
            l1 (L.L.lights_ai_test_ext_seeing_snow_rate_min) min (S.L.lights_ai_test_ext_seeing_snow_rate_min)
            l1 (L.L.lights_ai_test_ext_seeing_snow_rate_max) max (S.L.lights_ai_test_ext_seeing_snow_rate_max)
        {endif}

'       // ...DRL-equipped
        (L.L.lights_ai_ext_lighting_for_seeing_max_snow_rate_drl) s1 -1 = ! (L.L.lights_ai_ext_lighting_for_seeing_max_rain_rate) -1 = ! &&
            (L.L.lights_ai_ext_lighting_for_seeing_max_snow_rate) -1 = ! &&
        {if}
            (L.L.lights_ai_test_ext_seeing_snow_rate_configs_drl) 1 + (S.L.lights_ai_test_ext_seeing_snow_rate_configs_drl)
            l1 (L.L.lights_ai_test_ext_seeing_snow_rate_avg_drl) + (S.L.lights_ai_test_ext_seeing_snow_rate_avg_drl)
            l1 (L.L.lights_ai_test_ext_seeing_snow_rate_min_drl) min (S.L.lights_ai_test_ext_seeing_snow_rate_min_drl)
            l1 (L.L.lights_ai_test_ext_seeing_snow_rate_max_drl) max (S.L.lights_ai_test_ext_seeing_snow_rate_max_drl)

            (L.L.lights_ai_test_ext_seeing_snow_rate_configs) 1 + (S.L.lights_ai_test_ext_seeing_snow_rate_configs)
            l1 (L.L.lights_ai_test_ext_seeing_snow_rate_avg) + (S.L.lights_ai_test_ext_seeing_snow_rate_avg)
            l1 (L.L.lights_ai_test_ext_seeing_snow_rate_min) min (S.L.lights_ai_test_ext_seeing_snow_rate_min)
            l1 (L.L.lights_ai_test_ext_seeing_snow_rate_max) max (S.L.lights_ai_test_ext_seeing_snow_rate_max)
        {endif}

'       // min, max, and avg prolonged dusk/dawn solar elevation angle under precipitation (if applicable to profile)

'       // ...non-DRL-equipped
        (L.L.lights_ai_ext_lighting_for_seeing_prolonged_sun_alt_under_precipitation) s1 abs 91 = !
        {if}
            (L.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_configs_without_drl) 1 + (S.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_configs_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_avg_without_drl) + (S.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_avg_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_min_without_drl) min (S.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_min_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_max_without_drl) max (S.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_max_without_drl)

            (L.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_configs) 1 + (S.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_configs)
            l1 (L.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_avg) + (S.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_avg)
            l1 (L.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_min) min (S.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_min)
            l1 (L.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_max) max (S.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_max)
        {endif}

'       // ...DRL-equipped
        (L.L.lights_ai_ext_lighting_for_seeing_prolonged_sun_alt_under_precipitation_drl) s1 abs 91 = !
        {if}
            (L.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_configs_drl) 1 + (S.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_configs_drl)
            l1 (L.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_avg_drl) + (S.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_avg_drl)
            l1 (L.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_min_drl) min (S.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_min_drl)
            l1 (L.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_max_drl) max (S.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_max_drl)

            (L.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_configs) 1 + (S.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_configs)
            l1 (L.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_avg) + (S.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_avg)
            l1 (L.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_min) min (S.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_min)
            l1 (L.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_max) max (S.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_max)
        {endif}

'       // min, max, and avg dusk-/dawn-prolonging rain rate (if applicable to profile)

'       // ...non-DRL-equipped
        (L.L.lights_ai_ext_lighting_for_seeing_dusk_dawn_prolonging_rain_rate) s1 -1 = ! (L.L.lights_ai_ext_lighting_for_seeing_max_rain_rate) -1 = ! &&
        {if}
            (L.L.lights_ai_test_ext_seeing_prolonging_rain_rate_configs_without_drl) 1 + (S.L.lights_ai_test_ext_seeing_prolonging_rain_rate_configs_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_prolonging_rain_rate_avg_without_drl) + (S.L.lights_ai_test_ext_seeing_prolonging_rain_rate_avg_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_prolonging_rain_rate_min_without_drl) min (S.L.lights_ai_test_ext_seeing_prolonging_rain_rate_min_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_prolonging_rain_rate_max_without_drl) max (S.L.lights_ai_test_ext_seeing_prolonging_rain_rate_max_without_drl)

            (L.L.lights_ai_test_ext_seeing_prolonging_rain_rate_configs) 1 + (S.L.lights_ai_test_ext_seeing_prolonging_rain_rate_configs)
            l1 (L.L.lights_ai_test_ext_seeing_prolonging_rain_rate_avg) + (S.L.lights_ai_test_ext_seeing_prolonging_rain_rate_avg)
            l1 (L.L.lights_ai_test_ext_seeing_prolonging_rain_rate_min) min (S.L.lights_ai_test_ext_seeing_prolonging_rain_rate_min)
            l1 (L.L.lights_ai_test_ext_seeing_prolonging_rain_rate_max) max (S.L.lights_ai_test_ext_seeing_prolonging_rain_rate_max)
        {endif}

'       // ...DRL-equipped
        (L.L.lights_ai_ext_lighting_for_seeing_dusk_dawn_prolonging_rain_rate_drl) s1 -1 = ! (L.L.lights_ai_ext_lighting_for_seeing_max_rain_rate) -1 = ! &&
        {if}
            (L.L.lights_ai_test_ext_seeing_prolonging_rain_rate_configs_drl) 1 + (S.L.lights_ai_test_ext_seeing_prolonging_rain_rate_configs_drl)
            l1 (L.L.lights_ai_test_ext_seeing_prolonging_rain_rate_avg_drl) + (S.L.lights_ai_test_ext_seeing_prolonging_rain_rate_avg_drl)
            l1 (L.L.lights_ai_test_ext_seeing_prolonging_rain_rate_min_drl) min (S.L.lights_ai_test_ext_seeing_prolonging_rain_rate_min_drl)
            l1 (L.L.lights_ai_test_ext_seeing_prolonging_rain_rate_max_drl) max (S.L.lights_ai_test_ext_seeing_prolonging_rain_rate_max_drl)

            (L.L.lights_ai_test_ext_seeing_prolonging_rain_rate_configs) 1 + (S.L.lights_ai_test_ext_seeing_prolonging_rain_rate_configs)
            l1 (L.L.lights_ai_test_ext_seeing_prolonging_rain_rate_avg) + (S.L.lights_ai_test_ext_seeing_prolonging_rain_rate_avg)
            l1 (L.L.lights_ai_test_ext_seeing_prolonging_rain_rate_min) min (S.L.lights_ai_test_ext_seeing_prolonging_rain_rate_min)
            l1 (L.L.lights_ai_test_ext_seeing_prolonging_rain_rate_max) max (S.L.lights_ai_test_ext_seeing_prolonging_rain_rate_max)
        {endif}

'       // min, max, and avg dusk-/dawn-prolonging snow rate (if applicable to profile)

'       // ...non-DRL-equipped
        (L.L.lights_ai_ext_lighting_for_seeing_dusk_dawn_prolonging_snow_rate) s1 -1 = ! (L.L.lights_ai_ext_lighting_for_seeing_max_rain_rate) -1 = ! &&
        {if}
            (L.L.lights_ai_test_ext_seeing_prolonging_snow_rate_configs_without_drl) 1 + (S.L.lights_ai_test_ext_seeing_prolonging_snow_rate_configs_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_prolonging_snow_rate_avg_without_drl) + (S.L.lights_ai_test_ext_seeing_prolonging_snow_rate_avg_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_prolonging_snow_rate_min_without_drl) min (S.L.lights_ai_test_ext_seeing_prolonging_snow_rate_min_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_prolonging_snow_rate_max_without_drl) max (S.L.lights_ai_test_ext_seeing_prolonging_snow_rate_max_without_drl)

            (L.L.lights_ai_test_ext_seeing_prolonging_snow_rate_configs) 1 + (S.L.lights_ai_test_ext_seeing_prolonging_snow_rate_configs)
            l1 (L.L.lights_ai_test_ext_seeing_prolonging_snow_rate_avg) + (S.L.lights_ai_test_ext_seeing_prolonging_snow_rate_avg)
            l1 (L.L.lights_ai_test_ext_seeing_prolonging_snow_rate_min) min (S.L.lights_ai_test_ext_seeing_prolonging_snow_rate_min)
            l1 (L.L.lights_ai_test_ext_seeing_prolonging_snow_rate_max) max (S.L.lights_ai_test_ext_seeing_prolonging_snow_rate_max)
        {endif}

'       // ...DRL-equipped
        (L.L.lights_ai_ext_lighting_for_seeing_dusk_dawn_prolonging_snow_rate_drl) s1 -1 = ! (L.L.lights_ai_ext_lighting_for_seeing_max_rain_rate) -1 = ! &&
            (L.L.lights_ai_ext_lighting_for_seeing_max_snow_rate) -1 = ! &&
        {if}
            (L.L.lights_ai_test_ext_seeing_prolonging_snow_rate_configs_drl) 1 + (S.L.lights_ai_test_ext_seeing_prolonging_snow_rate_configs_drl)
            l1 (L.L.lights_ai_test_ext_seeing_prolonging_snow_rate_avg_drl) + (S.L.lights_ai_test_ext_seeing_prolonging_snow_rate_avg_drl)
            l1 (L.L.lights_ai_test_ext_seeing_prolonging_snow_rate_min_drl) min (S.L.lights_ai_test_ext_seeing_prolonging_snow_rate_min_drl)
            l1 (L.L.lights_ai_test_ext_seeing_prolonging_snow_rate_max_drl) max (S.L.lights_ai_test_ext_seeing_prolonging_snow_rate_max_drl)

            (L.L.lights_ai_test_ext_seeing_prolonging_snow_rate_configs) 1 + (S.L.lights_ai_test_ext_seeing_prolonging_snow_rate_configs)
            l1 (L.L.lights_ai_test_ext_seeing_prolonging_snow_rate_avg) + (S.L.lights_ai_test_ext_seeing_prolonging_snow_rate_avg)
            l1 (L.L.lights_ai_test_ext_seeing_prolonging_snow_rate_min) min (S.L.lights_ai_test_ext_seeing_prolonging_snow_rate_min)
            l1 (L.L.lights_ai_test_ext_seeing_prolonging_snow_rate_max) max (S.L.lights_ai_test_ext_seeing_prolonging_snow_rate_max)
        {endif}

'       // min, max, and avg for-reduced-seeing solar elevation angle (if applicable to profile)

'       // ...non-DRL-equipped
        (L.L.lights_ai_ext_lighting_for_seeing_reduced_min_sun_alt) s1 abs 91 = !
        {if}
            (L.L.lights_ai_test_ext_seeing_reduced_sun_alt_configs_without_drl) 1 + (S.L.lights_ai_test_ext_seeing_reduced_sun_alt_configs_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_sun_alt_avg_without_drl) + (S.L.lights_ai_test_ext_seeing_reduced_sun_alt_avg_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_sun_alt_min_without_drl) min (S.L.lights_ai_test_ext_seeing_reduced_sun_alt_min_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_sun_alt_max_without_drl) max (S.L.lights_ai_test_ext_seeing_reduced_sun_alt_max_without_drl)

            (L.L.lights_ai_test_ext_seeing_reduced_sun_alt_configs) 1 + (S.L.lights_ai_test_ext_seeing_reduced_sun_alt_configs)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_sun_alt_avg) + (S.L.lights_ai_test_ext_seeing_reduced_sun_alt_avg)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_sun_alt_min) min (S.L.lights_ai_test_ext_seeing_reduced_sun_alt_min)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_sun_alt_max) max (S.L.lights_ai_test_ext_seeing_reduced_sun_alt_max)
        {endif}

'       // ...DRL-equipped
        (L.L.lights_ai_ext_lighting_for_seeing_reduced_min_sun_alt_drl) s1 abs 91 = ! (L.L.lights_ai_ext_lighting_for_seeing_reduced_min_sun_alt) abs 91 = ! &&
        {if}
            (L.L.lights_ai_test_ext_seeing_reduced_sun_alt_configs_drl) 1 + (S.L.lights_ai_test_ext_seeing_reduced_sun_alt_configs_drl)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_sun_alt_avg_drl) + (S.L.lights_ai_test_ext_seeing_reduced_sun_alt_avg_drl)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_sun_alt_min_drl) min (S.L.lights_ai_test_ext_seeing_reduced_sun_alt_min_drl)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_sun_alt_max_drl) max (S.L.lights_ai_test_ext_seeing_reduced_sun_alt_max_drl)

            (L.L.lights_ai_test_ext_seeing_reduced_sun_alt_configs) 1 + (S.L.lights_ai_test_ext_seeing_reduced_sun_alt_configs)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_sun_alt_avg) + (S.L.lights_ai_test_ext_seeing_reduced_sun_alt_avg)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_sun_alt_min) min (S.L.lights_ai_test_ext_seeing_reduced_sun_alt_min)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_sun_alt_max) max (S.L.lights_ai_test_ext_seeing_reduced_sun_alt_max)
        {endif}

'       // min, max, and avg for-reduced-seeing brightness (if applicable to profile)

'       // ...non-DRL-equipped
        (L.L.lights_ai_ext_lighting_for_seeing_reduced_min_brightness) s1 -1 = ! (L.L.lights_ai_ext_lighting_for_seeing_reduced_min_sun_alt) abs 91 = ! &&
        {if}
            (L.L.lights_ai_test_ext_seeing_reduced_brightness_configs_without_drl) 1 + (S.L.lights_ai_test_ext_seeing_reduced_brightness_configs_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_brightness_avg_without_drl) + (S.L.lights_ai_test_ext_seeing_reduced_brightness_avg_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_brightness_min_without_drl) min (S.L.lights_ai_test_ext_seeing_reduced_brightness_min_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_brightness_max_without_drl) max (S.L.lights_ai_test_ext_seeing_reduced_brightness_max_without_drl)

            (L.L.lights_ai_test_ext_seeing_reduced_brightness_configs) 1 + (S.L.lights_ai_test_ext_seeing_reduced_brightness_configs)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_brightness_avg) + (S.L.lights_ai_test_ext_seeing_reduced_brightness_avg)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_brightness_min) min (S.L.lights_ai_test_ext_seeing_reduced_brightness_min)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_brightness_max) max (S.L.lights_ai_test_ext_seeing_reduced_brightness_max)
        {endif}

'       // ...DRL-equipped
        (L.L.lights_ai_ext_lighting_for_seeing_reduced_min_brightness_drl) s1 -1 = ! (L.L.lights_ai_ext_lighting_for_seeing_reduced_min_sun_alt) abs 91 = ! &&
        {if}
            (L.L.lights_ai_test_ext_seeing_reduced_brightness_configs_drl) 1 + (S.L.lights_ai_test_ext_seeing_reduced_brightness_configs_drl)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_brightness_avg_drl) + (S.L.lights_ai_test_ext_seeing_reduced_brightness_avg_drl)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_brightness_min_drl) min (S.L.lights_ai_test_ext_seeing_reduced_brightness_min_drl)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_brightness_max_drl) max (S.L.lights_ai_test_ext_seeing_reduced_brightness_max_drl)

            (L.L.lights_ai_test_ext_seeing_reduced_brightness_configs) 1 + (S.L.lights_ai_test_ext_seeing_reduced_brightness_configs)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_brightness_avg) + (S.L.lights_ai_test_ext_seeing_reduced_brightness_avg)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_brightness_min) min (S.L.lights_ai_test_ext_seeing_reduced_brightness_min)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_brightness_max) max (S.L.lights_ai_test_ext_seeing_reduced_brightness_max)
        {endif}

'       // min, max, and avg for-reduced-seeing rain rate (if applicable to profile)

'       // ...non-DRL-equipped
        (L.L.lights_ai_ext_lighting_for_seeing_reduced_max_rain_rate) s1 -1 = ! (L.L.lights_ai_ext_lighting_for_seeing_reduced_min_sun_alt) abs 91 = ! &&
            (L.L.lights_ai_ext_lighting_for_seeing_max_rain_rate) -1 = ! &&
        {if}
            (L.L.lights_ai_test_ext_seeing_reduced_rain_rate_configs_without_drl) 1 + (S.L.lights_ai_test_ext_seeing_reduced_rain_rate_configs_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_rain_rate_avg_without_drl) + (S.L.lights_ai_test_ext_seeing_reduced_rain_rate_avg_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_rain_rate_min_without_drl) min (S.L.lights_ai_test_ext_seeing_reduced_rain_rate_min_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_rain_rate_max_without_drl) max (S.L.lights_ai_test_ext_seeing_reduced_rain_rate_max_without_drl)

            (L.L.lights_ai_test_ext_seeing_reduced_rain_rate_configs) 1 + (S.L.lights_ai_test_ext_seeing_reduced_rain_rate_configs)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_rain_rate_avg) + (S.L.lights_ai_test_ext_seeing_reduced_rain_rate_avg)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_rain_rate_min) min (S.L.lights_ai_test_ext_seeing_reduced_rain_rate_min)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_rain_rate_max) max (S.L.lights_ai_test_ext_seeing_reduced_rain_rate_max)
        {endif}

'       // ...DRL-equipped
        (L.L.lights_ai_ext_lighting_for_seeing_reduced_max_rain_rate_drl) s1 -1 = ! (L.L.lights_ai_ext_lighting_for_seeing_reduced_min_sun_alt) abs 91 = ! &&
            (L.L.lights_ai_ext_lighting_for_seeing_max_rain_rate) -1 = ! &&
        {if}
            (L.L.lights_ai_test_ext_seeing_reduced_rain_rate_configs_drl) 1 + (S.L.lights_ai_test_ext_seeing_reduced_rain_rate_configs_drl)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_rain_rate_avg_drl) + (S.L.lights_ai_test_ext_seeing_reduced_rain_rate_avg_drl)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_rain_rate_min_drl) min (S.L.lights_ai_test_ext_seeing_reduced_rain_rate_min_drl)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_rain_rate_max_drl) max (S.L.lights_ai_test_ext_seeing_reduced_rain_rate_max_drl)

            (L.L.lights_ai_test_ext_seeing_reduced_rain_rate_configs) 1 + (S.L.lights_ai_test_ext_seeing_reduced_rain_rate_configs)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_rain_rate_avg) + (S.L.lights_ai_test_ext_seeing_reduced_rain_rate_avg)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_rain_rate_min) min (S.L.lights_ai_test_ext_seeing_reduced_rain_rate_min)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_rain_rate_max) max (S.L.lights_ai_test_ext_seeing_reduced_rain_rate_max)
        {endif}

'       // min, max, and avg for-reduced-seeing snow rate (if applicable to profile)

'       // ...non-DRL-equipped
        (L.L.lights_ai_ext_lighting_for_seeing_reduced_max_snow_rate) s1 -1 = ! (L.L.lights_ai_ext_lighting_for_seeing_reduced_min_sun_alt) abs 91 = ! &&
            (L.L.lights_ai_ext_lighting_for_seeing_max_rain_rate) -1 = ! &&
        {if}
            (L.L.lights_ai_test_ext_seeing_reduced_snow_rate_configs_without_drl) 1 + (S.L.lights_ai_test_ext_seeing_reduced_snow_rate_configs_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_snow_rate_avg_without_drl) + (S.L.lights_ai_test_ext_seeing_reduced_snow_rate_avg_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_snow_rate_min_without_drl) min (S.L.lights_ai_test_ext_seeing_reduced_snow_rate_min_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_snow_rate_max_without_drl) max (S.L.lights_ai_test_ext_seeing_reduced_snow_rate_max_without_drl)

            (L.L.lights_ai_test_ext_seeing_reduced_snow_rate_configs) 1 + (S.L.lights_ai_test_ext_seeing_reduced_snow_rate_configs)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_snow_rate_avg) + (S.L.lights_ai_test_ext_seeing_reduced_snow_rate_avg)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_snow_rate_min) min (S.L.lights_ai_test_ext_seeing_reduced_snow_rate_min)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_snow_rate_max) max (S.L.lights_ai_test_ext_seeing_reduced_snow_rate_max)
        {endif}

'       // ...DRL-equipped
        (L.L.lights_ai_ext_lighting_for_seeing_reduced_max_snow_rate_drl) s1 -1 = ! (L.L.lights_ai_ext_lighting_for_seeing_reduced_min_sun_alt) abs 91 = ! &&
            (L.L.lights_ai_ext_lighting_for_seeing_max_rain_rate) -1 = ! && (L.L.lights_ai_ext_lighting_for_seeing_reduced_max_snow_rate) -1 = ! &&
        {if}
            (L.L.lights_ai_test_ext_seeing_reduced_snow_rate_configs_drl) 1 + (S.L.lights_ai_test_ext_seeing_reduced_snow_rate_configs_drl)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_snow_rate_avg_drl) + (S.L.lights_ai_test_ext_seeing_reduced_snow_rate_avg_drl)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_snow_rate_min_drl) min (S.L.lights_ai_test_ext_seeing_reduced_snow_rate_min_drl)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_snow_rate_max_drl) max (S.L.lights_ai_test_ext_seeing_reduced_snow_rate_max_drl)

            (L.L.lights_ai_test_ext_seeing_reduced_snow_rate_configs) 1 + (S.L.lights_ai_test_ext_seeing_reduced_snow_rate_configs)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_snow_rate_avg) + (S.L.lights_ai_test_ext_seeing_reduced_snow_rate_avg)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_snow_rate_min) min (S.L.lights_ai_test_ext_seeing_reduced_snow_rate_min)
            l1 (L.L.lights_ai_test_ext_seeing_reduced_snow_rate_max) max (S.L.lights_ai_test_ext_seeing_reduced_snow_rate_max)
        {endif}

'       // min, max, and avg for-reduced-seeing solar elevation angle (if applicable to profile)

'       // ...non-DRL-equipped
        (L.L.lights_ai_ext_lighting_for_seeing_reduced_min_sun_alt) -91 = !
        {if}
            (L.L.lights_ai_test_ext_on_for_seeing_reduced_percent_without_drl) 1 + (S.L.lights_ai_test_ext_on_for_seeing_reduced_percent_without_drl)
            (L.L.lights_ai_test_ext_on_for_seeing_reduced_percent) 1 + (S.L.lights_ai_test_ext_on_for_seeing_reduced_percent)
        {endif}

'       // ....DRL-equipped
        (L.L.lights_ai_ext_lighting_for_seeing_reduced_min_sun_alt_drl) -91 = ! (L.L.lights_ai_ext_lighting_for_seeing_reduced_min_sun_alt) -91 = ! &&
        {if}
            (L.L.lights_ai_test_ext_on_for_seeing_reduced_percent_drl) 1 + (S.L.lights_ai_test_ext_on_for_seeing_reduced_percent_drl)
            (L.L.lights_ai_test_ext_on_for_seeing_reduced_percent) 1 + (S.L.lights_ai_test_ext_on_for_seeing_reduced_percent)
        {endif}

'       // min, max, and avg for-adverse-seeing brightness (if applicable to profile)

'       // ...non-DRL-equipped
        (L.L.lights_ai_ext_lighting_for_seeing_adverse_min_brightness) s1 -1 = ! (L.L.lights_ai_ext_lighting_increase_under_adverse) &&
        {if}
            (L.L.lights_ai_test_ext_seeing_adverse_brightness_configs_without_drl) 1 + (S.L.lights_ai_test_ext_seeing_adverse_brightness_configs_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_adverse_brightness_avg_without_drl) + (S.L.lights_ai_test_ext_seeing_adverse_brightness_avg_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_adverse_brightness_min_without_drl) min (S.L.lights_ai_test_ext_seeing_adverse_brightness_min_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_adverse_brightness_max_without_drl) max (S.L.lights_ai_test_ext_seeing_adverse_brightness_max_without_drl)

            (L.L.lights_ai_test_ext_seeing_adverse_brightness_configs) 1 + (S.L.lights_ai_test_ext_seeing_adverse_brightness_configs)
            l1 (L.L.lights_ai_test_ext_seeing_adverse_brightness_avg) + (S.L.lights_ai_test_ext_seeing_adverse_brightness_avg)
            l1 (L.L.lights_ai_test_ext_seeing_adverse_brightness_min) min (S.L.lights_ai_test_ext_seeing_adverse_brightness_min)
            l1 (L.L.lights_ai_test_ext_seeing_adverse_brightness_max) max (S.L.lights_ai_test_ext_seeing_adverse_brightness_max)
        {endif}

'       // ...DRL-equipped
        (L.L.lights_ai_ext_lighting_for_seeing_adverse_min_brightness_drl) s1 -1 = ! (L.L.lights_ai_ext_lighting_increase_under_adverse) &&
        {if}
            (L.L.lights_ai_test_ext_seeing_adverse_brightness_configs_drl) 1 + (S.L.lights_ai_test_ext_seeing_adverse_brightness_configs_drl)
            l1 (L.L.lights_ai_test_ext_seeing_adverse_brightness_avg_drl) + (S.L.lights_ai_test_ext_seeing_adverse_brightness_avg_drl)
            l1 (L.L.lights_ai_test_ext_seeing_adverse_brightness_min_drl) min (S.L.lights_ai_test_ext_seeing_adverse_brightness_min_drl)
            l1 (L.L.lights_ai_test_ext_seeing_adverse_brightness_max_drl) max (S.L.lights_ai_test_ext_seeing_adverse_brightness_max_drl)

            (L.L.lights_ai_test_ext_seeing_adverse_brightness_configs) 1 + (S.L.lights_ai_test_ext_seeing_adverse_brightness_configs)
            l1 (L.L.lights_ai_test_ext_seeing_adverse_brightness_avg) + (S.L.lights_ai_test_ext_seeing_adverse_brightness_avg)
            l1 (L.L.lights_ai_test_ext_seeing_adverse_brightness_min) min (S.L.lights_ai_test_ext_seeing_adverse_brightness_min)
            l1 (L.L.lights_ai_test_ext_seeing_adverse_brightness_max) max (S.L.lights_ai_test_ext_seeing_adverse_brightness_max)
        {endif}

'       // min, max, and avg for-adverse-seeing rain rate (if applicable to profile)

'       // ...non-DRL-equipped
        (L.L.lights_ai_ext_lighting_for_seeing_adverse_max_rain_rate) s1 -1 = ! (L.L.lights_ai_ext_lighting_increase_under_adverse) &&
            (L.L.lights_ai_ext_lighting_for_seeing_max_rain_rate) -1 = ! &&
        {if}
            (L.L.lights_ai_test_ext_seeing_adverse_rain_rate_configs_without_drl) 1 + (S.L.lights_ai_test_ext_seeing_adverse_rain_rate_configs_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_adverse_rain_rate_avg_without_drl) + (S.L.lights_ai_test_ext_seeing_adverse_rain_rate_avg_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_adverse_rain_rate_min_without_drl) min (S.L.lights_ai_test_ext_seeing_adverse_rain_rate_min_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_adverse_rain_rate_max_without_drl) max (S.L.lights_ai_test_ext_seeing_adverse_rain_rate_max_without_drl)

            (L.L.lights_ai_test_ext_seeing_adverse_rain_rate_configs) 1 + (S.L.lights_ai_test_ext_seeing_adverse_rain_rate_configs)
            l1 (L.L.lights_ai_test_ext_seeing_adverse_rain_rate_avg) + (S.L.lights_ai_test_ext_seeing_adverse_rain_rate_avg)
            l1 (L.L.lights_ai_test_ext_seeing_adverse_rain_rate_min) min (S.L.lights_ai_test_ext_seeing_adverse_rain_rate_min)
            l1 (L.L.lights_ai_test_ext_seeing_adverse_rain_rate_max) max (S.L.lights_ai_test_ext_seeing_adverse_rain_rate_max)
        {endif}

'       // ...DRL-equipped
        (L.L.lights_ai_ext_lighting_for_seeing_adverse_max_rain_rate_drl) s1 -1 = ! (L.L.lights_ai_ext_lighting_increase_under_adverse) &&
            (L.L.lights_ai_ext_lighting_for_seeing_max_rain_rate) -1 = ! &&
        {if}
            (L.L.lights_ai_test_ext_seeing_adverse_rain_rate_configs_drl) 1 + (S.L.lights_ai_test_ext_seeing_adverse_rain_rate_configs_drl)
            l1 (L.L.lights_ai_test_ext_seeing_adverse_rain_rate_avg_drl) + (S.L.lights_ai_test_ext_seeing_adverse_rain_rate_avg_drl)
            l1 (L.L.lights_ai_test_ext_seeing_adverse_rain_rate_min_drl) min (S.L.lights_ai_test_ext_seeing_adverse_rain_rate_min_drl)
            l1 (L.L.lights_ai_test_ext_seeing_adverse_rain_rate_max_drl) max (S.L.lights_ai_test_ext_seeing_adverse_rain_rate_max_drl)

            (L.L.lights_ai_test_ext_seeing_adverse_rain_rate_configs) 1 + (S.L.lights_ai_test_ext_seeing_adverse_rain_rate_configs)
            l1 (L.L.lights_ai_test_ext_seeing_adverse_rain_rate_avg) + (S.L.lights_ai_test_ext_seeing_adverse_rain_rate_avg)
            l1 (L.L.lights_ai_test_ext_seeing_adverse_rain_rate_min) min (S.L.lights_ai_test_ext_seeing_adverse_rain_rate_min)
            l1 (L.L.lights_ai_test_ext_seeing_adverse_rain_rate_max) max (S.L.lights_ai_test_ext_seeing_adverse_rain_rate_max)
        {endif}

'       // min, max, and avg for-adverse-seeing snow rate (if applicable to profile)

'       // ...non-DRL-equipped
        (L.L.lights_ai_ext_lighting_for_seeing_adverse_max_snow_rate) s1 -1 = ! (L.L.lights_ai_ext_lighting_increase_under_adverse) &&
            (L.L.lights_ai_ext_lighting_for_seeing_max_rain_rate) -1 = ! &&
        {if}
            (L.L.lights_ai_test_ext_seeing_adverse_snow_rate_configs_without_drl) 1 + (S.L.lights_ai_test_ext_seeing_adverse_snow_rate_configs_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_adverse_snow_rate_avg_without_drl) + (S.L.lights_ai_test_ext_seeing_adverse_snow_rate_avg_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_adverse_snow_rate_min_without_drl) min (S.L.lights_ai_test_ext_seeing_adverse_snow_rate_min_without_drl)
            l1 (L.L.lights_ai_test_ext_seeing_adverse_snow_rate_max_without_drl) max (S.L.lights_ai_test_ext_seeing_adverse_snow_rate_max_without_drl)

            (L.L.lights_ai_test_ext_seeing_adverse_snow_rate_configs) 1 + (S.L.lights_ai_test_ext_seeing_adverse_snow_rate_configs)
            l1 (L.L.lights_ai_test_ext_seeing_adverse_snow_rate_avg) + (S.L.lights_ai_test_ext_seeing_adverse_snow_rate_avg)
            l1 (L.L.lights_ai_test_ext_seeing_adverse_snow_rate_min) min (S.L.lights_ai_test_ext_seeing_adverse_snow_rate_min)
            l1 (L.L.lights_ai_test_ext_seeing_adverse_snow_rate_max) max (S.L.lights_ai_test_ext_seeing_adverse_snow_rate_max)
        {endif}

'       // ...DRL-equipped
        (L.L.lights_ai_ext_lighting_for_seeing_adverse_max_snow_rate_drl) s1 -1 = ! (L.L.lights_ai_ext_lighting_increase_under_adverse) &&
            (L.L.lights_ai_ext_lighting_for_seeing_max_rain_rate) -1 = ! && (L.L.lights_ai_ext_lighting_for_seeing_max_snow_rate) -1 = ! &&
        {if}
            (L.L.lights_ai_test_ext_seeing_adverse_snow_rate_configs_drl) 1 + (S.L.lights_ai_test_ext_seeing_adverse_snow_rate_configs_drl)
            l1 (L.L.lights_ai_test_ext_seeing_adverse_snow_rate_avg_drl) + (S.L.lights_ai_test_ext_seeing_adverse_snow_rate_avg_drl)
            l1 (L.L.lights_ai_test_ext_seeing_adverse_snow_rate_min_drl) min (S.L.lights_ai_test_ext_seeing_adverse_snow_rate_min_drl)
            l1 (L.L.lights_ai_test_ext_seeing_adverse_snow_rate_max_drl) max (S.L.lights_ai_test_ext_seeing_adverse_snow_rate_max_drl)

            (L.L.lights_ai_test_ext_seeing_adverse_snow_rate_configs) 1 + (S.L.lights_ai_test_ext_seeing_adverse_snow_rate_configs)
            l1 (L.L.lights_ai_test_ext_seeing_adverse_snow_rate_avg) + (S.L.lights_ai_test_ext_seeing_adverse_snow_rate_avg)
            l1 (L.L.lights_ai_test_ext_seeing_adverse_snow_rate_min) min (S.L.lights_ai_test_ext_seeing_adverse_snow_rate_min)
            l1 (L.L.lights_ai_test_ext_seeing_adverse_snow_rate_max) max (S.L.lights_ai_test_ext_seeing_adverse_snow_rate_max)
        {endif}

'       // What percentage of profiles is generally bound to employ additional exterior lighting under adverse-seeing
'       // conditions?
        (L.L.lights_ai_ext_lighting_increase_under_adverse)
        {if}
            (L.L.lights_ai_test_ext_on_for_seeing_adverse_percent) 1 + (S.L.lights_ai_test_ext_on_for_seeing_adverse_percent)
        {endif}

'       // min, max, and avg for-being-seen solar elevation angle (if applicable to profile)

'       // ...non-DRL-equipped
        (L.L.lights_ai_ext_lighting_for_being_seen_min_sun_alt) s1 abs 91 = !
        {if}
            (L.L.lights_ai_test_ext_seen_sun_alt_configs_without_drl) 1 + (S.L.lights_ai_test_ext_seen_sun_alt_configs_without_drl)
            l1 (L.L.lights_ai_test_ext_seen_sun_alt_avg_without_drl) + (S.L.lights_ai_test_ext_seen_sun_alt_avg_without_drl)
            l1 (L.L.lights_ai_test_ext_seen_sun_alt_min_without_drl) min (S.L.lights_ai_test_ext_seen_sun_alt_min_without_drl)
            l1 (L.L.lights_ai_test_ext_seen_sun_alt_max_without_drl) max (S.L.lights_ai_test_ext_seen_sun_alt_max_without_drl)

            (L.L.lights_ai_test_ext_seen_sun_alt_configs) 1 + (S.L.lights_ai_test_ext_seen_sun_alt_configs)
            l1 (L.L.lights_ai_test_ext_seen_sun_alt_avg) + (S.L.lights_ai_test_ext_seen_sun_alt_avg)
            l1 (L.L.lights_ai_test_ext_seen_sun_alt_min) min (S.L.lights_ai_test_ext_seen_sun_alt_min)
            l1 (L.L.lights_ai_test_ext_seen_sun_alt_max) max (S.L.lights_ai_test_ext_seen_sun_alt_max)
        {endif}

'       // ...DRL-equipped
        (L.L.lights_ai_ext_lighting_for_being_seen_min_sun_alt_drl) s1 abs 91 = ! (L.L.lights_ai_ext_lighting_for_being_seen_min_sun_alt) abs 91 = ! &&
        {if}
            (L.L.lights_ai_test_ext_seen_sun_alt_configs_drl) 1 + (S.L.lights_ai_test_ext_seen_sun_alt_configs_drl)
            l1 (L.L.lights_ai_test_ext_seen_sun_alt_avg_drl) + (S.L.lights_ai_test_ext_seen_sun_alt_avg_drl)
            l1 (L.L.lights_ai_test_ext_seen_sun_alt_min_drl) min (S.L.lights_ai_test_ext_seen_sun_alt_min_drl)
            l1 (L.L.lights_ai_test_ext_seen_sun_alt_max_drl) max (S.L.lights_ai_test_ext_seen_sun_alt_max_drl)

            (L.L.lights_ai_test_ext_seen_sun_alt_configs) 1 + (S.L.lights_ai_test_ext_seen_sun_alt_configs)
            l1 (L.L.lights_ai_test_ext_seen_sun_alt_avg) + (S.L.lights_ai_test_ext_seen_sun_alt_avg)
            l1 (L.L.lights_ai_test_ext_seen_sun_alt_min) min (S.L.lights_ai_test_ext_seen_sun_alt_min)
            l1 (L.L.lights_ai_test_ext_seen_sun_alt_max) max (S.L.lights_ai_test_ext_seen_sun_alt_max)
        {endif}

'       // What percentage of profiles conditionally employs exterior lighting under being-seen conditions?

'       // ...non-DRL-equipped
        (L.L.lights_ai_ext_lighting_for_being_seen_min_sun_alt) -91 = !
        {if}
            (L.L.lights_ai_test_ext_on_for_being_seen_percent_without_drl) 1 + (S.L.lights_ai_test_ext_on_for_being_seen_percent_without_drl)
            (L.L.lights_ai_test_ext_on_for_being_seen_percent) 1 + (S.L.lights_ai_test_ext_on_for_being_seen_percent)
        {endif}

'       // ...DRL-equipped
        (L.L.lights_ai_ext_lighting_for_being_seen_min_sun_alt_drl) -91 = ! (L.L.lights_ai_ext_lighting_for_being_seen_min_sun_alt) -91 = ! &&
        {if}
            (L.L.lights_ai_test_ext_on_for_being_seen_percent_drl) 1 + (S.L.lights_ai_test_ext_on_for_being_seen_percent_drl)
            (L.L.lights_ai_test_ext_on_for_being_seen_percent) 1 + (S.L.lights_ai_test_ext_on_for_being_seen_percent)
        {endif}

'       // What percentage of profiles unconditionally employs exterior lighting?

'       // ...non-DRL-equipped
        (L.L.lights_ai_ext_lighting_for_being_seen_min_sun_alt) 91 =
        {if}
            (L.L.lights_ai_test_ext_always_on_for_being_seen_percent_without_drl) 1 +
                (S.L.lights_ai_test_ext_always_on_for_being_seen_percent_without_drl)
            (L.L.lights_ai_test_ext_always_on_for_being_seen_percent) 1 +
                (S.L.lights_ai_test_ext_always_on_for_being_seen_percent)
        {endif}

'       // ...DRL-equipped
        (L.L.lights_ai_ext_lighting_for_being_seen_min_sun_alt_drl) 91 =
        {if}
            (L.L.lights_ai_test_ext_always_on_for_being_seen_percent_drl) 1 +
                (S.L.lights_ai_test_ext_always_on_for_being_seen_percent_drl)
            (L.L.lights_ai_test_ext_always_on_for_being_seen_percent) 1 +
                (S.L.lights_ai_test_ext_always_on_for_being_seen_percent)
        {endif}

'       // min, max, and avg solar elevation angle for exterior lighting deactivation under non-running engine (if
'       // applicable to profile)

'       // ...non-DRL-equipped
        (L.L.lights_ai_ext_lighting_off_when_engine_off_day_night_differentiating_sun_alt) s1 abs 91 = !
        {if}
            (L.L.lights_ai_test_ext_off_when_engine_off_sun_alt_configs_without_drl) 1 + (S.L.lights_ai_test_ext_off_when_engine_off_sun_alt_configs_without_drl)
            (L.L.lights_ai_test_ext_off_when_engine_off_percent_without_drl) 1 + (S.L.lights_ai_test_ext_off_when_engine_off_percent_without_drl)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_sun_alt_avg_without_drl) + (S.L.lights_ai_test_ext_off_when_engine_off_sun_alt_avg_without_drl)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_sun_alt_min_without_drl) min (S.L.lights_ai_test_ext_off_when_engine_off_sun_alt_min_without_drl)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_sun_alt_max_without_drl) max (S.L.lights_ai_test_ext_off_when_engine_off_sun_alt_max_without_drl)

            (L.L.lights_ai_test_ext_off_when_engine_off_sun_alt_configs) 1 + (S.L.lights_ai_test_ext_off_when_engine_off_sun_alt_configs)
            (L.L.lights_ai_test_ext_off_when_engine_off_percent) 1 + (S.L.lights_ai_test_ext_off_when_engine_off_percent)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_sun_alt_avg) + (S.L.lights_ai_test_ext_off_when_engine_off_sun_alt_avg)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_sun_alt_min) min (S.L.lights_ai_test_ext_off_when_engine_off_sun_alt_min)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_sun_alt_max) max (S.L.lights_ai_test_ext_off_when_engine_off_sun_alt_max)

'           // What percentage of profiles also does so at nighttime?
            (L.L.lights_ai_ext_lighting_off_when_engine_off_at_nighttime)
            {if}
                (L.L.lights_ai_test_ext_off_when_engine_off_nighttime_percent_without_drl) 1 + (S.L.lights_ai_test_ext_off_when_engine_off_nighttime_percent_without_drl)
                (L.L.lights_ai_test_ext_off_when_engine_off_nighttime_percent) 1 + (S.L.lights_ai_test_ext_off_when_engine_off_nighttime_percent)
            {endif}
        {endif}

'       // ...DRL-equipped
        (L.L.lights_ai_ext_lighting_off_when_engine_off_day_night_differentiating_sun_alt_drl) s1 abs 91 = !
            (L.L.lights_ai_ext_lighting_off_when_engine_off_day_night_differentiating_sun_alt) abs 91 = ! &&
        {if}
            (L.L.lights_ai_test_ext_off_when_engine_off_sun_alt_configs_drl) 1 + (S.L.lights_ai_test_ext_off_when_engine_off_sun_alt_configs_drl)
            (L.L.lights_ai_test_ext_off_when_engine_off_percent_drl) 1 + (S.L.lights_ai_test_ext_off_when_engine_off_percent_drl)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_sun_alt_avg_drl) + (S.L.lights_ai_test_ext_off_when_engine_off_sun_alt_avg_drl)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_sun_alt_min_drl) min (S.L.lights_ai_test_ext_off_when_engine_off_sun_alt_min_drl)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_sun_alt_max_drl) max (S.L.lights_ai_test_ext_off_when_engine_off_sun_alt_max_drl)

            (L.L.lights_ai_test_ext_off_when_engine_off_sun_alt_configs) 1 + (S.L.lights_ai_test_ext_off_when_engine_off_sun_alt_configs)
            (L.L.lights_ai_test_ext_off_when_engine_off_percent) 1 + (S.L.lights_ai_test_ext_off_when_engine_off_percent)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_sun_alt_avg) + (S.L.lights_ai_test_ext_off_when_engine_off_sun_alt_avg)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_sun_alt_min) min (S.L.lights_ai_test_ext_off_when_engine_off_sun_alt_min)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_sun_alt_max) max (S.L.lights_ai_test_ext_off_when_engine_off_sun_alt_max)

'           // What percentage of profiles also does so at nighttime?
            (L.L.lights_ai_ext_lighting_off_when_engine_off_at_nighttime_drl)
            {if}
                (L.L.lights_ai_test_ext_off_when_engine_off_nighttime_percent_drl) 1 + (S.L.lights_ai_test_ext_off_when_engine_off_nighttime_percent_drl)
                (L.L.lights_ai_test_ext_off_when_engine_off_nighttime_percent) 1 + (S.L.lights_ai_test_ext_off_when_engine_off_nighttime_percent)
            {endif}
        {endif}

'       // min, max, and avg brightness for exterior lighting deactivation under non-running engine (if applicable to
'       // profile)

'       // ...non-DRL-equipped
        (L.L.lights_ai_ext_lighting_off_when_engine_off_min_brightness) s1 -1 = !
            (L.L.lights_ai_ext_lighting_off_when_engine_off_day_night_differentiating_sun_alt) abs 91 = ! &&
        {if}
            (L.L.lights_ai_test_ext_off_when_engine_off_brightness_configs_without_drl) 1 + (S.L.lights_ai_test_ext_off_when_engine_off_brightness_configs_without_drl)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_brightness_avg_without_drl) + (S.L.lights_ai_test_ext_off_when_engine_off_brightness_avg_without_drl)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_brightness_min_without_drl) min (S.L.lights_ai_test_ext_off_when_engine_off_brightness_min_without_drl)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_brightness_max_without_drl) max (S.L.lights_ai_test_ext_off_when_engine_off_brightness_max_without_drl)

            (L.L.lights_ai_test_ext_off_when_engine_off_brightness_configs) 1 + (S.L.lights_ai_test_ext_off_when_engine_off_brightness_configs)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_brightness_avg) + (S.L.lights_ai_test_ext_off_when_engine_off_brightness_avg)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_brightness_min) min (S.L.lights_ai_test_ext_off_when_engine_off_brightness_min)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_brightness_max) max (S.L.lights_ai_test_ext_off_when_engine_off_brightness_max)
        {endif}

'       // ...DRL-equipped
        (L.L.lights_ai_ext_lighting_off_when_engine_off_min_brightness_drl) s1 -1 = !
            (L.L.lights_ai_ext_lighting_off_when_engine_off_day_night_differentiating_sun_alt_drl) abs 91 = ! &&
            (L.L.lights_ai_ext_lighting_off_when_engine_off_min_brightness) -1 = ! &&
        {if}
            (L.L.lights_ai_test_ext_off_when_engine_off_brightness_configs_drl) 1 + (S.L.lights_ai_test_ext_off_when_engine_off_brightness_configs_drl)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_brightness_avg_drl) + (S.L.lights_ai_test_ext_off_when_engine_off_brightness_avg_drl)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_brightness_min_drl) min (S.L.lights_ai_test_ext_off_when_engine_off_brightness_min_drl)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_brightness_max_drl) max (S.L.lights_ai_test_ext_off_when_engine_off_brightness_max_drl)

            (L.L.lights_ai_test_ext_off_when_engine_off_brightness_configs) 1 + (S.L.lights_ai_test_ext_off_when_engine_off_brightness_configs)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_brightness_avg) + (S.L.lights_ai_test_ext_off_when_engine_off_brightness_avg)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_brightness_min) min (S.L.lights_ai_test_ext_off_when_engine_off_brightness_min)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_brightness_max) max (S.L.lights_ai_test_ext_off_when_engine_off_brightness_max)
        {endif}

'       // min, max, and avg rain rate for exterior lighting deactivation under non-running engine (if applicable to
'       // profile)

'       // ...non-DRL-equipped
        (L.L.lights_ai_ext_lighting_off_when_engine_off_max_rain_rate) s1 -1 = !
            (L.L.lights_ai_ext_lighting_off_when_engine_off_day_night_differentiating_sun_alt) abs 91 = ! &&
            (L.L.lights_ai_ext_lighting_for_seeing_max_rain_rate) -1 = ! &&
        {if}
            (L.L.lights_ai_test_ext_off_when_engine_off_rain_rate_configs_without_drl) 1 + (S.L.lights_ai_test_ext_off_when_engine_off_rain_rate_configs_without_drl)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_rain_rate_avg_without_drl) + (S.L.lights_ai_test_ext_off_when_engine_off_rain_rate_avg_without_drl)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_rain_rate_min_without_drl) min (S.L.lights_ai_test_ext_off_when_engine_off_rain_rate_min_without_drl)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_rain_rate_max_without_drl) max (S.L.lights_ai_test_ext_off_when_engine_off_rain_rate_max_without_drl)

            (L.L.lights_ai_test_ext_off_when_engine_off_rain_rate_configs) 1 + (S.L.lights_ai_test_ext_off_when_engine_off_rain_rate_configs)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_rain_rate_avg) + (S.L.lights_ai_test_ext_off_when_engine_off_rain_rate_avg)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_rain_rate_min) min (S.L.lights_ai_test_ext_off_when_engine_off_rain_rate_min)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_rain_rate_max) max (S.L.lights_ai_test_ext_off_when_engine_off_rain_rate_max)
        {endif}

'       // ...DRL-equipped
        (L.L.lights_ai_ext_lighting_off_when_engine_off_max_rain_rate_drl) s1 -1 = !
            (L.L.lights_ai_ext_lighting_off_when_engine_off_day_night_differentiating_sun_alt_drl) abs 91 = ! &&
            (L.L.lights_ai_ext_lighting_for_seeing_max_rain_rate) -1 = ! &&
        {if}
            (L.L.lights_ai_test_ext_off_when_engine_off_rain_rate_configs_drl) 1 + (S.L.lights_ai_test_ext_off_when_engine_off_rain_rate_configs_drl)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_rain_rate_avg_drl) + (S.L.lights_ai_test_ext_off_when_engine_off_rain_rate_avg_drl)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_rain_rate_min_drl) min (S.L.lights_ai_test_ext_off_when_engine_off_rain_rate_min_drl)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_rain_rate_max_drl) max (S.L.lights_ai_test_ext_off_when_engine_off_rain_rate_max_drl)

            (L.L.lights_ai_test_ext_off_when_engine_off_rain_rate_configs) 1 + (S.L.lights_ai_test_ext_off_when_engine_off_rain_rate_configs)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_rain_rate_avg) + (S.L.lights_ai_test_ext_off_when_engine_off_rain_rate_avg)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_rain_rate_min) min (S.L.lights_ai_test_ext_off_when_engine_off_rain_rate_min)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_rain_rate_max) max (S.L.lights_ai_test_ext_off_when_engine_off_rain_rate_max)
        {endif}

'       // min, max, and avg snow rate for exterior lighting deactivation under non-running engine (if applicable to
'       // profile)

'       // ...non-DRL-equipped
        (L.L.lights_ai_ext_lighting_off_when_engine_off_max_snow_rate) s1 -1 = !
            (L.L.lights_ai_ext_lighting_off_when_engine_off_day_night_differentiating_sun_alt) abs 91 = ! &&
            (L.L.lights_ai_ext_lighting_for_seeing_max_rain_rate) -1 = ! &&
        {if}
            (L.L.lights_ai_test_ext_off_when_engine_off_snow_rate_configs_without_drl) 1 + (S.L.lights_ai_test_ext_off_when_engine_off_snow_rate_configs_without_drl)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_snow_rate_avg_without_drl) + (S.L.lights_ai_test_ext_off_when_engine_off_snow_rate_avg_without_drl)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_snow_rate_min_without_drl) min (S.L.lights_ai_test_ext_off_when_engine_off_snow_rate_min_without_drl)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_snow_rate_max_without_drl) max (S.L.lights_ai_test_ext_off_when_engine_off_snow_rate_max_without_drl)

            (L.L.lights_ai_test_ext_off_when_engine_off_snow_rate_configs) 1 + (S.L.lights_ai_test_ext_off_when_engine_off_snow_rate_configs)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_snow_rate_avg) + (S.L.lights_ai_test_ext_off_when_engine_off_snow_rate_avg)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_snow_rate_min) min (S.L.lights_ai_test_ext_off_when_engine_off_snow_rate_min)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_snow_rate_max) max (S.L.lights_ai_test_ext_off_when_engine_off_snow_rate_max)
        {endif}

'       // ...DRL-equipped
        (L.L.lights_ai_ext_lighting_off_when_engine_off_max_snow_rate_drl) s1 -1 = !
            (L.L.lights_ai_ext_lighting_off_when_engine_off_day_night_differentiating_sun_alt_drl) abs 91 = ! &&
            (L.L.lights_ai_ext_lighting_for_seeing_max_rain_rate) -1 = ! &&
            (L.L.lights_ai_ext_lighting_off_when_engine_off_max_rain_rate_drl) -1 = ! &&
        {if}
            (L.L.lights_ai_test_ext_off_when_engine_off_snow_rate_configs_drl) 1 + (S.L.lights_ai_test_ext_off_when_engine_off_snow_rate_configs_drl)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_snow_rate_avg_drl) + (S.L.lights_ai_test_ext_off_when_engine_off_snow_rate_avg_drl)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_snow_rate_min_drl) min (S.L.lights_ai_test_ext_off_when_engine_off_snow_rate_min_drl)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_snow_rate_max_drl) max (S.L.lights_ai_test_ext_off_when_engine_off_snow_rate_max_drl)

            (L.L.lights_ai_test_ext_off_when_engine_off_snow_rate_configs) 1 + (S.L.lights_ai_test_ext_off_when_engine_off_snow_rate_configs)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_snow_rate_avg) + (S.L.lights_ai_test_ext_off_when_engine_off_snow_rate_avg)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_snow_rate_min) min (S.L.lights_ai_test_ext_off_when_engine_off_snow_rate_min)
            l1 (L.L.lights_ai_test_ext_off_when_engine_off_snow_rate_max) max (S.L.lights_ai_test_ext_off_when_engine_off_snow_rate_max)
        {endif}

'       // min, max, and avg exterior lighting adjustment delay - lax transitions
        (L.L.lights_ai_test_ext_darkness_tolerance_configs) 1 + (S.L.lights_ai_test_ext_darkness_tolerance_configs)
        (L.L.lights_ai_ext_lighting_darkness_tolerance) s1 (L.L.lights_ai_test_ext_darkness_tolerance_avg) + (S.L.lights_ai_test_ext_darkness_tolerance_avg)
        l1 (L.L.lights_ai_test_ext_darkness_tolerance_min) min (S.L.lights_ai_test_ext_darkness_tolerance_min)
        l1 (L.L.lights_ai_test_ext_darkness_tolerance_max) max (S.L.lights_ai_test_ext_darkness_tolerance_max)

'       // min, max, and avg exterior lighting adjustment delay - strict transitions
        (L.L.lights_ai_test_ext_brightness_tolerance_configs) 1 + (S.L.lights_ai_test_ext_brightness_tolerance_configs)
        (L.L.lights_ai_ext_lighting_brightness_tolerance) s1 (L.L.lights_ai_test_ext_brightness_tolerance_avg) + (S.L.lights_ai_test_ext_brightness_tolerance_avg)
        l1 (L.L.lights_ai_test_ext_brightness_tolerance_min) min (S.L.lights_ai_test_ext_brightness_tolerance_min)
        l1 (L.L.lights_ai_test_ext_brightness_tolerance_max) max (S.L.lights_ai_test_ext_brightness_tolerance_max)

'       // min, max, and avg interior lighting solar elevation angle
        (L.L.lights_ai_int_lighting_min_sun_alt) s1 abs 91 = !
        {if}
            (L.L.lights_ai_test_int_sun_alt_configs) 1 + (S.L.lights_ai_test_int_sun_alt_configs)
            l1 (L.L.lights_ai_test_int_sun_alt_avg) + (S.L.lights_ai_test_int_sun_alt_avg)
            l1 (L.L.lights_ai_test_int_sun_alt_min) min (S.L.lights_ai_test_int_sun_alt_min)
            l1 (L.L.lights_ai_test_int_sun_alt_max) max (S.L.lights_ai_test_int_sun_alt_max)
        {else}
'           // What percentage of profiles does always use interior lighting?
            l1 91 =
            {if}
                (L.L.lights_ai_test_int_always_on_percent) 1 + (S.L.lights_ai_test_int_always_on_percent)
            {endif}
        {endif}

'       // min, max, and avg interior lighting brightness (if applicable to profile)
        (L.L.lights_ai_int_lighting_min_brightness) s1 -1 = ! (L.L.lights_ai_int_lighting_min_sun_alt) abs 91 = ! &&
        {if}
            (L.L.lights_ai_test_int_brightness_configs) 1 + (S.L.lights_ai_test_int_brightness_configs)
            l1 (L.L.lights_ai_test_int_brightness_avg) + (S.L.lights_ai_test_int_brightness_avg)
            l1 (L.L.lights_ai_test_int_brightness_min) min (S.L.lights_ai_test_int_brightness_min)
            l1 (L.L.lights_ai_test_int_brightness_max) max (S.L.lights_ai_test_int_brightness_max)
        {endif}

'       // min, max, and avg interior lighting dimming solar elevation angle (if applicable to profile)
        (L.L.lights_ai_int_lighting_dimmed_min_sun_alt) s1 abs 91 = ! (L.L.lights_ai_int_lighting_dimming_preference) 2 = &&
        {if}
            (L.L.lights_ai_test_int_dimmed_sun_alt_configs) 1 + (S.L.lights_ai_test_int_dimmed_sun_alt_configs)
            l1 (L.L.lights_ai_test_int_dimmed_sun_alt_avg) + (S.L.lights_ai_test_int_dimmed_sun_alt_avg)
            l1 (L.L.lights_ai_test_int_dimmed_sun_alt_min) min (S.L.lights_ai_test_int_dimmed_sun_alt_min)
            l1 (L.L.lights_ai_test_int_dimmed_sun_alt_max) max (S.L.lights_ai_test_int_dimmed_sun_alt_max)
        {endif}

'       // min, max, and avg interior lighting dimming brightness (if applicable to profile)
        (L.L.lights_ai_int_lighting_dimmed_min_brightness) s1 -1 = ! (L.L.lights_ai_int_lighting_dimming_preference) 2 = &&
        {if}
            (L.L.lights_ai_test_int_dimmed_brightness_configs) 1 + (S.L.lights_ai_test_int_dimmed_brightness_configs)
            l1 (L.L.lights_ai_test_int_dimmed_brightness_avg) + (S.L.lights_ai_test_int_dimmed_brightness_avg)
            l1 (L.L.lights_ai_test_int_dimmed_brightness_min) min (S.L.lights_ai_test_int_dimmed_brightness_min)
            l1 (L.L.lights_ai_test_int_dimmed_brightness_max) max (S.L.lights_ai_test_int_dimmed_brightness_max)
        {endif}

'       // Metrics related to temporary, service-trip- and engine-based interior lighting deactivation (if applicable
'       // to profile).
        (L.L.lights_ai_int_lighting_off_during_service_trip_day_night_differentiating_sun_alt) s1 abs 91 = !
        {if}
'           // min, max, and avg solar elevation angle for service-trip-based deactivation
            (L.L.lights_ai_test_int_off_when_on_service_trip_sun_alt_configs) 1 + (S.L.lights_ai_test_int_off_when_on_service_trip_sun_alt_configs)
            (L.L.lights_ai_test_int_off_when_on_service_trip_percent) 1 + (S.L.lights_ai_test_int_off_when_on_service_trip_percent)
            l1 (L.L.lights_ai_test_int_off_when_on_service_trip_sun_alt_avg) + (S.L.lights_ai_test_int_off_when_on_service_trip_sun_alt_avg)
            l1 (L.L.lights_ai_test_int_off_when_on_service_trip_sun_alt_min) min (S.L.lights_ai_test_int_off_when_on_service_trip_sun_alt_min)
            l1 (L.L.lights_ai_test_int_off_when_on_service_trip_sun_alt_max) max (S.L.lights_ai_test_int_off_when_on_service_trip_sun_alt_max)

'           // min, max, and avg starting time of service-trip-based deactivation period
            (L.L.lights_ai_test_int_off_when_on_service_trip_time_low_configs) 1 + (S.L.lights_ai_test_int_off_when_on_service_trip_time_low_configs)
            (L.L.lights_ai_int_lighting_off_during_service_trip_day_night_differentiating_time_low) s1
                (L.L.lights_ai_test_int_off_when_on_service_trip_time_low_avg) + (S.L.lights_ai_test_int_off_when_on_service_trip_time_low_avg)
            l1 (L.L.lights_ai_test_int_off_when_on_service_trip_time_low_min) min (S.L.lights_ai_test_int_off_when_on_service_trip_time_low_min)
            l1 (L.L.lights_ai_test_int_off_when_on_service_trip_time_low_max) max (S.L.lights_ai_test_int_off_when_on_service_trip_time_low_max)

'           // min, max, and avg ending time of service-trip-based deactivation period
            (L.L.lights_ai_int_lighting_off_during_service_trip_day_night_differentiating_time_high) s2 l1 >
            {if}
                (L.L.lights_ai_test_int_off_when_on_service_trip_time_high_configs) 1 + (S.L.lights_ai_test_int_off_when_on_service_trip_time_high_configs)
                l2 (L.L.lights_ai_test_int_off_when_on_service_trip_time_high_avg) + (S.L.lights_ai_test_int_off_when_on_service_trip_time_high_avg)
                l2 (L.L.lights_ai_test_int_off_when_on_service_trip_time_high_min) min (S.L.lights_ai_test_int_off_when_on_service_trip_time_high_min)
                l2 (L.L.lights_ai_test_int_off_when_on_service_trip_time_high_max) max (S.L.lights_ai_test_int_off_when_on_service_trip_time_high_max)
            {else}
                (L.L.lights_ai_test_int_off_when_on_service_trip_time_low_configs) 1 + (S.L.lights_ai_test_int_off_when_on_service_trip_time_low_configs)
                l2 (L.L.lights_ai_test_int_off_when_on_service_trip_time_low_avg) + (S.L.lights_ai_test_int_off_when_on_service_trip_time_low_avg)
                l2 (L.L.lights_ai_test_int_off_when_on_service_trip_time_low_min) min (S.L.lights_ai_test_int_off_when_on_service_trip_time_low_min)
                l2 (L.L.lights_ai_test_int_off_when_on_service_trip_time_low_max) max (S.L.lights_ai_test_int_off_when_on_service_trip_time_low_max)
            {endif}

            (L.L.lights_ai_int_lighting_off_during_service_trip_at_daytime)
            {if}
'               // Minority also deactivating interior lighting outside of the time window established above, whilst on
'               // service trips.
                (L.L.lights_ai_test_int_off_when_on_service_trip_daytime_percent) 1 + (S.L.lights_ai_test_int_off_when_on_service_trip_daytime_percent)

                (L.L.lights_ai_int_lighting_off_during_service_trip_dark_bright_differentiating_brightness) s1 -1 = !
                {if}
'                   // min, max, and avg brightness (actually "darkness") for service-trip-based deactivation.
                    (L.L.lights_ai_test_int_off_when_on_service_trip_brightness_configs) 1 + (S.L.lights_ai_test_int_off_when_on_service_trip_brightness_configs)
                    l1 (L.L.lights_ai_test_int_off_when_on_service_trip_brightness_avg) + (S.L.lights_ai_test_int_off_when_on_service_trip_brightness_avg)
                    l1 (L.L.lights_ai_test_int_off_when_on_service_trip_brightness_min) min (S.L.lights_ai_test_int_off_when_on_service_trip_brightness_min)
                    l1 (L.L.lights_ai_test_int_off_when_on_service_trip_brightness_max) max (S.L.lights_ai_test_int_off_when_on_service_trip_brightness_max)
                {else}
                    (L.L.lights_ai_int_lighting_off_when_engine_off_min_sun_alt) s1 91 = !
                    {if}
'                       // Minority also deactivating interior lighting whilst on service trips irrespective of the
'                       // environment being dark enough.
                        (L.L.lights_ai_test_int_off_when_engine_off_percent) 1 + (S.L.lights_ai_test_int_off_when_engine_off_percent)

'                       // ...furthermore, this minority takes engine state into account.
                        (L.L.lights_ai_test_int_off_when_engine_off_sun_alt_configs) 1 + (S.L.lights_ai_test_int_off_when_engine_off_sun_alt_configs)

'                       // min, max, and avg solar elevation angle for engine-based deactivation
                        l1 (L.L.lights_ai_test_int_off_when_engine_off_sun_alt_avg) + (S.L.lights_ai_test_int_off_when_engine_off_sun_alt_avg)
                        l1 (L.L.lights_ai_test_int_off_when_engine_off_sun_alt_min) min (S.L.lights_ai_test_int_off_when_engine_off_sun_alt_min)
                        l1 (L.L.lights_ai_test_int_off_when_engine_off_sun_alt_max) max (S.L.lights_ai_test_int_off_when_engine_off_sun_alt_max)

                        (L.L.lights_ai_int_lighting_off_when_engine_off_min_brightness) s1 -1 = !
                        {if}
'                           // min, max, and avg brightness for engine-based deactivation
                            (L.L.lights_ai_test_int_off_when_engine_off_brightness_configs) 1 + (S.L.lights_ai_test_int_off_when_engine_off_brightness_configs)
                            l1 (L.L.lights_ai_test_int_off_when_engine_off_brightness_avg) + (S.L.lights_ai_test_int_off_when_engine_off_brightness_avg)
                            l1 (L.L.lights_ai_test_int_off_when_engine_off_brightness_min) min (S.L.lights_ai_test_int_off_when_engine_off_brightness_min)
                            l1 (L.L.lights_ai_test_int_off_when_engine_off_brightness_max) max (S.L.lights_ai_test_int_off_when_engine_off_brightness_max)
                        {endif}
                    {endif}
                {endif}
            {endif}
        {endif}

'       // min, max, and avg interior lighting adjustment delay - lax transitions
        (L.L.lights_ai_test_int_darkness_tolerance_configs) 1 + (S.L.lights_ai_test_int_darkness_tolerance_configs)
        (L.L.lights_ai_int_lighting_darkness_tolerance) s1 (L.L.lights_ai_test_int_darkness_tolerance_avg) + (S.L.lights_ai_test_int_darkness_tolerance_avg)
        l1 (L.L.lights_ai_test_int_darkness_tolerance_min) min (S.L.lights_ai_test_int_darkness_tolerance_min)
        l1 (L.L.lights_ai_test_int_darkness_tolerance_max) max (S.L.lights_ai_test_int_darkness_tolerance_max)

'       // min, max, and avg interior lighting adjustment delay - strict transitions
        (L.L.lights_ai_test_int_brightness_tolerance_configs) 1 + (S.L.lights_ai_test_int_brightness_tolerance_configs)
        (L.L.lights_ai_int_lighting_brightness_tolerance) s1 (L.L.lights_ai_test_int_brightness_tolerance_avg) + (S.L.lights_ai_test_int_brightness_tolerance_avg)
        l1 (L.L.lights_ai_test_int_brightness_tolerance_min) min (S.L.lights_ai_test_int_brightness_tolerance_min)
        l1 (L.L.lights_ai_test_int_brightness_tolerance_max) max (S.L.lights_ai_test_int_brightness_tolerance_max)

'       // ----- Context-sensitive test metrics -----
'       // (context-sensitive in the sense that these metrics describe vehicle traits based on the current context;
'       // e.g., "what percentage of vehicles _currently_ uses fog lights _given_ it _is_ foggy?")

'       // Distribution of preferred exterior lighting sources of non-DRL-equipped vehicles.

        (L.L.lights_ai_ext_lighting_target) s1 0 =
        {if}
'           // Off
            (L.L.lights_ai_test_ctx_ext_off_percent_without_drl) 1 + (S.L.lights_ai_test_ctx_ext_off_percent_without_drl)
            (L.L.lights_ai_test_ctx_ext_off_percent) 1 + (S.L.lights_ai_test_ctx_ext_off_percent)
        {else}
            l1 1 =
            {if}
'               // Standstill
                (L.L.lights_ai_test_ctx_standstill_percent_without_drl) 1 + (S.L.lights_ai_test_ctx_standstill_percent_without_drl)
                (L.L.lights_ai_test_ctx_standstill_percent) 1 + (S.L.lights_ai_test_ctx_standstill_percent)
            {else}
                l1 2 =
                {if}
'                   // Standstill and head fog lights
                    (L.L.lights_ai_test_ctx_standstill_and_head_fog_lights_percent_without_drl) 1 +
                        (S.L.lights_ai_test_ctx_standstill_and_head_fog_lights_percent_without_drl)
                    (L.L.lights_ai_test_ctx_standstill_and_head_fog_lights_percent) 1 +
                        (S.L.lights_ai_test_ctx_standstill_and_head_fog_lights_percent)
                {else}
                    l1 3 =
                    {if}
'                       // Standstill and head and tail fog lights
'                       // Note: Placeholder -- this preference is currently unattainable, profile-wise.
                        (L.L.lights_ai_test_ctx_standstill_and_full_fog_lights_percent_without_drl) 1 +
                            (S.L.lights_ai_test_ctx_standstill_and_full_fog_lights_percent_without_drl)
                        (L.L.lights_ai_test_ctx_standstill_and_full_fog_lights_percent) 1 +
                            (S.L.lights_ai_test_ctx_standstill_and_full_fog_lights_percent)
                    {else}
                        l1 4 =
                        {if}
'                           // Headlights
                            (L.L.lights_ai_test_ctx_headlights_percent_without_drl) 1 +
                                (S.L.lights_ai_test_ctx_headlights_percent_without_drl)
                            (L.L.lights_ai_test_ctx_headlights_percent) 1 + (S.L.lights_ai_test_ctx_headlights_percent)
                        {else}
                            l1 5 =
                            {if}
'                               // Headlights and head fog lights
                                (L.L.lights_ai_test_ctx_headlights_and_head_fog_lights_percent_without_drl) 1 +
                                    (S.L.lights_ai_test_ctx_headlights_and_head_fog_lights_percent_without_drl)
                                (L.L.lights_ai_test_ctx_headlights_and_head_fog_lights_percent) 1 +
                                    (S.L.lights_ai_test_ctx_headlights_and_head_fog_lights_percent)
                            {else}
'                               // Headlights and head and tail fog lights
'                               // Note: Placeholder -- this preference is currently unattainable, profile-wise.
                                (L.L.lights_ai_test_ctx_headlights_and_full_fog_lights_percent_without_drl) 1 +
                                    (S.L.lights_ai_test_ctx_headlights_and_full_fog_lights_percent_without_drl)
                                (L.L.lights_ai_test_ctx_headlights_and_full_fog_lights_percent) 1 +
                                    (S.L.lights_ai_test_ctx_headlights_and_full_fog_lights_percent)
                            {endif}
                        {endif}
                    {endif}
                {endif}
            {endif}
        {endif}

'       // Distribution of effective conditions of non-DRL-equipped vehicles.
'       // Note: Percentage currently not perceiving the environment as fit for employment of exterior lighting,
'       //       regardless the concrete purpose, implied by lights_ai_test_ctx_ext_off_percent(_without_drl) above.

        (L.L.lights_ai_ext_lighting_env_perception_target) s1 1 =
        {if}
'           // Percentage of vehicles deeming the environment as for-being-seen-fit.
            (L.L.lights_ai_test_ctx_ext_on_for_being_seen_percent_without_drl) 1 +
                (S.L.lights_ai_test_ctx_ext_on_for_being_seen_percent_without_drl)
            (L.L.lights_ai_test_ctx_ext_on_for_being_seen_percent) 1 + (S.L.lights_ai_test_ctx_ext_on_for_being_seen_percent)
        {else}
            l1 2 =
            {if}
'               // Percentage of vehicles deeming the environment as for-reduced-seeing-fit.
                (L.L.lights_ai_test_ctx_ext_on_for_seeing_reduced_percent_without_drl) 1 +
                    (S.L.lights_ai_test_ctx_ext_on_for_seeing_reduced_percent_without_drl)
                (L.L.lights_ai_test_ctx_ext_on_for_seeing_reduced_percent) 1 + (S.L.lights_ai_test_ctx_ext_on_for_seeing_reduced_percent)
            {else}
                l1 3 =
                {if}
'                   // Percentage of vehicles deeming the environment as for-seeing-fit.
                    (L.L.lights_ai_test_ctx_ext_on_for_seeing_percent_without_drl) 1 +
                        (S.L.lights_ai_test_ctx_ext_on_for_seeing_percent_without_drl)
                    (L.L.lights_ai_test_ctx_ext_on_for_seeing_percent) 1 + (S.L.lights_ai_test_ctx_ext_on_for_seeing_percent)
                {else}
                    l1 4 =
                    {if}
'                       // Percentage of vehicles deeming the environment as for-adverse-seeing-fit.
                        (L.L.lights_ai_test_ctx_ext_on_for_seeing_adverse_percent_without_drl) 1 +
                            (S.L.lights_ai_test_ctx_ext_on_for_seeing_adverse_percent_without_drl)
                        (L.L.lights_ai_test_ctx_ext_on_for_seeing_adverse_percent) 1 +
                            (S.L.lights_ai_test_ctx_ext_on_for_seeing_adverse_percent)
                    {endif}
                {endif}
            {endif}
        {endif}

'       // Percentage of non-DRL-equipped vehicles temporarily disabling exterior lighting when the engine is off,
'       // under the current context.

        (L.L.lights_ai_ext_lighting_env_perception_target) (L.L.lights_ai_ext_lighting_off_when_engine_off_day_night_differentiating_sun_alt) 91 = ! &&
        {if}
            0 (S.L.lights_ai_ai_engine)
            (M.L.lights_ai_profile_apply)
            (L.L.lights_ai_ext_lighting_env_perception_target) -5 =
            {if}
                (L.L.lights_ai_test_ctx_ext_off_when_engine_off_percent_without_drl) 1 +
                    (S.L.lights_ai_test_ctx_ext_off_when_engine_off_percent_without_drl)
                (L.L.lights_ai_test_ctx_ext_off_when_engine_off_percent) 1 +
                    (S.L.lights_ai_test_ctx_ext_off_when_engine_off_percent)
            {endif}
            1 (S.L.lights_ai_ai_engine)
            (M.L.lights_ai_profile_apply)
        {endif}

'       // Usage of interior lighting under the current context.

        (L.L.lights_ai_int_lighting_target) s1 0 =
        {if}
'           // Off
            (L.L.lights_ai_test_ctx_int_off_percent) 1 + (S.L.lights_ai_test_ctx_int_off_percent)
        {else}
            l1 1 =
            {if}
'               // Dimmed
                (L.L.lights_ai_test_ctx_int_dimmed_percent) 1 + (S.L.lights_ai_test_ctx_int_dimmed_percent)
            {else}
'               // Full
                (L.L.lights_ai_test_ctx_int_full_percent) 1 + (S.L.lights_ai_test_ctx_int_full_percent)
            {endif}
        {endif}

'       // Percentage of vehicles temporarily disabling interior lighting when the engine is off, under the current
'       // context.

        (L.L.lights_ai_int_lighting_env_perception_target) (L.L.lights_ai_int_lighting_off_when_engine_off_min_sun_alt) 91 = ! &&
        {if}
            0 (S.L.lights_ai_ai_engine)
            (M.L.lights_ai_profile_apply)
            (L.L.lights_ai_int_lighting_env_perception_target) -1 =
            {if}
                (L.L.lights_ai_test_ctx_int_off_when_engine_off_percent) 1 + (S.L.lights_ai_test_ctx_int_off_when_engine_off_percent)
            {endif}
            1 (S.L.lights_ai_ai_engine)
            (M.L.lights_ai_profile_apply)
        {endif}

'       // Percentage of vehicles temporarily disabling interior lighting when on a service trip, under the current
'       // context.

        (L.L.lights_ai_int_lighting_env_perception_target) (L.L.lights_ai_int_lighting_off_during_service_trip_day_night_differentiating_sun_alt) 91 = ! &&
        {if}
            1 (S.L.lights_ai_test_ctx_on_service_trip)
            (M.L.lights_ai_profile_apply)
            (L.L.lights_ai_int_lighting_env_perception_target) -1 =
            {if}
                (L.L.lights_ai_test_ctx_int_off_when_on_service_trip_percent) 1 +
                    (S.L.lights_ai_test_ctx_int_off_when_on_service_trip_percent)
            {endif}
            0 (S.L.lights_ai_test_ctx_on_service_trip)
            (M.L.lights_ai_profile_apply)
        {endif}

'       // Percentage of vehicles without DRL that, given the current context, use exterior lighting but do not use
'       // interior lighting.

        (L.L.lights_ai_ext_lighting_env_perception_target) (L.L.lights_ai_int_lighting_env_perception_target) ! &&
        {if}
            (L.L.lights_ai_test_ctx_ext_on_and_int_off_percent_without_drl) 1 +
                (S.L.lights_ai_test_ctx_ext_on_and_int_off_percent_without_drl)
            (L.L.lights_ai_test_ctx_ext_on_and_int_off_percent) 1 +
                (S.L.lights_ai_test_ctx_ext_on_and_int_off_percent)
        {endif}

'       // Percentage of vehicles without DRL that, given the current context, do not use exterior lighting but do use
'       // interior lighting.

        (L.L.lights_ai_ext_lighting_env_perception_target) ! (L.L.lights_ai_int_lighting_env_perception_target) &&
        {if}
            (L.L.lights_ai_test_ctx_ext_off_and_int_on_percent_without_drl) 1 +
                (S.L.lights_ai_test_ctx_ext_off_and_int_on_percent_without_drl)
            (L.L.lights_ai_test_ctx_ext_off_and_int_on_percent) 1 +
                (S.L.lights_ai_test_ctx_ext_off_and_int_on_percent)
        {endif}

'       // Adjust context to a DRL-equipped vehicle
        0 (S.L.lights_ai_initialized)
        1 (S.L.lights_ai_drl_installed)
        (M.L.lights_ai_profile_apply)
        (M.L.lights_ai_profile_apply)
        (M.L.lights_ai_profile_apply)

'       // Distribution of preferred exterior lighting sources of DRL-equipped vehicles.

        (L.L.lights_ai_ext_lighting_target) s1 0 =
        {if}
'           // Off
            (L.L.lights_ai_test_ctx_ext_off_percent_drl) 1 + (S.L.lights_ai_test_ctx_ext_off_percent_drl)
            (L.L.lights_ai_test_ctx_ext_off_percent) 1 + (S.L.lights_ai_test_ctx_ext_off_percent)
        {else}
            l1 1 =
            {if}
'               // Standstill
                (L.L.lights_ai_test_ctx_standstill_percent_drl) 1 + (S.L.lights_ai_test_ctx_standstill_percent_drl)
                (L.L.lights_ai_test_ctx_standstill_percent) 1 + (S.L.lights_ai_test_ctx_standstill_percent)
            {else}
                l1 2 =
                {if}
'                   // Standstill and head fog lights
                    (L.L.lights_ai_test_ctx_standstill_and_head_fog_lights_percent_drl) 1 +
                        (S.L.lights_ai_test_ctx_standstill_and_head_fog_lights_percent_drl)
                    (L.L.lights_ai_test_ctx_standstill_and_head_fog_lights_percent) 1 +
                        (S.L.lights_ai_test_ctx_standstill_and_head_fog_lights_percent)
                {else}
                    l1 3 =
                    {if}
'                       // Standstill and head and tail fog lights
'                       // Note: Placeholder -- this preference is currently unattainable, profile-wise.
                        (L.L.lights_ai_test_ctx_standstill_and_full_fog_lights_percent_drl) 1 +
                            (S.L.lights_ai_test_ctx_standstill_and_full_fog_lights_percent_drl)
                        (L.L.lights_ai_test_ctx_standstill_and_full_fog_lights_percent) 1 +
                            (S.L.lights_ai_test_ctx_standstill_and_full_fog_lights_percent)
                    {else}
                        l1 4 =
                        {if}
'                           // Headlights
                            (L.L.lights_ai_test_ctx_headlights_percent_drl) 1 +
                                (S.L.lights_ai_test_ctx_headlights_percent_drl)
                            (L.L.lights_ai_test_ctx_headlights_percent) 1 + (S.L.lights_ai_test_ctx_headlights_percent)
                        {else}
                            l1 5 =
                            {if}
'                               // Headlights and head fog lights
                                (L.L.lights_ai_test_ctx_headlights_and_head_fog_lights_percent_drl) 1 +
                                    (S.L.lights_ai_test_ctx_headlights_and_head_fog_lights_percent_drl)
                                (L.L.lights_ai_test_ctx_headlights_and_head_fog_lights_percent) 1 +
                                    (S.L.lights_ai_test_ctx_headlights_and_head_fog_lights_percent)
                            {else}
'                               // Headlights and head and tail fog lights
'                               // Note: Placeholder -- this preference is currently unattainable, profile-wise.
                                (L.L.lights_ai_test_ctx_headlights_and_full_fog_lights_percent_drl) 1 +
                                    (S.L.lights_ai_test_ctx_headlights_and_full_fog_lights_percent_drl)
                                (L.L.lights_ai_test_ctx_headlights_and_full_fog_lights_percent) 1 +
                                    (S.L.lights_ai_test_ctx_headlights_and_full_fog_lights_percent)
                            {endif}
                        {endif}
                    {endif}
                {endif}
            {endif}
        {endif}

'       // Distribution of effective conditions of DRL-equipped vehicles.
'       // Note: Percentage currently not perceiving the environment as fit for employment of exterior lighting,
'       //       regardless the concrete purpose, implied by lights_ai_test_ctx_ext_off_percent(_drl) above.

        (L.L.lights_ai_ext_lighting_env_perception_target) s1 1 =
        {if}
'           // Percentage of vehicles deeming the environment as for-being-seen-fit.
            (L.L.lights_ai_test_ctx_ext_on_for_being_seen_percent_drl) 1 +
                (S.L.lights_ai_test_ctx_ext_on_for_being_seen_percent_drl)
            (L.L.lights_ai_test_ctx_ext_on_for_being_seen_percent) 1 + (S.L.lights_ai_test_ctx_ext_on_for_being_seen_percent)
        {else}
            l1 2 =
            {if}
'               // Percentage of vehicles deeming the environment as for-reduced-seeing-fit.
                (L.L.lights_ai_test_ctx_ext_on_for_seeing_reduced_percent_drl) 1 +
                    (S.L.lights_ai_test_ctx_ext_on_for_seeing_reduced_percent_drl)
                (L.L.lights_ai_test_ctx_ext_on_for_seeing_reduced_percent) 1 + (S.L.lights_ai_test_ctx_ext_on_for_seeing_reduced_percent)
            {else}
                l1 3 =
                {if}
'                   // Percentage of vehicles deeming the environment as for-seeing-fit.
                    (L.L.lights_ai_test_ctx_ext_on_for_seeing_percent_drl) 1 +
                        (S.L.lights_ai_test_ctx_ext_on_for_seeing_percent_drl)
                    (L.L.lights_ai_test_ctx_ext_on_for_seeing_percent) 1 + (S.L.lights_ai_test_ctx_ext_on_for_seeing_percent)
                {else}
                    l1 4 =
                    {if}
'                       // Percentage of vehicles deeming the environment as for-adverse-seeing-fit.
                        (L.L.lights_ai_test_ctx_ext_on_for_seeing_adverse_percent_drl) 1 +
                            (S.L.lights_ai_test_ctx_ext_on_for_seeing_adverse_percent_drl)
                        (L.L.lights_ai_test_ctx_ext_on_for_seeing_adverse_percent) 1 +
                            (S.L.lights_ai_test_ctx_ext_on_for_seeing_adverse_percent)
                    {endif}
                {endif}
            {endif}
        {endif}

'       // Percentage of DRL-equipped vehicles temporarily disabling exterior lighting when the engine is off, under
'       // the current context.

        (L.L.lights_ai_ext_lighting_env_perception_target) (L.L.lights_ai_ext_lighting_off_when_engine_off_day_night_differentiating_sun_alt_drl) 91 = ! &&
        {if}
            0 (S.L.lights_ai_ai_engine)
            (M.L.lights_ai_profile_apply)
            (L.L.lights_ai_ext_lighting_env_perception_target) -5 =
            {if}
                (L.L.lights_ai_test_ctx_ext_off_when_engine_off_percent_drl) 1 +
                    (S.L.lights_ai_test_ctx_ext_off_when_engine_off_percent_drl)
                (L.L.lights_ai_test_ctx_ext_off_when_engine_off_percent) 1 +
                    (S.L.lights_ai_test_ctx_ext_off_when_engine_off_percent)
            {endif}
            1 (S.L.lights_ai_ai_engine)
            (M.L.lights_ai_profile_apply)
        {endif}

'       // Percentage of vehicles having DRL that, given the current context, use exterior lighting but do not use
'       // interior lighting.

        (L.L.lights_ai_ext_lighting_env_perception_target) (L.L.lights_ai_int_lighting_env_perception_target) ! &&
        {if}
            (L.L.lights_ai_test_ctx_ext_on_and_int_off_percent_drl) 1 +
                (S.L.lights_ai_test_ctx_ext_on_and_int_off_percent_drl)
            (L.L.lights_ai_test_ctx_ext_on_and_int_off_percent) 1 +
                (S.L.lights_ai_test_ctx_ext_on_and_int_off_percent)
        {endif}

'       // Percentage of vehicles having DRL that, given the current context, do not use exterior lighting but do use
'       // interior lighting.

        (L.L.lights_ai_ext_lighting_env_perception_target) ! (L.L.lights_ai_int_lighting_env_perception_target) &&
        {if}
            (L.L.lights_ai_test_ctx_ext_off_and_int_on_percent_drl) 1 +
                (S.L.lights_ai_test_ctx_ext_off_and_int_on_percent_drl)
            (L.L.lights_ai_test_ctx_ext_off_and_int_on_percent) 1 +
                (S.L.lights_ai_test_ctx_ext_off_and_int_on_percent)
        {endif}

    {else}
        (L.L.lights_ai_test_status) 2 =
        {if}
            (M.L.lights_ai_test_finalize)
        {endif}
    {endif}
{end}

'------------------------------------------------------------------------------
' Terminates a testing round and handles metric post-processing where required.
' Upon returning, all collected test variables are available, in their final,
' stable form, in the corresponding OMSI situation file, for review or further
' manual processing by the user.
'
' This macro is executed in any of the following cases:
' - The user triggered testing termination.
' - The acquired sample size reached the (hardcoded for the time being) limit
'   of 10000.
' - Vehicle control was transfered to the AI.
'------------------------------------------------------------------------------
{macro:lights_ai_test_finalize}
    (L.L.lights_ai_test_ctx_total_configs) s0 2 * s1
    {if}

'       // ----- Context-insensitive test metrics -----

        (L.L.lights_ai_test_ext_seeing_sun_alt_configs_without_drl) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_sun_alt_avg_without_drl) l2 / (S.L.lights_ai_test_ext_seeing_sun_alt_avg_without_drl)
        {endif}

        (L.L.lights_ai_test_ext_seeing_sun_alt_configs_drl) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_sun_alt_avg_drl) l2 / (S.L.lights_ai_test_ext_seeing_sun_alt_avg_drl)
        {endif}

        (L.L.lights_ai_test_ext_seeing_sun_alt_configs) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_sun_alt_avg) l2 / (S.L.lights_ai_test_ext_seeing_sun_alt_avg)
        {endif}

        (L.L.lights_ai_test_ext_seeing_brightness_configs_without_drl) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_brightness_avg_without_drl) l2 /
                (S.L.lights_ai_test_ext_seeing_brightness_avg_without_drl)
        {endif}

        (L.L.lights_ai_test_ext_seeing_brightness_configs_drl) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_brightness_avg_drl) l2 /
                (S.L.lights_ai_test_ext_seeing_brightness_avg_drl)
        {endif}

        (L.L.lights_ai_test_ext_seeing_brightness_configs) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_brightness_avg) l2 / (S.L.lights_ai_test_ext_seeing_brightness_avg)
        {endif}

        (L.L.lights_ai_test_ext_seeing_rain_rate_configs_without_drl) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_rain_rate_avg_without_drl) l2 /
                (S.L.lights_ai_test_ext_seeing_rain_rate_avg_without_drl)
        {endif}

        (L.L.lights_ai_test_ext_seeing_rain_rate_configs_drl) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_rain_rate_avg_drl) l2 /
                (S.L.lights_ai_test_ext_seeing_rain_rate_avg_drl)
        {endif}

        (L.L.lights_ai_test_ext_seeing_rain_rate_configs) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_rain_rate_avg) l2 /
                (S.L.lights_ai_test_ext_seeing_rain_rate_avg)
        {endif}

        (L.L.lights_ai_test_ext_seeing_snow_rate_configs_without_drl) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_snow_rate_avg_without_drl) l2 /
                (S.L.lights_ai_test_ext_seeing_snow_rate_avg_without_drl)
        {endif}

        (L.L.lights_ai_test_ext_seeing_snow_rate_configs_drl) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_snow_rate_avg_drl) l2 /
                (S.L.lights_ai_test_ext_seeing_snow_rate_avg_drl)
        {endif}

        (L.L.lights_ai_test_ext_seeing_snow_rate_configs) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_snow_rate_avg) l2 /
                (S.L.lights_ai_test_ext_seeing_snow_rate_avg)
        {endif}

        (L.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_configs_without_drl) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_avg_without_drl) l2 /
                (S.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_avg_without_drl)
        {endif}

        (L.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_configs_drl) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_avg_drl) l2 /
                (S.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_avg_drl)
        {endif}

        (L.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_configs) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_avg) l2 /
                (S.L.lights_ai_test_ext_seeing_prolonged_sun_alt_under_precipitation_avg)
        {endif}

        (L.L.lights_ai_test_ext_seeing_prolonging_rain_rate_configs_without_drl) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_prolonging_rain_rate_avg_without_drl) l2 /
                (S.L.lights_ai_test_ext_seeing_prolonging_rain_rate_avg_without_drl)
        {endif}

        (L.L.lights_ai_test_ext_seeing_prolonging_rain_rate_configs_drl) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_prolonging_rain_rate_avg_drl) l2 /
                (S.L.lights_ai_test_ext_seeing_prolonging_rain_rate_avg_drl)
        {endif}

        (L.L.lights_ai_test_ext_seeing_prolonging_rain_rate_configs) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_prolonging_rain_rate_avg) l2 /
                (S.L.lights_ai_test_ext_seeing_prolonging_rain_rate_avg)
        {endif}

        (L.L.lights_ai_test_ext_seeing_prolonging_snow_rate_configs_without_drl) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_prolonging_snow_rate_avg_without_drl) l2 /
                (S.L.lights_ai_test_ext_seeing_prolonging_snow_rate_avg_without_drl)
        {endif}

        (L.L.lights_ai_test_ext_seeing_prolonging_snow_rate_configs_drl) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_prolonging_snow_rate_avg_drl) l2 /
                (S.L.lights_ai_test_ext_seeing_prolonging_snow_rate_avg_drl)
        {endif}

        (L.L.lights_ai_test_ext_seeing_prolonging_snow_rate_configs) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_prolonging_snow_rate_avg) l2 /
                (S.L.lights_ai_test_ext_seeing_prolonging_snow_rate_avg)
        {endif}

        (L.L.lights_ai_test_ext_seeing_reduced_sun_alt_configs_without_drl) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_reduced_sun_alt_avg_without_drl) l2 /
                (S.L.lights_ai_test_ext_seeing_reduced_sun_alt_avg_without_drl)
        {endif}

        (L.L.lights_ai_test_ext_seeing_reduced_sun_alt_configs_drl) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_reduced_sun_alt_avg_drl) l2 /
                (S.L.lights_ai_test_ext_seeing_reduced_sun_alt_avg_drl)
        {endif}

        (L.L.lights_ai_test_ext_seeing_reduced_sun_alt_configs) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_reduced_sun_alt_avg) l2 /
                (S.L.lights_ai_test_ext_seeing_reduced_sun_alt_avg)
        {endif}

        (L.L.lights_ai_test_ext_seeing_reduced_brightness_configs_without_drl) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_reduced_brightness_avg_without_drl) l2 /
                (S.L.lights_ai_test_ext_seeing_reduced_brightness_avg_without_drl)
        {endif}

        (L.L.lights_ai_test_ext_seeing_reduced_brightness_configs_drl) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_reduced_brightness_avg_drl) l2 /
                (S.L.lights_ai_test_ext_seeing_reduced_brightness_avg_drl)
        {endif}

        (L.L.lights_ai_test_ext_seeing_reduced_brightness_configs) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_reduced_brightness_avg) l2 /
                (S.L.lights_ai_test_ext_seeing_reduced_brightness_avg)
        {endif}

        (L.L.lights_ai_test_ext_seeing_reduced_rain_rate_configs_without_drl) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_reduced_rain_rate_avg_without_drl) l2 /
                (S.L.lights_ai_test_ext_seeing_reduced_rain_rate_avg_without_drl)
        {endif}

        (L.L.lights_ai_test_ext_seeing_reduced_rain_rate_configs_drl) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_reduced_rain_rate_avg_drl) l2 /
                (S.L.lights_ai_test_ext_seeing_reduced_rain_rate_avg_drl)
        {endif}

        (L.L.lights_ai_test_ext_seeing_reduced_rain_rate_configs) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_reduced_rain_rate_avg) l2 /
                (S.L.lights_ai_test_ext_seeing_reduced_rain_rate_avg)
        {endif}

        (L.L.lights_ai_test_ext_seeing_reduced_snow_rate_configs_without_drl) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_reduced_snow_rate_avg_without_drl) l2 /
                (S.L.lights_ai_test_ext_seeing_reduced_snow_rate_avg_without_drl)
        {endif}

        (L.L.lights_ai_test_ext_seeing_reduced_snow_rate_configs_drl) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_reduced_snow_rate_avg_drl) l2 /
                (S.L.lights_ai_test_ext_seeing_reduced_snow_rate_avg_drl)
        {endif}

        (L.L.lights_ai_test_ext_seeing_reduced_snow_rate_configs) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_reduced_snow_rate_avg) l2 /
                (S.L.lights_ai_test_ext_seeing_reduced_snow_rate_avg)
        {endif}

        (L.L.lights_ai_test_ext_on_for_seeing_reduced_percent_without_drl) l0 /
            (S.L.lights_ai_test_ext_on_for_seeing_reduced_percent_without_drl)
        (L.L.lights_ai_test_ext_on_for_seeing_reduced_percent_drl) l0 /
            (S.L.lights_ai_test_ext_on_for_seeing_reduced_percent_drl)
        (L.L.lights_ai_test_ext_on_for_seeing_reduced_percent) l1 /
            (S.L.lights_ai_test_ext_on_for_seeing_reduced_percent)

        (L.L.lights_ai_test_ext_seeing_adverse_brightness_configs_without_drl) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_adverse_brightness_avg_without_drl) l2 /
                (S.L.lights_ai_test_ext_seeing_adverse_brightness_avg_without_drl)
        {endif}

        (L.L.lights_ai_test_ext_seeing_adverse_brightness_configs_drl) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_adverse_brightness_avg_drl) l2 /
                (S.L.lights_ai_test_ext_seeing_adverse_brightness_avg_drl)
        {endif}

        (L.L.lights_ai_test_ext_seeing_adverse_brightness_configs) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_adverse_brightness_avg) l2 / (S.L.lights_ai_test_ext_seeing_adverse_brightness_avg)
        {endif}

        (L.L.lights_ai_test_ext_seeing_adverse_rain_rate_configs_without_drl) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_adverse_rain_rate_avg_without_drl) l2 /
                (S.L.lights_ai_test_ext_seeing_adverse_rain_rate_avg_without_drl)
        {endif}

        (L.L.lights_ai_test_ext_seeing_adverse_rain_rate_configs_drl) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_adverse_rain_rate_avg_drl) l2 /
                (S.L.lights_ai_test_ext_seeing_adverse_rain_rate_avg_drl)
        {endif}

        (L.L.lights_ai_test_ext_seeing_adverse_rain_rate_configs) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_adverse_rain_rate_avg) l2 /
                (S.L.lights_ai_test_ext_seeing_adverse_rain_rate_avg)
        {endif}

        (L.L.lights_ai_test_ext_seeing_adverse_snow_rate_configs_without_drl) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_adverse_snow_rate_avg_without_drl) l2 /
                (S.L.lights_ai_test_ext_seeing_adverse_snow_rate_avg_without_drl)
        {endif}

        (L.L.lights_ai_test_ext_seeing_adverse_snow_rate_configs_drl) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_adverse_snow_rate_avg_drl) l2 /
                (S.L.lights_ai_test_ext_seeing_adverse_snow_rate_avg_drl)
        {endif}

        (L.L.lights_ai_test_ext_seeing_adverse_snow_rate_configs) s2
        {if}
            (L.L.lights_ai_test_ext_seeing_adverse_snow_rate_avg) l2 /
                (S.L.lights_ai_test_ext_seeing_adverse_snow_rate_avg)
        {endif}

        (L.L.lights_ai_test_ext_on_for_seeing_adverse_percent) l0 /
            (S.L.lights_ai_test_ext_on_for_seeing_adverse_percent)

        (L.L.lights_ai_test_ext_seen_sun_alt_configs_without_drl) s2
        {if}
            (L.L.lights_ai_test_ext_seen_sun_alt_avg_without_drl) l2 /
                (S.L.lights_ai_test_ext_seen_sun_alt_avg_without_drl)
        {endif}

        (L.L.lights_ai_test_ext_seen_sun_alt_configs_drl) s2
        {if}
            (L.L.lights_ai_test_ext_seen_sun_alt_avg_drl) l2 / (S.L.lights_ai_test_ext_seen_sun_alt_avg_drl)
        {endif}

        (L.L.lights_ai_test_ext_seen_sun_alt_configs) s2
        {if}
            (L.L.lights_ai_test_ext_seen_sun_alt_avg) l2 / (S.L.lights_ai_test_ext_seen_sun_alt_avg)
        {endif}

        (L.L.lights_ai_test_ext_on_for_being_seen_percent_without_drl) l0 /
            (S.L.lights_ai_test_ext_on_for_being_seen_percent_without_drl)
        (L.L.lights_ai_test_ext_on_for_being_seen_percent_drl) l0 /
            (S.L.lights_ai_test_ext_on_for_being_seen_percent_drl)
        (L.L.lights_ai_test_ext_on_for_being_seen_percent) l1 /
            (S.L.lights_ai_test_ext_on_for_being_seen_percent)

        (L.L.lights_ai_test_ext_always_on_for_being_seen_percent_without_drl) l0 /
            (S.L.lights_ai_test_ext_always_on_for_being_seen_percent_without_drl)
        (L.L.lights_ai_test_ext_always_on_for_being_seen_percent_drl) l0 /
            (S.L.lights_ai_test_ext_always_on_for_being_seen_percent_drl)
        (L.L.lights_ai_test_ext_always_on_for_being_seen_percent) l1 /
            (S.L.lights_ai_test_ext_always_on_for_being_seen_percent)

        (L.L.lights_ai_test_ext_off_when_engine_off_sun_alt_configs_without_drl) s2
        {if}
            (L.L.lights_ai_test_ext_off_when_engine_off_sun_alt_avg_without_drl) l2 /
                (S.L.lights_ai_test_ext_off_when_engine_off_sun_alt_avg_without_drl)
            (L.L.lights_ai_test_ext_off_when_engine_off_percent_without_drl) l0 /
                (S.L.lights_ai_test_ext_off_when_engine_off_percent_without_drl)
            (L.L.lights_ai_test_ext_off_when_engine_off_nighttime_percent_without_drl) l0 /
                (S.L.lights_ai_test_ext_off_when_engine_off_nighttime_percent_without_drl)
        {endif}

        (L.L.lights_ai_test_ext_off_when_engine_off_sun_alt_configs_drl) s2
        {if}
            (L.L.lights_ai_test_ext_off_when_engine_off_sun_alt_avg_drl) l2 /
                (S.L.lights_ai_test_ext_off_when_engine_off_sun_alt_avg_drl)
            (L.L.lights_ai_test_ext_off_when_engine_off_percent_drl) l0 /
                (S.L.lights_ai_test_ext_off_when_engine_off_percent_drl)
            (L.L.lights_ai_test_ext_off_when_engine_off_nighttime_percent_drl) l0 /
                (S.L.lights_ai_test_ext_off_when_engine_off_nighttime_percent_drl)
        {endif}

        (L.L.lights_ai_test_ext_off_when_engine_off_sun_alt_configs) s2
        {if}
            (L.L.lights_ai_test_ext_off_when_engine_off_sun_alt_avg) l2 /
                (S.L.lights_ai_test_ext_off_when_engine_off_sun_alt_avg)
            (L.L.lights_ai_test_ext_off_when_engine_off_percent) l1 /
                (S.L.lights_ai_test_ext_off_when_engine_off_percent)
            (L.L.lights_ai_test_ext_off_when_engine_off_nighttime_percent) l1 /
                (S.L.lights_ai_test_ext_off_when_engine_off_nighttime_percent)
        {endif}

        (L.L.lights_ai_test_ext_off_when_engine_off_brightness_configs_without_drl) s2
        {if}
            (L.L.lights_ai_test_ext_off_when_engine_off_brightness_avg_without_drl) l2 /
                (S.L.lights_ai_test_ext_off_when_engine_off_brightness_avg_without_drl)
        {endif}

        (L.L.lights_ai_test_ext_off_when_engine_off_brightness_configs_drl) s2
        {if}
            (L.L.lights_ai_test_ext_off_when_engine_off_brightness_avg_drl) l2 /
                (S.L.lights_ai_test_ext_off_when_engine_off_brightness_avg_drl)
        {endif}

        (L.L.lights_ai_test_ext_off_when_engine_off_brightness_configs) s2
        {if}
            (L.L.lights_ai_test_ext_off_when_engine_off_brightness_avg) l2 /
                (S.L.lights_ai_test_ext_off_when_engine_off_brightness_avg)
        {endif}

        (L.L.lights_ai_test_ext_off_when_engine_off_rain_rate_configs_without_drl) s2
        {if}
            (L.L.lights_ai_test_ext_off_when_engine_off_rain_rate_avg_without_drl) l2 /
                (S.L.lights_ai_test_ext_off_when_engine_off_rain_rate_avg_without_drl)
        {endif}

        (L.L.lights_ai_test_ext_off_when_engine_off_rain_rate_configs_drl) s2
        {if}
            (L.L.lights_ai_test_ext_off_when_engine_off_rain_rate_avg_drl) l2 /
                (S.L.lights_ai_test_ext_off_when_engine_off_rain_rate_avg_drl)
        {endif}

        (L.L.lights_ai_test_ext_off_when_engine_off_rain_rate_configs) s2
        {if}
            (L.L.lights_ai_test_ext_off_when_engine_off_rain_rate_avg) l2 /
                (S.L.lights_ai_test_ext_off_when_engine_off_rain_rate_avg)
        {endif}

        (L.L.lights_ai_test_ext_off_when_engine_off_snow_rate_configs_without_drl) s2
        {if}
            (L.L.lights_ai_test_ext_off_when_engine_off_snow_rate_avg_without_drl) l2 /
                (S.L.lights_ai_test_ext_off_when_engine_off_snow_rate_avg_without_drl)
        {endif}

        (L.L.lights_ai_test_ext_off_when_engine_off_snow_rate_configs_drl) s2
        {if}
            (L.L.lights_ai_test_ext_off_when_engine_off_snow_rate_avg_drl) l2 /
                (S.L.lights_ai_test_ext_off_when_engine_off_snow_rate_avg_drl)
        {endif}

        (L.L.lights_ai_test_ext_off_when_engine_off_snow_rate_configs) s2
        {if}
            (L.L.lights_ai_test_ext_off_when_engine_off_snow_rate_avg) l2 /
                (S.L.lights_ai_test_ext_off_when_engine_off_snow_rate_avg)
        {endif}

        (L.L.lights_ai_test_ext_darkness_tolerance_configs) s2
        {if}
            (L.L.lights_ai_test_ext_darkness_tolerance_avg) l2 / (S.L.lights_ai_test_ext_darkness_tolerance_avg)
        {endif}

        (L.L.lights_ai_test_ext_brightness_tolerance_configs) s2
        {if}
            (L.L.lights_ai_test_ext_brightness_tolerance_avg) l2 / (S.L.lights_ai_test_ext_brightness_tolerance_avg)
        {endif}

        (L.L.lights_ai_test_int_sun_alt_configs) s2
        {if}
            (L.L.lights_ai_test_int_sun_alt_avg) l2 / (S.L.lights_ai_test_int_sun_alt_avg)
        {endif}

        (L.L.lights_ai_test_int_always_on_percent) l0 / (S.L.lights_ai_test_int_always_on_percent)
            (L.L.lights_ai_test_int_brightness_configs) s2
        {if}
            (L.L.lights_ai_test_int_brightness_avg) l2 / (S.L.lights_ai_test_int_brightness_avg)
        {endif}

        (L.L.lights_ai_test_int_dimmed_sun_alt_configs) s2
        {if}
            (L.L.lights_ai_test_int_dimmed_sun_alt_avg) l2 / (S.L.lights_ai_test_int_dimmed_sun_alt_avg)
        {endif}

        (L.L.lights_ai_test_int_dimmed_brightness_configs) s2
        {if}
            (L.L.lights_ai_test_int_dimmed_brightness_avg) l2 / (S.L.lights_ai_test_int_dimmed_brightness_avg)
        {endif}

        (L.L.lights_ai_test_int_off_when_on_service_trip_sun_alt_configs) s2
        {if}
            (L.L.lights_ai_test_int_off_when_on_service_trip_sun_alt_avg) l2 /
                (S.L.lights_ai_test_int_off_when_on_service_trip_sun_alt_avg)
            (L.L.lights_ai_test_int_off_when_on_service_trip_percent) l0 /
                (S.L.lights_ai_test_int_off_when_on_service_trip_percent)
            (L.L.lights_ai_test_int_off_when_on_service_trip_time_low_configs) s3
            {if}
                (L.L.lights_ai_test_int_off_when_on_service_trip_time_low_avg) l3 /
                    (S.L.lights_ai_test_int_off_when_on_service_trip_time_low_avg)
            {endif}
            (L.L.lights_ai_test_int_off_when_on_service_trip_time_high_configs) s3
            {if}
                (L.L.lights_ai_test_int_off_when_on_service_trip_time_high_avg) l3 /
                    (S.L.lights_ai_test_int_off_when_on_service_trip_time_high_avg)
            {endif}
            (L.L.lights_ai_test_int_off_when_on_service_trip_daytime_percent) l0 /
                (S.L.lights_ai_test_int_off_when_on_service_trip_daytime_percent)
            (L.L.lights_ai_test_int_off_when_on_service_trip_brightness_configs) s3
            {if}
                (L.L.lights_ai_test_int_off_when_on_service_trip_brightness_avg) l3 /
                    (S.L.lights_ai_test_int_off_when_on_service_trip_brightness_avg)
            {endif}
            (L.L.lights_ai_test_int_off_when_engine_off_percent) l0 / (S.L.lights_ai_test_int_off_when_engine_off_percent)
            (L.L.lights_ai_test_int_off_when_engine_off_sun_alt_configs) s3
            {if}
                (L.L.lights_ai_test_int_off_when_engine_off_sun_alt_avg) l3 /
                    (S.L.lights_ai_test_int_off_when_engine_off_sun_alt_avg)
            {endif}
            (L.L.lights_ai_test_int_off_when_engine_off_brightness_configs) s3
            {if}
                (L.L.lights_ai_test_int_off_when_engine_off_brightness_avg) l3 /
                    (S.L.lights_ai_test_int_off_when_engine_off_brightness_avg)
            {endif}
        {endif}

        (L.L.lights_ai_test_int_darkness_tolerance_configs) s2
        {if}
            (L.L.lights_ai_test_int_darkness_tolerance_avg) l2 / (S.L.lights_ai_test_int_darkness_tolerance_avg)
        {endif}

        (L.L.lights_ai_test_int_brightness_tolerance_configs) s2
        {if}
            (L.L.lights_ai_test_int_brightness_tolerance_avg) l2 / (S.L.lights_ai_test_int_brightness_tolerance_avg)
        {endif}

'       // ----- Context-sensitive test metrics -----

        (L.L.lights_ai_test_ctx_ext_off_percent_without_drl) l0 / (S.L.lights_ai_test_ctx_ext_off_percent_without_drl)
        (L.L.lights_ai_test_ctx_ext_off_percent_drl) l0 / (S.L.lights_ai_test_ctx_ext_off_percent_drl)
        (L.L.lights_ai_test_ctx_ext_off_percent) l1 / (S.L.lights_ai_test_ctx_ext_off_percent)

        (L.L.lights_ai_test_ctx_standstill_percent_without_drl) l0 / (S.L.lights_ai_test_ctx_standstill_percent_without_drl)
        (L.L.lights_ai_test_ctx_standstill_percent_drl) l0 / (S.L.lights_ai_test_ctx_standstill_percent_drl)
        (L.L.lights_ai_test_ctx_standstill_percent) l1 / (S.L.lights_ai_test_ctx_standstill_percent)

        (L.L.lights_ai_test_ctx_standstill_and_head_fog_lights_percent_without_drl) l0 /
            (S.L.lights_ai_test_ctx_standstill_and_head_fog_lights_percent_without_drl)
        (L.L.lights_ai_test_ctx_standstill_and_head_fog_lights_percent_drl) l0 /
            (S.L.lights_ai_test_ctx_standstill_and_head_fog_lights_percent_drl)
        (L.L.lights_ai_test_ctx_standstill_and_head_fog_lights_percent) l1 /
            (S.L.lights_ai_test_ctx_standstill_and_head_fog_lights_percent)

        (L.L.lights_ai_test_ctx_standstill_and_full_fog_lights_percent_without_drl) l0 /
            (S.L.lights_ai_test_ctx_standstill_and_full_fog_lights_percent_without_drl)
        (L.L.lights_ai_test_ctx_standstill_and_full_fog_lights_percent_drl) l0 /
            (S.L.lights_ai_test_ctx_standstill_and_full_fog_lights_percent_drl)
        (L.L.lights_ai_test_ctx_standstill_and_full_fog_lights_percent) l1 /
            (S.L.lights_ai_test_ctx_standstill_and_full_fog_lights_percent)

        (L.L.lights_ai_test_ctx_headlights_percent_without_drl) l0 / (S.L.lights_ai_test_ctx_headlights_percent_without_drl)
        (L.L.lights_ai_test_ctx_headlights_percent_drl) l0 / (S.L.lights_ai_test_ctx_headlights_percent_drl)
        (L.L.lights_ai_test_ctx_headlights_percent) l1 / (S.L.lights_ai_test_ctx_headlights_percent)

        (L.L.lights_ai_test_ctx_headlights_and_head_fog_lights_percent_without_drl) l0 /
            (S.L.lights_ai_test_ctx_headlights_and_head_fog_lights_percent_without_drl)
        (L.L.lights_ai_test_ctx_headlights_and_head_fog_lights_percent_drl) l0 /
            (S.L.lights_ai_test_ctx_headlights_and_head_fog_lights_percent_drl)
        (L.L.lights_ai_test_ctx_headlights_and_head_fog_lights_percent) l1 /
            (S.L.lights_ai_test_ctx_headlights_and_head_fog_lights_percent)

        (L.L.lights_ai_test_ctx_headlights_and_full_fog_lights_percent_without_drl) l0 /
            (S.L.lights_ai_test_ctx_headlights_and_full_fog_lights_percent_without_drl)
        (L.L.lights_ai_test_ctx_headlights_and_full_fog_lights_percent_drl) l0 /
            (S.L.lights_ai_test_ctx_headlights_and_full_fog_lights_percent_drl)
        (L.L.lights_ai_test_ctx_headlights_and_full_fog_lights_percent) l1 /
            (S.L.lights_ai_test_ctx_headlights_and_full_fog_lights_percent)

        (L.L.lights_ai_test_ctx_ext_on_for_being_seen_percent_without_drl) l0 /
            (S.L.lights_ai_test_ctx_ext_on_for_being_seen_percent_without_drl)
        (L.L.lights_ai_test_ctx_ext_on_for_being_seen_percent_drl) l0 /
            (S.L.lights_ai_test_ctx_ext_on_for_being_seen_percent_drl)
        (L.L.lights_ai_test_ctx_ext_on_for_being_seen_percent) l1 /
            (S.L.lights_ai_test_ctx_ext_on_for_being_seen_percent)

        (L.L.lights_ai_test_ctx_ext_on_for_seeing_reduced_percent_without_drl) l0 /
            (S.L.lights_ai_test_ctx_ext_on_for_seeing_reduced_percent_without_drl)
        (L.L.lights_ai_test_ctx_ext_on_for_seeing_reduced_percent_drl) l0 /
            (S.L.lights_ai_test_ctx_ext_on_for_seeing_reduced_percent_drl)
        (L.L.lights_ai_test_ctx_ext_on_for_seeing_reduced_percent) l1 /
            (S.L.lights_ai_test_ctx_ext_on_for_seeing_reduced_percent)

        (L.L.lights_ai_test_ctx_ext_on_for_seeing_percent_without_drl) l0 /
            (S.L.lights_ai_test_ctx_ext_on_for_seeing_percent_without_drl)
        (L.L.lights_ai_test_ctx_ext_on_for_seeing_percent_drl) l0 / (S.L.lights_ai_test_ctx_ext_on_for_seeing_percent_drl)
        (L.L.lights_ai_test_ctx_ext_on_for_seeing_percent) l1 / (S.L.lights_ai_test_ctx_ext_on_for_seeing_percent)

        (L.L.lights_ai_test_ctx_ext_on_for_seeing_adverse_percent_without_drl) l0 /
            (S.L.lights_ai_test_ctx_ext_on_for_seeing_adverse_percent_without_drl)
        (L.L.lights_ai_test_ctx_ext_on_for_seeing_adverse_percent_drl) l0 /
            (S.L.lights_ai_test_ctx_ext_on_for_seeing_adverse_percent_drl)
        (L.L.lights_ai_test_ctx_ext_on_for_seeing_adverse_percent) l1 /
            (S.L.lights_ai_test_ctx_ext_on_for_seeing_adverse_percent)

        (L.L.lights_ai_test_ctx_ext_off_when_engine_off_percent_without_drl) l0 /
            (S.L.lights_ai_test_ctx_ext_off_when_engine_off_percent_without_drl)
        (L.L.lights_ai_test_ctx_ext_off_when_engine_off_percent_drl) l0 /
            (S.L.lights_ai_test_ctx_ext_off_when_engine_off_percent_drl)
        (L.L.lights_ai_test_ctx_ext_off_when_engine_off_percent) l1 / (S.L.lights_ai_test_ctx_ext_off_when_engine_off_percent)

        (L.L.lights_ai_test_ctx_int_off_percent) l0 / (S.L.lights_ai_test_ctx_int_off_percent)
        (L.L.lights_ai_test_ctx_int_dimmed_percent) l0 / (S.L.lights_ai_test_ctx_int_dimmed_percent)
        (L.L.lights_ai_test_ctx_int_full_percent) l0 / (S.L.lights_ai_test_ctx_int_full_percent)

        (L.L.lights_ai_test_ctx_int_off_when_engine_off_percent) l0 / (S.L.lights_ai_test_ctx_int_off_when_engine_off_percent)
        (L.L.lights_ai_test_ctx_int_off_when_on_service_trip_percent) l0 /
            (S.L.lights_ai_test_ctx_int_off_when_on_service_trip_percent)

        (L.L.lights_ai_test_ctx_ext_on_and_int_off_percent_without_drl) l0 /
            (S.L.lights_ai_test_ctx_ext_on_and_int_off_percent_without_drl)
        (L.L.lights_ai_test_ctx_ext_on_and_int_off_percent_drl) l0 / (S.L.lights_ai_test_ctx_ext_on_and_int_off_percent_drl)
        (L.L.lights_ai_test_ctx_ext_on_and_int_off_percent) l1 / (S.L.lights_ai_test_ctx_ext_on_and_int_off_percent)

        (L.L.lights_ai_test_ctx_ext_off_and_int_on_percent_without_drl) l0 /
            (S.L.lights_ai_test_ctx_ext_off_and_int_on_percent_without_drl)
        (L.L.lights_ai_test_ctx_ext_off_and_int_on_percent_drl) l0 / (S.L.lights_ai_test_ctx_ext_off_and_int_on_percent_drl)
        (L.L.lights_ai_test_ctx_ext_off_and_int_on_percent) l1 / (S.L.lights_ai_test_ctx_ext_off_and_int_on_percent)
    {endif}

    0 (S.L.lights_ai_test_status)
    (T.L.ev_IBIS_pieperror)
{end}

'------------------------------------------------------------------------------
' Generates a new vehicle profile. This macro is normally executed once at the
' first frame since AI takeover, but also multiple times each frame when
' testing mode is active.
'------------------------------------------------------------------------------
{macro:lights_ai_profile_init}
'   // Exterior lighting for-seeing: Solar elevation angle

    10000 random (M.V.NrSpecRandom) 0.05 <
    {if}
        2 s0 3 s1
        10000 random (M.V.NrSpecRandom) 0.1 <
        {if}
            -1 s2
        {else}
            10000 random (M.V.NrSpecRandom) 0.111 <
            {if}
                0.4 s2 0.15 s3
            {else}
                0.58 s2 0.07 s3
            {endif}
        {endif}
    {else}
        10000 random (M.V.NrSpecRandom) 0.316 <
        {if}
            7 s0 3 s1
            0.65 s2 0.1 s3
        {else}
            10000 random (M.V.NrSpecRandom) 0.615 <
            {if}
                10 s0 5 s1
                0.75 s2 0.1 s3
            {else}
                15 s0 5 s1
                0.85 s2 0.07 s3
            {endif}
        {endif}
    {endif}
    l0 10000 random (M.V.NrSpecRandom) l1 * + (S.L.lights_ai_ext_lighting_for_seeing_min_sun_alt)

    10000 random (M.V.NrSpecRandom) 5 * s0
    (L.L.lights_ai_ext_lighting_for_seeing_min_sun_alt) l0 - s0
    (L.L.lights_ai_ext_lighting_for_seeing_min_sun_alt) 5 <
    {if}
        2
    {else}
        4
    {endif}
    l0 max (S.L.lights_ai_ext_lighting_for_seeing_min_sun_alt_drl)

'   // Exterior lighting for-seeing: Prolonged dusk/dawn solar elevation angle under precipitation

    (L.L.lights_ai_ext_lighting_for_seeing_min_sun_alt) 5 10000 random (M.V.NrSpecRandom) 15 * + s1 +
        (S.L.lights_ai_ext_lighting_for_seeing_prolonged_sun_alt_under_precipitation)
    (L.L.lights_ai_ext_lighting_for_seeing_min_sun_alt_drl) l1 0.5 10000 random (M.V.NrSpecRandom) 0.45 * + * +
        (S.L.lights_ai_ext_lighting_for_seeing_prolonged_sun_alt_under_precipitation_drl)

'   // Exterior lighting for-being-seen: Solar elevation angle

    10000 random (M.V.NrSpecRandom) 0.1 <
    {if}
        91
    {else}
        10000 random (M.V.NrSpecRandom) 0.055 <
        {if}
            (L.L.lights_ai_ext_lighting_for_seeing_min_sun_alt) 5 10000 random (M.V.NrSpecRandom) 15 * + +
        {else}
            -91
        {endif}
    {endif}
    (S.L.lights_ai_ext_lighting_for_being_seen_min_sun_alt) s1 -91 = ! 10000 random (M.V.NrSpecRandom) 0.85 < &&
    {if}
        l1 91 =
        {if}
            91
        {else}
            l1 2 10000 random (M.V.NrSpecRandom) 3 * + - (L.L.lights_ai_ext_lighting_for_seeing_min_sun_alt_drl) max
        {endif}
    {else}
        -91
    {endif}
    (S.L.lights_ai_ext_lighting_for_being_seen_min_sun_alt_drl)

'   // Exterior lighting for-reduced-seeing: Solar elevation angle

    10000 random (M.V.NrSpecRandom) 0.05 <
    {if}
        (L.L.lights_ai_ext_lighting_for_seeing_min_sun_alt) 2 10000 random (M.V.NrSpecRandom) 3 * + s1 - -2 max
            (S.L.lights_ai_ext_lighting_for_seeing_reduced_min_sun_alt)
        (L.L.lights_ai_ext_lighting_for_seeing_min_sun_alt_drl) l1 - -2 max (S.L.lights_ai_ext_lighting_for_seeing_reduced_min_sun_alt_drl)
    {else}
        -91 (S.L.lights_ai_ext_lighting_for_seeing_reduced_min_sun_alt) (S.L.lights_ai_ext_lighting_for_seeing_reduced_min_sun_alt_drl)
    {endif}

'   // Exterior lighting for-seeing: Brightness

    l2 -1 =
    {if}
        -1
    {else}
        l2 10000 random (M.V.NrSpecRandom) l3 * +
    {endif}
    (S.L.lights_ai_ext_lighting_for_seeing_min_brightness)

    (L.L.lights_ai_ext_lighting_for_seeing_min_brightness) -1 =
    {if}
        -1
    {else}
        10000 random (M.V.NrSpecRandom) 0.15 * s0
        (L.L.lights_ai_ext_lighting_for_seeing_min_brightness) l0 - s0
        (L.L.lights_ai_ext_lighting_for_seeing_min_sun_alt) 5 <
        {if}
            0.4
        {else}
            0.6
        {endif}
        l0 max
    {endif}
    (S.L.lights_ai_ext_lighting_for_seeing_min_brightness_drl)

'   // Exterior lighting for-reduced-seeing: Brightness

    (L.L.lights_ai_ext_lighting_for_seeing_reduced_min_sun_alt) -91 = !
    {if}
        (L.L.lights_ai_ext_lighting_for_seeing_min_brightness) s1 -1 =
        {if}
            -1 (S.L.lights_ai_ext_lighting_for_seeing_reduced_min_brightness) (S.L.lights_ai_ext_lighting_for_seeing_reduced_min_brightness_drl)
        {else}
            l1 0.5 10000 random (M.V.NrSpecRandom) 0.25 * + s1 * 0.3 max (S.L.lights_ai_ext_lighting_for_seeing_reduced_min_brightness)
            (L.L.lights_ai_ext_lighting_for_seeing_min_brightness_drl) l1 * 0.3 max (S.L.lights_ai_ext_lighting_for_seeing_reduced_min_brightness_drl)
        {endif}
    {endif}

'   // Exterior lighting for-seeing: Rain and snowfall rate

    10000 random (M.V.NrSpecRandom) 0.85 <
    {if}
        0.01 s0 0.04 s1 1 s2
    {else}
        10000 random (M.V.NrSpecRandom) 0.333 <
        {if}
            0.05 s0 0.05 s1 2 s2
        {else}
            10000 random (M.V.NrSpecRandom) 0.5 <
            {if}
                0.1 s0 0.2 s1 3 s2
            {else}
                -1 s0 4 s2
            {endif}
        {endif}
    {endif}

    l2 1 = 10000 random (M.V.NrSpecRandom) 0.7 < &&
    {if}
        0.6
    {else}
        l2 1 = 10000 random (M.V.NrSpecRandom) 0.5 < && l2 2 = 10000 random (M.V.NrSpecRandom) 0.5 < && ||
        {if}
            0.75
        {else}
            l2 1 = l2 2 = 10000 random (M.V.NrSpecRandom) 0.6 < && || l2 3 = 10000 random (M.V.NrSpecRandom) 0.2 < && ||
            {if}
                0.9
            {else}
                -1
            {endif}
        {endif}
    {endif}
    s2

    l0 -1 =
    {if}
        -1
    {else}
        l0 10000 random (M.V.NrSpecRandom) l1 * +
    {endif}
    (S.L.lights_ai_ext_lighting_for_seeing_max_rain_rate)

    l2 -1 =
    {if}
        -1
    {else}
        (L.L.lights_ai_ext_lighting_for_seeing_max_rain_rate) l2 *
    {endif}
    (S.L.lights_ai_ext_lighting_for_seeing_max_snow_rate)

    (L.L.lights_ai_ext_lighting_for_seeing_max_rain_rate) -1 =
    {if}
        -1 (S.L.lights_ai_ext_lighting_for_seeing_max_rain_rate_drl) (S.L.lights_ai_ext_lighting_for_seeing_max_snow_rate_drl)
    {else}
        10000 random (M.V.NrSpecRandom) 0.1 * s3
        (L.L.lights_ai_ext_lighting_for_seeing_max_rain_rate) l3 + (S.L.lights_ai_ext_lighting_for_seeing_max_rain_rate_drl)
        (L.L.lights_ai_ext_lighting_for_seeing_max_snow_rate) -1 =
        {if}
            -1
        {else}
            (L.L.lights_ai_ext_lighting_for_seeing_max_snow_rate) l3 l2 * +
        {endif}
        (S.L.lights_ai_ext_lighting_for_seeing_max_snow_rate_drl)
    {endif}

'   // Exterior lighting for-seeing: Dusk-/dawn-prolonging rain and snowfall rate

    (L.L.lights_ai_ext_lighting_for_seeing_max_rain_rate) s1 -1 =
    {if}
        -1 (S.L.lights_ai_ext_lighting_for_seeing_dusk_dawn_prolonging_rain_rate) (S.L.lights_ai_ext_lighting_for_seeing_dusk_dawn_prolonging_rain_rate_drl)
            (S.L.lights_ai_ext_lighting_for_seeing_dusk_dawn_prolonging_snow_rate) (S.L.lights_ai_ext_lighting_for_seeing_dusk_dawn_prolonging_snow_rate_drl)
    {else}
        0.3 10000 random (M.V.NrSpecRandom) 0.5 * + s3 0.1 10000 random (M.V.NrSpecRandom) 0.1 * + + s4
        l1 l3 * (S.L.lights_ai_ext_lighting_for_seeing_dusk_dawn_prolonging_rain_rate)
        (L.L.lights_ai_ext_lighting_for_seeing_max_rain_rate_drl) l4 * (S.L.lights_ai_ext_lighting_for_seeing_dusk_dawn_prolonging_rain_rate_drl)
        (L.L.lights_ai_ext_lighting_for_seeing_max_snow_rate) s1 -1 =
        {if}
            -1 (S.L.lights_ai_ext_lighting_for_seeing_dusk_dawn_prolonging_snow_rate)
                (S.L.lights_ai_ext_lighting_for_seeing_dusk_dawn_prolonging_snow_rate_drl)
        {else}
            l1 l3 * (S.L.lights_ai_ext_lighting_for_seeing_dusk_dawn_prolonging_snow_rate)
            (L.L.lights_ai_ext_lighting_for_seeing_max_snow_rate_drl) l4 * (S.L.lights_ai_ext_lighting_for_seeing_dusk_dawn_prolonging_snow_rate_drl)
        {endif}
    {endif}

    (L.L.lights_ai_ext_lighting_for_seeing_reduced_min_sun_alt) -91 = !
    {if}
        (L.L.lights_ai_ext_lighting_for_seeing_max_rain_rate) -1 =
        {if}
            -1 (S.L.lights_ai_ext_lighting_for_seeing_reduced_max_rain_rate) (S.L.lights_ai_ext_lighting_for_seeing_reduced_max_rain_rate_drl)
                (S.L.lights_ai_ext_lighting_for_seeing_reduced_max_snow_rate) (S.L.lights_ai_ext_lighting_for_seeing_reduced_max_snow_rate_drl)
        {else}
            0.3 10000 random (M.V.NrSpecRandom) 0.2 * + s3 0.1 10000 random (M.V.NrSpecRandom) 0.1 * + + s4
            (L.L.lights_ai_ext_lighting_for_seeing_dusk_dawn_prolonging_rain_rate) l3 *
                (S.L.lights_ai_ext_lighting_for_seeing_reduced_max_rain_rate)
            (L.L.lights_ai_ext_lighting_for_seeing_dusk_dawn_prolonging_rain_rate_drl) l4 *
                (S.L.lights_ai_ext_lighting_for_seeing_reduced_max_rain_rate_drl)
            (L.L.lights_ai_ext_lighting_for_seeing_max_snow_rate) -1 =
            {if}
                -1 (S.L.lights_ai_ext_lighting_for_seeing_reduced_max_snow_rate)
                    (S.L.lights_ai_ext_lighting_for_seeing_reduced_max_snow_rate_drl)
            {else}
                (L.L.lights_ai_ext_lighting_for_seeing_dusk_dawn_prolonging_snow_rate) l3 *
                    (S.L.lights_ai_ext_lighting_for_seeing_reduced_max_snow_rate)
                (L.L.lights_ai_ext_lighting_for_seeing_dusk_dawn_prolonging_snow_rate_drl) l4 *
                    (S.L.lights_ai_ext_lighting_for_seeing_reduced_max_snow_rate_drl)
            {endif}
        {endif}
    {endif}

'   // Brightness perception influenced by season and/or temperature?

    10000 random (M.V.NrSpecRandom) 0.05 < (S.L.lights_ai_brightness_is_season_dependent) 10000 random (M.V.NrSpecRandom) 0.3 < ||
        (S.L.lights_ai_brightness_is_temperature_dependent)

'   // Exterior lighting for-adverse-seeing: Brightness, and rain and snowfall rate

    10000 random (M.V.NrSpecRandom) 0.9 <
    {if}
        (L.L.lights_ai_ext_lighting_for_seeing_min_brightness) s1 -1 =
        {if}
            -1 (S.L.lights_ai_ext_lighting_for_seeing_adverse_min_brightness) (S.L.lights_ai_ext_lighting_for_seeing_adverse_min_brightness_drl)
        {else}
            l1 0.5 10000 random (M.V.NrSpecRandom) 0.2 * + * (S.L.lights_ai_ext_lighting_for_seeing_adverse_min_brightness)
                (L.L.lights_ai_ext_lighting_for_seeing_min_brightness_drl) min (S.L.lights_ai_ext_lighting_for_seeing_adverse_min_brightness_drl)
        {endif}

        (L.L.lights_ai_ext_lighting_for_seeing_max_rain_rate) s1 -1 =
        {if}
            -1 (S.L.lights_ai_ext_lighting_for_seeing_adverse_max_rain_rate) (S.L.lights_ai_ext_lighting_for_seeing_adverse_max_snow_rate)
                (S.L.lights_ai_ext_lighting_for_seeing_adverse_max_rain_rate_drl)
                (S.L.lights_ai_ext_lighting_for_seeing_adverse_max_snow_rate_drl)
        {else}
            l1 1.1 10000 random (M.V.NrSpecRandom) 0.5 * + s2 * (S.L.lights_ai_ext_lighting_for_seeing_adverse_max_rain_rate)
                (L.L.lights_ai_ext_lighting_for_seeing_max_rain_rate_drl) max (S.L.lights_ai_ext_lighting_for_seeing_adverse_max_rain_rate_drl)
            (L.L.lights_ai_ext_lighting_for_seeing_max_snow_rate) s1 -1 =
            {if}
                -1 (S.L.lights_ai_ext_lighting_for_seeing_adverse_max_snow_rate) (S.L.lights_ai_ext_lighting_for_seeing_adverse_max_snow_rate_drl)
            {else}
                l2 l1 * (S.L.lights_ai_ext_lighting_for_seeing_adverse_max_snow_rate) (L.L.lights_ai_ext_lighting_for_seeing_max_snow_rate_drl) max
                    (S.L.lights_ai_ext_lighting_for_seeing_adverse_max_snow_rate_drl)
            {endif}
        {endif}

        (L.L.lights_ai_ext_lighting_for_seeing_min_brightness) -1 = ! (L.L.lights_ai_ext_lighting_for_seeing_adverse_max_rain_rate) -1 = ! ||
            10000 random (M.V.NrSpecRandom) 0.75 < 2 * 1 max * (S.L.lights_ai_ext_lighting_increase_under_adverse)
    {else}
        0 (S.L.lights_ai_ext_lighting_increase_under_adverse)
    {endif}

'   // Exterior lighting for-being-seen: Light source usage preference

    (L.L.lights_ai_ext_lighting_for_being_seen_min_sun_alt) -91 = !
    {if}
        10000 random (M.V.NrSpecRandom) 0.75 < s0
        {if}
            4 s1
            0.1 s2
        {else}
            1 s1
            0.35 s2
        {endif}
        l1 10000 random (M.V.NrSpecRandom) l2 < s2 + (S.L.lights_ai_ext_lighting_for_being_seen_usage_preference)

        l0 10000 random (M.V.NrSpecRandom) 0.6 < &&
        {if}
            4 s1
            l2 0.5 * s2
        {else}
            1 s1
            l2 0.5 * s2
        {endif}
        l1 10000 random (M.V.NrSpecRandom) l2 < + (S.L.lights_ai_ext_lighting_for_being_seen_usage_preference_drl)
    {endif}

'   // Exterior lighting for-reduced-seeing: Light source usage preference

    (L.L.lights_ai_ext_lighting_for_seeing_reduced_min_sun_alt) -91 = !
    {if}
        0 s1
        (L.L.lights_ai_ext_lighting_for_being_seen_min_sun_alt) -91 = ! s0
        {if}
            (L.L.lights_ai_ext_lighting_for_being_seen_usage_preference) s1 4 >= s0
            l1 2 = l1 5 = || s1
        {endif}

        l0 10000 random (M.V.NrSpecRandom) 0.95 < && s0
        {if}
            4 s2
            l1
            {if}
                0.5
            {else}
                0.2
            {endif}
            s3
        {else}
            1 s2
            l1
            {if}
                0.75
            {else}
                0.5
            {endif}
            s3
        {endif}
        l2 10000 random (M.V.NrSpecRandom) l3 < s2 + (S.L.lights_ai_ext_lighting_for_seeing_reduced_usage_preference)

        l0 10000 random (M.V.NrSpecRandom) 0.95 < &&
        {if}
            4 s2
            l2 0.5 * s3
        {else}
            1 s2
            l2 0.75 * s3
        {endif}
        l2 10000 random (M.V.NrSpecRandom) l3 < + (S.L.lights_ai_ext_lighting_for_seeing_reduced_usage_preference_drl)
    {endif}

'   // Exterior lighting for-seeing: Light source usage preference

    (L.L.lights_ai_ext_lighting_for_seeing_reduced_min_sun_alt) -91 = !
    {if}
        (L.L.lights_ai_ext_lighting_for_seeing_reduced_usage_preference)
    {else}
        (L.L.lights_ai_ext_lighting_for_being_seen_min_sun_alt) -91 = !
        {if}
            (L.L.lights_ai_ext_lighting_for_being_seen_usage_preference)
        {else}
            0
        {endif}
    {endif}
    s0 2 = l0 5 = || 10000 random (M.V.NrSpecRandom) 0.5 < && 10000 random (M.V.NrSpecRandom) 0.1 < || s0
    4 l0 + (S.L.lights_ai_ext_lighting_for_seeing_usage_preference) (S.L.lights_ai_ext_lighting_for_seeing_usage_preference_drl)

'   // Exterior lighting for-adverse-seeing: Light source usage preference

    0 s0 s1
    (L.L.lights_ai_ext_lighting_increase_under_adverse)
    {if}
        10000 random (M.V.NrSpecRandom) 0.95 < (L.L.lights_ai_ext_lighting_for_seeing_usage_preference) 5 = || s0
        {if}
            10000 random (M.V.NrSpecRandom) 0.85 < s1
        {endif}
    {endif}
    4 l0 + l1 + (S.L.lights_ai_ext_lighting_for_seeing_adverse_usage_preference)

'   // Temporary engine-based exterior lighting deactivation: Solar elevation angle, brightness, and rain and snowfall
'   // rate.

    10000 random (M.V.NrSpecRandom) 0.3 <
    {if}
        (L.L.lights_ai_ext_lighting_for_seeing_min_sun_alt) 2 10000 random (M.V.NrSpecRandom) 8 * + s5 - s6
            (S.L.lights_ai_ext_lighting_off_when_engine_off_day_night_differentiating_sun_alt)

        10000 random (M.V.NrSpecRandom) 0.85 <
        {if}
            (L.L.lights_ai_ext_lighting_for_seeing_min_sun_alt_drl) l5 0.3 10000 random (M.V.NrSpecRandom) 0.45 * + * - l6 max
        {else}
            91
        {endif}
        (S.L.lights_ai_ext_lighting_off_when_engine_off_day_night_differentiating_sun_alt_drl)

        0 s2
        0.05 10000 random (M.V.NrSpecRandom) 0.45 * + s5
        (L.L.lights_ai_ext_lighting_for_seeing_min_brightness) -1 =
        {if}
            -1
        {else}
            (L.L.lights_ai_ext_lighting_for_seeing_min_brightness) l5 - s6 0 <
            {if}
                -1
            {else}
                l6
            {endif}
        {endif}
        (S.L.lights_ai_ext_lighting_off_when_engine_off_min_brightness) -1 = (L.L.lights_ai_ext_lighting_for_seeing_min_brightness_drl) -1 = ||
        {if}
            -1
        {else}
            (L.L.lights_ai_ext_lighting_for_seeing_min_brightness_drl) l5 0.3 10000 random (M.V.NrSpecRandom) 0.45 * + * - l6 max
        {endif}
        (S.L.lights_ai_ext_lighting_off_when_engine_off_min_brightness_drl)

        0.05 10000 random (M.V.NrSpecRandom) 0.05 * + s4 0.6 10000 random (M.V.NrSpecRandom) 0.2 * + * s6
        (L.L.lights_ai_ext_lighting_for_seeing_max_rain_rate) s2 -1 =
        {if}
            -1 (S.L.lights_ai_ext_lighting_off_when_engine_off_max_rain_rate) (S.L.lights_ai_ext_lighting_off_when_engine_off_max_snow_rate)
        {else}
            l2 l4 + s5 (S.L.lights_ai_ext_lighting_off_when_engine_off_max_rain_rate)
            (L.L.lights_ai_ext_lighting_for_seeing_max_snow_rate) s3 -1 =
            {if}
                -1
            {else}
                l3 l6 + s7
            {endif}
            (S.L.lights_ai_ext_lighting_off_when_engine_off_max_snow_rate)
        {endif}

        (L.L.lights_ai_ext_lighting_off_when_engine_off_max_rain_rate) -1 = (L.L.lights_ai_ext_lighting_for_seeing_max_rain_rate_drl) -1 = ||
        {if}
            -1 (S.L.lights_ai_ext_lighting_off_when_engine_off_max_rain_rate_drl) (S.L.lights_ai_ext_lighting_off_when_engine_off_max_snow_rate_drl)
        {else}
            (L.L.lights_ai_ext_lighting_for_seeing_max_rain_rate_drl) l4 0.3 10000 random (M.V.NrSpecRandom) 0.45 * + * s4 + l5 min
                (S.L.lights_ai_ext_lighting_off_when_engine_off_max_rain_rate_drl)
            (L.L.lights_ai_ext_lighting_off_when_engine_off_max_snow_rate) -1 = (L.L.lights_ai_ext_lighting_for_seeing_max_snow_rate_drl) -1 = ||
            {if}
                -1
            {else}
                (L.L.lights_ai_ext_lighting_for_seeing_max_snow_rate_drl) l6 + l7 min
            {endif}
            (S.L.lights_ai_ext_lighting_off_when_engine_off_max_snow_rate_drl)
        {endif}

        10000 random (M.V.NrSpecRandom) 0.333 < (S.L.lights_ai_ext_lighting_off_when_engine_off_at_nighttime) l0 &&
            (S.L.lights_ai_ext_lighting_off_when_engine_off_at_nighttime_drl)
    {else}
        91 (S.L.lights_ai_ext_lighting_off_when_engine_off_day_night_differentiating_sun_alt)
            (S.L.lights_ai_ext_lighting_off_when_engine_off_day_night_differentiating_sun_alt_drl)
    {endif}

'   // Interior lighting: Solar elevation angle and brightness

    (L.L.lights_ai_ext_lighting_for_being_seen_min_sun_alt_drl) 91 = s0 10000 random (M.V.NrSpecRandom) 0.3 < &&
    {if}
        2 s0
        91 (S.L.lights_ai_int_lighting_min_sun_alt)
    {endif}
    l0 2 <
    {if}
        l0 1 =
        {if}
            10 10000 random (M.V.NrSpecRandom) 10 * + s0
            0.7 10000 random (M.V.NrSpecRandom) 0.2 * + s1
        {else}
            (L.L.lights_ai_ext_lighting_for_seeing_min_sun_alt_drl) s0
            (L.L.lights_ai_ext_lighting_for_seeing_min_brightness_drl) s1 -1 =
            {if}
                -1 s1
            {endif}
        {endif}

        10000 random (M.V.NrSpecRandom) 0.97 < s2
        {if}
            l0 10000 random (M.V.NrSpecRandom) 10 * - 1 max (S.L.lights_ai_int_lighting_min_sun_alt)
            l1 -1 =
            {if}
                -1
            {else}
                l1 10000 random (M.V.NrSpecRandom) 0.15 * - 0.25 max
            {endif}
            (S.L.lights_ai_int_lighting_min_brightness)
        {else}
            l0 10000 random (M.V.NrSpecRandom) 10 * + (S.L.lights_ai_int_lighting_min_sun_alt)
            l1 -1 =
            {if}
                0.25 s1
            {endif}
            l1 10000 random (M.V.NrSpecRandom) 0.15 * + 0.9 min (S.L.lights_ai_int_lighting_min_brightness)
        {endif}
    {endif}

'   // Interior lighting: Light source usage preference

    10000 random (M.V.NrSpecRandom) 0.4 <
    {if}
        1
    {else}
        10000 random (M.V.NrSpecRandom) 0.8333 <
        {if}
            -2 10000 random (M.V.NrSpecRandom) 10 * + (S.L.lights_ai_int_lighting_dimmed_min_sun_alt)
            0.25 10000 random (M.V.NrSpecRandom) 0.45 * + (S.L.lights_ai_int_lighting_dimmed_min_brightness)
            2
        {else}
            3
        {endif}
    {endif}
    (S.L.lights_ai_int_lighting_dimming_preference)

'   // Temporary service-trip- and engine-based interior lighting deactivation: Time of day, solar elevation angle, and
'   // brightness

    10000 random (M.V.NrSpecRandom) 0.3 < s0 10000 random (M.V.NrSpecRandom) 0.857 < ||
    {if}
        4 10000 random (M.V.NrSpecRandom) 4 * + 3600 * (S.L.lights_ai_int_lighting_off_during_service_trip_day_night_differentiating_time_low)
        10000 random (M.V.NrSpecRandom) 0.8 <
        {if}
            20.5 10000 random (M.V.NrSpecRandom) 3.4 * +
        {else}
            10000 random (M.V.NrSpecRandom) 2 *
        {endif}
        3600 * (S.L.lights_ai_int_lighting_off_during_service_trip_day_night_differentiating_time_high)

        -5 10000 random (M.V.NrSpecRandom) 10 * + (S.L.lights_ai_int_lighting_off_during_service_trip_day_night_differentiating_sun_alt)

        91 s1
        l0 (S.L.lights_ai_int_lighting_off_during_service_trip_at_daytime)
        {if}
            10000 random (M.V.NrSpecRandom) 0.25 <
            {if}
                (L.L.lights_ai_int_lighting_min_sun_alt) s1 91 = !
                {if}
                    l1 2 10000 random (M.V.NrSpecRandom) 5 * + - 2 max
                {else}
                    10 10000 random (M.V.NrSpecRandom) 10 * +
                {endif}
                s1
                (L.L.lights_ai_int_lighting_min_brightness) -1 =
                {if}
                    -1
                {else}
                    (L.L.lights_ai_int_lighting_min_brightness) 0.05 10000 random (M.V.NrSpecRandom) 0.25 * + - 0.3 max
                {endif}
                (S.L.lights_ai_int_lighting_off_when_engine_off_min_brightness)
                -1
            {else}
                0.3 10000 random (M.V.NrSpecRandom) 0.4 * +
            {endif}
            (S.L.lights_ai_int_lighting_off_during_service_trip_dark_bright_differentiating_brightness)
        {endif}
        l1 (S.L.lights_ai_int_lighting_off_when_engine_off_min_sun_alt) 91 = !
        {if}
            10000 random (M.V.NrSpecRandom) 0.25 < (S.L.lights_ai_int_lighting_off_when_engine_off_env_override_if_no_passengers_on_board)
        {endif}
    {else}
        91 (S.L.lights_ai_int_lighting_off_during_service_trip_day_night_differentiating_sun_alt)
            (S.L.lights_ai_int_lighting_off_when_engine_off_min_sun_alt)
    {endif}
{end}

'------------------------------------------------------------------------------
' Acquisition of primitive environmental conditions.
'------------------------------------------------------------------------------
{macro:lights_ai_env}
    (M.L.lights_ai_sun_alt)
    (M.L.lights_ai_weather)
    (M.L.lights_ai_brightness)
{end}

'------------------------------------------------------------------------------
' Acquisition of solar elevation angle.
'------------------------------------------------------------------------------
{macro:lights_ai_sun_alt}
    (L.L.lights_ai_test_status) s0 0 = l0 1 = s0 ||
    {if}
        (L.S.SunAlt) -90 max 90 min (S.L.lights_ai_sun_alt)
        l0
        {if}
            (L.L.lights_ai_sun_alt) (S.L.lights_ai_test_ctx_sun_alt)
        {endif}
    {endif}
{end}

'------------------------------------------------------------------------------
' Acquisition of temperature and precipitation.
'------------------------------------------------------------------------------
{macro:lights_ai_weather}
    (L.L.lights_ai_test_status) s0 0 = l0 1 = s0 ||
    {if}
        l0
        {if}
            (L.S.Weather_Temperature) (S.L.lights_ai_test_ctx_env_temp)
        {endif}

        (L.L.PrecipType) 0 max 2 min (S.L.lights_ai_precip_type)
        (L.L.PrecipRate) 0 max (S.L.lights_ai_env_wetness)
        l0
        {if}
            (L.L.lights_ai_precip_type) (S.L.lights_ai_test_ctx_precip_type)
            (L.L.lights_ai_env_wetness) (S.L.lights_ai_test_ctx_env_wetness)
        {endif}
    {endif}
{end}

'------------------------------------------------------------------------------
' Acquisition of environmental brightness.
'------------------------------------------------------------------------------
{macro:lights_ai_brightness}
    (L.L.lights_ai_sun_alt) s0
    (L.L.lights_ai_test_status) s1 0 = l1 1 = s1 ||
    {if}
        l1 !
        {if}
            (L.L.AI_Light) 0 max (S.L.lights_ai_ai_light)
        {endif}
        l1
        {if}
            (L.L.lights_ai_ai_light) (S.L.lights_ai_test_ctx_ai_light)
            (L.L.Envir_Brightness) (S.L.lights_ai_test_ctx_env_brightness_omsi)

            l0 (F.L.lights_ai_env_brightness_overcast_pessimistic_min_f_solar_elevation_angle) s1 (M.L.lights_ai_brightness_0)
                l1 (S.L.lights_ai_test_ctx_env_brightness_pessimistic_min)
            l0 (F.L.lights_ai_env_brightness_overcast_optimistic_min_f_solar_elevation_angle) s1 (M.L.lights_ai_brightness_0)
                l1 (S.L.lights_ai_test_ctx_env_brightness_optimistic_min)
        {endif}
    {endif}
    (L.L.lights_ai_test_status) 1 = !
    {if}
        (L.L.lights_ai_ext_lighting_for_seeing_min_sun_alt) 5 >
        {if}
            l0 (F.L.lights_ai_env_brightness_overcast_pessimistic_min_f_solar_elevation_angle)
        {else}
            l0 (F.L.lights_ai_env_brightness_overcast_optimistic_min_f_solar_elevation_angle)
        {endif}
        s1 (M.L.lights_ai_brightness_0) l1 (S.L.lights_ai_env_brightness)
    {endif}
{end}

'------------------------------------------------------------------------------
' Normalization of environmental brightness.
'------------------------------------------------------------------------------
{macro:lights_ai_brightness_0}
    (L.L.lights_ai_ai_light) 0 max
    {if}
        l1
    {else}
        (L.L.Envir_Brightness) l1 max 1 min l0 (F.L.lights_ai_env_brightness_ideal_max_f_solar_elevation_angle) min
    {endif}
    (L.L.lights_ai_env_wetness) (F.L.lights_ai_env_brightness_reduction_f_env_wetness) - 0 max s1

    (L.L.lights_ai_brightness_is_season_dependent)
    {if}
        l1 (L.S.Month) 1 max 12 min (F.L.lights_ai_env_brightness_reduction_factor_f_month) * s1
    {endif}

    (L.L.lights_ai_brightness_is_temperature_dependent)
    {if}
        l1 (L.S.Weather_Temperature) (F.L.lights_ai_env_brightness_reduction_f_temp) * s1
    {endif}
{end}

'------------------------------------------------------------------------------
' This macro computes, given the current primitive environment conditions and
' the vehicle's profile, the current effective conditions. When the latter
' differ from the ones established during the previous frame's execution, the
' macro is additionally responsible for translating the vehicle's usage
' preferences for the now-effective conditions into, ultimately, vehicle
' lighting state, in coordination with the cockpit script. When this macro is
' executed in the context of the testing mode, the last step (of actually
' actualizing vehicle state) is skipped, with merely the intended outcome
' being recorded.
'------------------------------------------------------------------------------
{macro:lights_ai_profile_apply}
'   // Note: During the initialization phase, that is, when control is first transfered to the AI, whether at vehicle
'   //       spawn time or subsequently, the process of "profile application" described above is deferred for the third
'   //       frame succeeding initialization. This happens to work around the situation of OMSI failing to correctly
'   //       expose variables such as PrecipRate, oftentimes leading to incorrect vehicle initialization. It is for
'   //       that exact reason that the user may witness newly-spawned AI vehicles taking "a split second" longer to
'   //       switch their lights on (e.g. at nighttime).

    (L.L.lights_ai_initialized) 2 =
    {if}
        (L.L.lights_ai_test_status) !
        {if}
            (L.L.lights_cfg_effective_has_head_fog_lights) (S.L.lights_ai_head_fog_lights_installed)
            (L.L.lights_cfg_effective_has_drl) (S.L.lights_ai_drl_installed)
'           // XXX: Nasty circular initialization dependency between ai_pre_cockpit, lights_ai, and cockpit. See
'           //      explanation in ai_pre_cockpit:frame.
            (L.L.ai_pre_cockpit_initialized) 5 >=
            {if}
                (L.L.AI_Engine) 1 = (L.L.ai_pre_cockpit_engine_target) && (L.L.ai_pre_cockpit_transmission_target) &&
            {else}
                (L.L.AI_Engine) 1 =
            {endif}
            (S.L.lights_ai_ai_engine)
        {endif}

        (M.L.lights_ai_context)
        (M.L.lights_ai_adjustment_tolerance)
    {else}
        (L.L.lights_ai_initialized) 1 =
        {if}
            1 10000 random (M.V.NrSpecRandom) 30 * + (S.L.lights_ai_ext_lighting_darkness_tolerance)
            1 10000 random (M.V.NrSpecRandom) 30 * + (S.L.lights_ai_int_lighting_darkness_tolerance)
            300 10000 random (M.V.NrSpecRandom) 300 * + (S.L.lights_ai_ext_lighting_brightness_tolerance)
            300 10000 random (M.V.NrSpecRandom) 300 * + (S.L.lights_ai_int_lighting_brightness_tolerance)

            0 (S.L.lights_ai_arrived_at_prolonged_stop) (S.L.lights_ai_prolonged_stop_fast_headlight_deactivation)

            (L.L.ai_pre_cockpit_initial_spawn_as_ai_vehicle) 1 = (L.L.lights_ai_test_status) ||
            {if}
                0 (S.L.lights_ai_ext_lighting_on_timer) (S.L.lights_ai_int_lighting_darker_or_on_timer) (S.L.lights_ai_ext_lighting_off_timer)
                    (S.L.lights_ai_int_lighting_brighter_or_off_timer)
            {else}
                (L.L.cp_light_sw) s0
                {if}
                    l0 2 =
                    {if}
                        4
                    {else}
                        1
                    {endif}
                    (L.L.cp_fog_light_sw) +
                {else}
                    0
                {endif}
                (S.L.lights_ai_ext_lighting)
                (L.L.cp_passenger_light_sw) (S.L.lights_ai_int_lighting)

                -5 (S.L.lights_ai_ext_lighting_env_perception)
                -1 (S.L.lights_ai_int_lighting_env_perception)

                1 10000 random (M.V.NrSpecRandom) 4 * + (S.L.lights_ai_ext_lighting_on_timer)
                1 10000 random (M.V.NrSpecRandom) 4 * + (S.L.lights_ai_int_lighting_darker_or_on_timer)
                1 10000 random (M.V.NrSpecRandom) 4 * + (S.L.lights_ai_ext_lighting_off_timer)
                1 10000 random (M.V.NrSpecRandom) 4 * + (S.L.lights_ai_int_lighting_brighter_or_off_timer)
            {endif}

            2 (S.L.lights_ai_initialized)
        {else}
            (L.L.lights_ai_initialized) !
            {if}
                1 (S.L.lights_ai_initialized)
            {endif}
        {endif}
    {endif}
{end}

'------------------------------------------------------------------------------
' This macro serves as the entry point of effective condition evaluation.
'------------------------------------------------------------------------------
{macro:lights_ai_context}
    (M.L.lights_ai_ext_lighting_context_evaluate)
    (M.L.lights_ai_ext_lighting_context_translate)
    (M.L.lights_ai_int_lighting_context_evaluate)
    (M.L.lights_ai_int_lighting_context_translate)
    (M.L.lights_ai_engine_dependent_lighting_context_evaluate_and_translate)
    (M.L.lights_ai_service_trip_dependent_lighting_context_evaluate_and_translate)
{end}

'------------------------------------------------------------------------------
' Evaluates the vehicle's exterior lighting activation conditions, given the
' current primitive environmental conditions.
'------------------------------------------------------------------------------
{macro:lights_ai_ext_lighting_context_evaluate}
    (L.L.lights_ai_drl_installed)
    {if}
        (L.L.lights_ai_ext_lighting_for_seeing_min_sun_alt_drl) s1
        (L.L.lights_ai_ext_lighting_for_seeing_min_brightness_drl) s2
        (L.L.lights_ai_ext_lighting_for_seeing_max_rain_rate_drl) s3
        (L.L.lights_ai_ext_lighting_for_seeing_dusk_dawn_prolonging_rain_rate_drl) s4
        (L.L.lights_ai_ext_lighting_for_seeing_max_snow_rate_drl) s5
        (L.L.lights_ai_ext_lighting_for_seeing_dusk_dawn_prolonging_snow_rate_drl) s6
        (L.L.lights_ai_ext_lighting_for_seeing_prolonged_sun_alt_under_precipitation_drl) s7
    {else}
        (L.L.lights_ai_ext_lighting_for_seeing_min_sun_alt) s1
        (L.L.lights_ai_ext_lighting_for_seeing_min_brightness) s2
        (L.L.lights_ai_ext_lighting_for_seeing_max_rain_rate) s3
        (L.L.lights_ai_ext_lighting_for_seeing_dusk_dawn_prolonging_rain_rate) s4
        (L.L.lights_ai_ext_lighting_for_seeing_max_snow_rate) s5
        (L.L.lights_ai_ext_lighting_for_seeing_dusk_dawn_prolonging_snow_rate) s6
        (L.L.lights_ai_ext_lighting_for_seeing_prolonged_sun_alt_under_precipitation) s7
    {endif}

    (L.L.lights_ai_sun_alt) l1 < !
    {if}
        (L.L.lights_ai_env_brightness) l2 < !
        {if}
            (L.L.lights_ai_precip_type) 1 = l3 -1 = ! && (L.L.lights_ai_env_wetness) l3 > &&
                (L.L.lights_ai_precip_type) 2 = l5 -1 = ! && (L.L.lights_ai_env_wetness) l5 > && || !
            {if}
                (L.L.lights_ai_precip_type) 1 = l3 -1 = ! && (L.L.lights_ai_env_wetness) l4 > &&
                    (L.L.lights_ai_precip_type) 2 = l5 -1 = ! && (L.L.lights_ai_env_wetness) l6 > && ||
                    (L.L.lights_ai_sun_alt) l7 < && !
            {endif}
        {endif}
    {endif}
    ! 3 * s0
    {if}
        (L.L.lights_ai_ext_lighting_increase_under_adverse) 2 = (L.L.lights_ai_ext_lighting_increase_under_adverse) 1 =
            (L.L.lights_ai_sun_alt) l1 < && ||
        {if}
            (L.L.lights_ai_drl_installed)
            {if}
                (L.L.lights_ai_ext_lighting_for_seeing_adverse_min_brightness_drl) s1
                (L.L.lights_ai_ext_lighting_for_seeing_adverse_max_rain_rate_drl) s2
                (L.L.lights_ai_ext_lighting_for_seeing_adverse_max_snow_rate_drl) s3
            {else}
                (L.L.lights_ai_ext_lighting_for_seeing_adverse_min_brightness) s1
                (L.L.lights_ai_ext_lighting_for_seeing_adverse_max_rain_rate) s2
                (L.L.lights_ai_ext_lighting_for_seeing_adverse_max_snow_rate) s3
            {endif}

            (L.L.lights_ai_env_brightness) l1 <
                (L.L.lights_ai_precip_type) 1 = l2 -1 = ! && (L.L.lights_ai_env_wetness) l2 > &&
                (L.L.lights_ai_precip_type) 2 = l3 -1 = ! && (L.L.lights_ai_env_wetness) l3 > && || &&
            {if}
                4 s0
            {endif}
        {endif}

        l0 3 =
        {if}
            (L.L.lights_ai_ext_lighting_for_seeing_reduced_min_sun_alt) -91 = !
            {if}
                (L.L.lights_ai_drl_installed)
                {if}
                    (L.L.lights_ai_ext_lighting_for_seeing_reduced_min_sun_alt_drl) s1
                    (L.L.lights_ai_ext_lighting_for_seeing_reduced_min_brightness_drl) s2
                    (L.L.lights_ai_ext_lighting_for_seeing_reduced_max_rain_rate_drl) s3
                    (L.L.lights_ai_ext_lighting_for_seeing_reduced_max_snow_rate_drl) s4
                {else}
                    (L.L.lights_ai_ext_lighting_for_seeing_reduced_min_sun_alt) s1
                    (L.L.lights_ai_ext_lighting_for_seeing_reduced_min_brightness) s2
                    (L.L.lights_ai_ext_lighting_for_seeing_reduced_max_rain_rate) s3
                    (L.L.lights_ai_ext_lighting_for_seeing_reduced_max_snow_rate) s4
                {endif}

                (L.L.lights_ai_sun_alt) l1 >=
                    (L.L.lights_ai_env_brightness) l2 >= &&
                    (L.L.lights_ai_precip_type) 0 =
                    (L.L.lights_ai_precip_type) 1 = l3 -1 = (L.L.lights_ai_env_wetness) l3 <= || && ||
                    (L.L.lights_ai_precip_type) 2 = l4 -1 = (L.L.lights_ai_env_wetness) l4 <= || && || &&
                {if}
                    2 s0
                {endif}
            {endif}
        {endif}
    {else}
        (L.L.lights_ai_drl_installed)
        {if}
            (L.L.lights_ai_ext_lighting_for_being_seen_min_sun_alt_drl)
        {else}
            (L.L.lights_ai_ext_lighting_for_being_seen_min_sun_alt)
        {endif}
        s1 -91 = ! l1 91 = (L.L.lights_ai_sun_alt) l1 < || &&
        {if}
            1 s0
        {endif}
    {endif}
    l0 (S.L.lights_ai_ext_lighting_env_perception_target)
{end}

'------------------------------------------------------------------------------
' Translates the vehicle's effective conditions regarding exterior lighting to
' target vehicle lighting state, given the vehicle's profile's apposite usage
' preferences.
'------------------------------------------------------------------------------
{macro:lights_ai_ext_lighting_context_translate}
    (L.L.lights_ai_drl_installed) s1
    (L.L.lights_ai_ext_lighting_env_perception_target) s0 3 =
    {if}
        l1
        {if}
            (L.L.lights_ai_ext_lighting_for_seeing_usage_preference_drl)
        {else}
            (L.L.lights_ai_ext_lighting_for_seeing_usage_preference)
        {endif}
    {else}
        l0 0 =
        {if}
            0
        {else}
            l0 1 =
            {if}
                l1
                {if}
                    (L.L.lights_ai_ext_lighting_for_being_seen_usage_preference_drl)
                {else}
                    (L.L.lights_ai_ext_lighting_for_being_seen_usage_preference)
                {endif}
            {else}
                l0 2 =
                {if}
                    l1
                    {if}
                        (L.L.lights_ai_ext_lighting_for_seeing_reduced_usage_preference_drl)
                    {else}
                        (L.L.lights_ai_ext_lighting_for_seeing_reduced_usage_preference)
                    {endif}
                {else}
                    (L.L.lights_ai_ext_lighting_for_seeing_adverse_usage_preference)
                {endif}
            {endif}
        {endif}
    {endif}
    (S.L.lights_ai_ext_lighting_target)
{end}

'------------------------------------------------------------------------------
' Evaluates the vehicle's interior lighting activation conditions, given the
' current primitive environmental conditions.
'------------------------------------------------------------------------------
{macro:lights_ai_int_lighting_context_evaluate}
    (L.L.lights_ai_int_lighting_min_sun_alt) 91 = (L.L.lights_ai_sun_alt) (L.L.lights_ai_int_lighting_min_sun_alt) < || !
    {if}
        (L.L.lights_ai_env_brightness) (L.L.lights_ai_int_lighting_min_brightness) < !
    {endif}
    ! (S.L.lights_ai_int_lighting_env_perception_target)
{end}

'------------------------------------------------------------------------------
' Translates the vehicle's effective conditions regarding interior lighting to
' target vehicle lighting state, given the vehicle's profile's apposite usage
' preferences.
'------------------------------------------------------------------------------
{macro:lights_ai_int_lighting_context_translate}
    (L.L.lights_ai_int_lighting_env_perception_target)
    {if}
        (L.L.lights_ai_int_lighting_dimming_preference) s0 1 =
        {if}
            1
        {else}
            l0 2 =
            {if}
                (L.L.lights_ai_sun_alt) (L.L.lights_ai_int_lighting_dimmed_min_sun_alt) < (L.L.lights_ai_env_brightness)
                    (L.L.lights_ai_int_lighting_dimmed_min_brightness) < ||
                {if}
                    1
                {else}
                    2
                {endif}
            {else}
                2
            {endif}
        {endif}
    {else}
        0
    {endif}
    (S.L.lights_ai_int_lighting_target)
{end}

'------------------------------------------------------------------------------
' Evaluates the vehicle's temporary engine-based exterior and interior lighting
' deactivation conditions, overriding the apposite usage preferences, and, by
' extension, target vehicle state, when they hold true.
'------------------------------------------------------------------------------
{macro:lights_ai_engine_dependent_lighting_context_evaluate_and_translate}
    (L.L.ai_pre_cockpit_initialized) 5 >= (L.L.lights_ai_test_status) ||
    {if}
        (L.L.lights_ai_ai_engine) !
        {if}
            (L.L.lights_ai_drl_installed)
            {if}
                (L.L.lights_ai_ext_lighting_off_when_engine_off_day_night_differentiating_sun_alt_drl) s1
                (L.L.lights_ai_ext_lighting_off_when_engine_off_at_nighttime_drl) s2
                (L.L.lights_ai_ext_lighting_off_when_engine_off_min_brightness_drl) s3
                (L.L.lights_ai_ext_lighting_off_when_engine_off_max_rain_rate_drl) s4
                (L.L.lights_ai_ext_lighting_off_when_engine_off_max_snow_rate_drl) s5
            {else}
                (L.L.lights_ai_ext_lighting_off_when_engine_off_day_night_differentiating_sun_alt) s1
                (L.L.lights_ai_ext_lighting_off_when_engine_off_at_nighttime) s2
                (L.L.lights_ai_ext_lighting_off_when_engine_off_min_brightness) s3
                (L.L.lights_ai_ext_lighting_off_when_engine_off_max_rain_rate) s4
                (L.L.lights_ai_ext_lighting_off_when_engine_off_max_snow_rate) s5
            {endif}

            (L.L.lights_ai_sun_alt) l1 >= l2 || (L.L.Envir_Brightness) l3 >= &&
                (L.L.lights_ai_precip_type) 0 =
                (L.L.lights_ai_precip_type) 1 = l4 -1 = (L.L.lights_ai_env_wetness) l4 <= || && ||
                (L.L.lights_ai_precip_type) 2 = l5 -1 = (L.L.lights_ai_env_wetness) l5 <= || && || &&
                l1 91 = ! &&
            {if}
                -5 (S.L.lights_ai_ext_lighting_env_perception_target)
                0 (S.L.lights_ai_ext_lighting_target)
            {else}
                (L.L.ai_pre_cockpit_transmission_target) ! (L.L.lights_ai_test_status) ! &&
                {if}
                    (L.L.ai_pre_cockpit_engine_target) (L.L.lights_ai_ext_lighting_env_perception) s0 0 < l0 -5 > && ||
                    {if}
                        -5 (L.L.lights_ai_ext_lighting_env_perception_target) + (S.L.lights_ai_ext_lighting_env_perception_target) -1 =
                            (L.L.lights_ai_ext_lighting_target) 6 = &&
                        {if}
                            3
                        {else}
                            1 (L.L.lights_ai_ext_lighting_target) min
                        {endif}
                        (S.L.lights_ai_ext_lighting_target)
                    {endif}
                {endif}
            {endif}

            (L.L.lights_ai_arrived_at_prolonged_stop) ! (L.L.ai_pre_cockpit_engine_target) (L.L.lights_ai_ext_lighting) 4 >= &&
                (L.L.lights_ai_prolonged_stop_fast_headlight_deactivation) ! && s0 || (L.L.lights_ai_ext_lighting_env_perception_target)
                (L.L.lights_ai_ext_lighting_env_perception) < &&
            {if}
                (L.L.lights_ai_ext_lighting_off_timer) 0.3 10000 random 10000 / 15 * + min (S.L.lights_ai_ext_lighting_off_timer)
                l0
                {if}
                    1 (S.L.lights_ai_prolonged_stop_fast_headlight_deactivation)
                {endif}
            {endif}

            (L.L.lights_ai_int_lighting_off_when_engine_off_min_sun_alt) s0 91 = !
            {if}
                (L.L.lights_ai_sun_alt) l0 >=
                    (L.L.lights_ai_env_brightness) (L.L.lights_ai_int_lighting_off_when_engine_off_min_brightness) s1 >= l1 -1 = || &&
                    (L.L.lights_ai_int_lighting_off_when_engine_off_env_override_if_no_passengers_on_board) (L.L.humans_count) ! && ||
                {if}
                    -1 (S.L.lights_ai_int_lighting_env_perception_target)
                    0 (S.L.lights_ai_int_lighting_target)
                {else}
                    (L.L.lights_ai_int_lighting_env_perception_target) (L.L.lights_ai_int_lighting_env_perception) >
                    {if}
                        (L.L.lights_ai_sun_alt) l0 <
                            (L.L.lights_ai_env_brightness) l1 < l1 -1 = ! && ||
                            (L.L.lights_ai_int_lighting_off_when_engine_off_env_override_if_no_passengers_on_board) (L.L.humans_count) && &&
                        {if}
                            (L.L.lights_ai_int_lighting_darker_or_on_timer) 0.3 10000 random 10000 / 15 * + min (S.L.lights_ai_int_lighting_darker_or_on_timer)
                        {endif}
                    {endif}
                {endif}
            {endif}

            (L.L.lights_ai_arrived_at_prolonged_stop) ! (L.L.lights_ai_int_lighting_env_perception) && (L.L.lights_ai_int_lighting_env_perception_target) ! &&
            {if}
                (L.L.lights_ai_int_lighting_brighter_or_off_timer) 0.3 10000 random 10000 / 15 * + min (S.L.lights_ai_int_lighting_brighter_or_off_timer)
            {endif}

            1 (S.L.lights_ai_arrived_at_prolonged_stop)
        {else}
            (L.L.lights_ai_ai_engine) (L.L.lights_ai_arrived_at_prolonged_stop) &&
            {if}
                (L.L.lights_ai_ext_lighting_env_perception_target) (L.L.lights_ai_ext_lighting_env_perception) 0 < &&
                {if}
                    (L.L.ai_pre_cockpit_stop_parking_maneuver_heuristic)
                    {if}
                        5
                    {else}
                        15
                    {endif}
                    10000 random 10000 / * 3 + (L.L.lights_ai_ext_lighting_on_timer) min (S.L.lights_ai_ext_lighting_on_timer)
                {endif}

                (L.L.lights_ai_int_lighting_env_perception_target) (L.L.lights_ai_int_lighting_env_perception) -1 = &&
                    (L.L.ai_pre_cockpit_stop_parking_maneuver_heuristic) ! &&
                {if}
                    (L.L.lights_ai_int_lighting_darker_or_on_timer) 0.3 10000 random 10000 / 15 * + min (S.L.lights_ai_int_lighting_darker_or_on_timer)
                {endif}

                0 (S.L.lights_ai_arrived_at_prolonged_stop) (S.L.lights_ai_prolonged_stop_fast_headlight_deactivation)
            {endif}
        {endif}
    {endif}
{end}

'------------------------------------------------------------------------------
' Evaluates the vehicle's temporary service-trip-based interior lighting
' deactivation conditions, overriding the apposite usage preference, and, by
' extension, target vehicle state, when they hold true.
'------------------------------------------------------------------------------
{macro:lights_ai_service_trip_dependent_lighting_context_evaluate_and_translate}
    (L.L.lights_ai_test_ctx_on_service_trip) s0 !
    {if}
        (M.L.utils_service_trip_heuristic) l0 (L.L.lights_ai_test_status) ! && s0
    {endif}
    l0
    {if}
        (L.L.lights_ai_int_lighting_off_during_service_trip_day_night_differentiating_sun_alt) s0 91 = !
        {if}
            (L.S.Time) s1 (L.L.lights_ai_int_lighting_off_during_service_trip_day_night_differentiating_time_low) s4 <= s2
            l1 (L.L.lights_ai_int_lighting_off_during_service_trip_day_night_differentiating_time_high) s5 >= s3
            l4 l5 <
            {if}
                l2 l3 ||
            {else}
                l2 l3 &&
            {endif}
            (L.L.lights_ai_sun_alt) (L.L.lights_ai_int_lighting_off_during_service_trip_day_night_differentiating_sun_alt) <= &&
                (L.L.lights_ai_int_lighting_off_during_service_trip_at_daytime)
                (L.L.lights_ai_env_brightness) (L.L.lights_ai_int_lighting_off_during_service_trip_dark_bright_differentiating_brightness) s1 <=
                l1 -1 = || && ||
            {if}
                -1 (S.L.lights_ai_int_lighting_env_perception_target)
                0 (S.L.lights_ai_int_lighting_target)
                (L.L.lights_ai_int_lighting_brighter_or_off_timer) 0.3 10000 random 10000 / 15 * + min (S.L.lights_ai_int_lighting_brighter_or_off_timer)
            {endif}
        {endif}
    {endif}
{end}

'------------------------------------------------------------------------------
' Determines how long pending vehicle lighting state adjustments due to
' changing effective conditions are delayed, also synchronizing exterior with
' interior lighting adjustments, and vice versa, when both happen to be queued.
'------------------------------------------------------------------------------
{macro:lights_ai_adjustment_tolerance}
    (L.L.lights_ai_ext_lighting_env_perception_target) (L.L.lights_ai_ext_lighting_env_perception) >
    {if}
        (L.L.lights_ai_ext_lighting_on_timer) s0 (L.L.ai_pre_cockpit_passenger_window_adjustment_phase) ! (L.L.lights_ai_test_status) || &&
        {if}
            l0 (L.L.ai_pre_cockpit_ai_timegap) - 0 max (S.L.lights_ai_ext_lighting_on_timer) s0
        {endif}
        l0 !
        {if}
            (L.L.lights_ai_ext_lighting_env_perception_target) (S.L.lights_ai_ext_lighting_env_perception)
            (L.L.lights_ai_ext_lighting_target) (S.L.lights_ai_ext_lighting)
            1 10000 random 10000 / 30 * + (S.L.lights_ai_ext_lighting_darkness_tolerance) (S.L.lights_ai_ext_lighting_on_timer)
            300 10000 random 10000 / 300 * + (S.L.lights_ai_ext_lighting_brightness_tolerance)
            (L.L.lights_ai_int_lighting_darker_or_on_timer) (L.L.lights_ai_int_lighting_darkness_tolerance) <
                (L.L.ai_pre_cockpit_stop_parking_maneuver_heuristic) ! &&
            {if}
                (L.L.lights_ai_int_lighting_darker_or_on_timer) 0.3 10000 random 10000 / 2 * + min (S.L.lights_ai_int_lighting_darker_or_on_timer)
            {endif}
        {endif}
        (L.L.lights_ai_ext_lighting_brightness_tolerance) (S.L.lights_ai_ext_lighting_off_timer)
    {else}
        (L.L.lights_ai_ext_lighting_env_perception_target) (L.L.lights_ai_ext_lighting_env_perception) <
        {if}
            (L.L.lights_ai_ext_lighting_off_timer) s0 (L.L.ai_pre_cockpit_passenger_window_adjustment_phase) ! (L.L.lights_ai_test_status) || &&
            {if}
                l0 (L.L.ai_pre_cockpit_ai_timegap) - 0 max (S.L.lights_ai_ext_lighting_off_timer) s0
            {endif}
            l0 !
            {if}
                (L.L.lights_ai_ext_lighting_env_perception_target) (S.L.lights_ai_ext_lighting_env_perception)
                (L.L.lights_ai_ext_lighting_target) (S.L.lights_ai_ext_lighting)
                1 10000 random 10000 / 30 * + (S.L.lights_ai_ext_lighting_darkness_tolerance)
                300 10000 random 10000 / 300 * + (S.L.lights_ai_ext_lighting_brightness_tolerance) (S.L.lights_ai_ext_lighting_off_timer)
                (L.L.lights_ai_int_lighting_brighter_or_off_timer) s0 (L.L.lights_ai_int_lighting_brightness_tolerance) s1 <
                    (L.L.lights_ai_prolonged_stop_fast_headlight_deactivation) ! l0 l1 2 / < || &&
                {if}
                    (L.L.lights_ai_int_lighting_brighter_or_off_timer) 0.3 10000 random 10000 / 2 * + min (S.L.lights_ai_int_lighting_brighter_or_off_timer)
                {endif}
            {endif}
            (L.L.lights_ai_ext_lighting_darkness_tolerance) (S.L.lights_ai_ext_lighting_on_timer)
        {else}
            (L.L.lights_ai_ext_lighting_darkness_tolerance) (S.L.lights_ai_ext_lighting_on_timer)
            (L.L.lights_ai_ext_lighting_brightness_tolerance) (S.L.lights_ai_ext_lighting_off_timer)
        {endif}
    {endif}

    (L.L.lights_ai_int_lighting) s1 (L.L.lights_ai_int_lighting_target) s2 = !
    {if}
        l1 1 = ! l2 &&
        {if}
            (L.L.lights_ai_int_lighting_darker_or_on_timer) s0 (L.L.ai_pre_cockpit_passenger_window_adjustment_phase) !
                (L.L.lights_ai_int_lighting_env_perception) -1 = ! (L.L.ai_pre_cockpit_stop_parking_maneuver_heuristic) ! ||
                (L.L.ai_pre_cockpit_stop_parking_maneuver_heuristic) -1 = (L.L.ai_pre_cockpit_stop_phase) 3 >= && || && (L.L.lights_ai_test_status) || &&
            {if}
                l0 (L.L.ai_pre_cockpit_ai_timegap) - 0 max (S.L.lights_ai_int_lighting_darker_or_on_timer) s0
            {endif}
            l0 !
            {if}
                (L.L.lights_ai_int_lighting_env_perception_target) (S.L.lights_ai_int_lighting_env_perception)
                (L.L.lights_ai_int_lighting_target) (S.L.lights_ai_int_lighting)
                1 10000 random 10000 / 30 * + (S.L.lights_ai_int_lighting_darkness_tolerance) (S.L.lights_ai_int_lighting_darker_or_on_timer)
                300 10000 random 10000 / 300 * + (S.L.lights_ai_int_lighting_brightness_tolerance)
                (L.L.lights_ai_ext_lighting_on_timer) (L.L.lights_ai_ext_lighting_darkness_tolerance) <
                {if}
                    (L.L.lights_ai_ext_lighting_on_timer) 0.3 10000 random 10000 / 2 * + min (S.L.lights_ai_ext_lighting_on_timer)
                {endif}
            {endif}
            (L.L.lights_ai_int_lighting_brightness_tolerance) (S.L.lights_ai_int_lighting_brighter_or_off_timer)
        {else}
            (L.L.lights_ai_int_lighting_brighter_or_off_timer) s0 (L.L.ai_pre_cockpit_passenger_window_adjustment_phase) ! (L.L.lights_ai_test_status) || &&
            {if}
                l0 (L.L.ai_pre_cockpit_ai_timegap) - 0 max (S.L.lights_ai_int_lighting_brighter_or_off_timer) s0
            {endif}
            l0 !
            {if}
                (L.L.lights_ai_int_lighting_env_perception_target) (S.L.lights_ai_int_lighting_env_perception)
                (L.L.lights_ai_int_lighting_target) (S.L.lights_ai_int_lighting)
                1 10000 random 10000 / 30 * + (S.L.lights_ai_int_lighting_darkness_tolerance)
                300 10000 random 10000 / 300 * + (S.L.lights_ai_int_lighting_brightness_tolerance) (S.L.lights_ai_int_lighting_brighter_or_off_timer)
                (L.L.lights_ai_ext_lighting_off_timer) (L.L.lights_ai_ext_lighting_brightness_tolerance) <
                {if}
                    (L.L.lights_ai_ext_lighting_off_timer) 0.3 10000 random 10000 / 2 * + min (S.L.lights_ai_ext_lighting_off_timer)
                {endif}
            {endif}
            (L.L.lights_ai_int_lighting_darkness_tolerance) (S.L.lights_ai_int_lighting_darker_or_on_timer)
        {endif}
    {else}
        (L.L.lights_ai_int_lighting_darkness_tolerance) (S.L.lights_ai_int_lighting_darker_or_on_timer)
        (L.L.lights_ai_int_lighting_brightness_tolerance) (S.L.lights_ai_int_lighting_brighter_or_off_timer)
    {endif}
{end}
